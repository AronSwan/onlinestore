{
  "type": "commonjs",
  "name": "caddy-style-shopping-backend",
  "version": "1.0.0",
  "description": "基于 CongoMall 设计的购物网站后端服务",
  "main": "dist/src/main.js",
  "scripts": {
    "build": "nest build",
    "format": "prettier --write \"src/**/*.ts\" \"test/**/*.ts\"",
    "start": "nest start",
    "start:dev": "nest start --watch",
    "start:debug": "nest start --debug --watch",
    "start:prod": "node dist/src/main.js",
    "lint": "eslint \"{src,apps,libs,test}/**/*.ts\" --fix",
    "test": "node scripts/test-runner.cjs",
    "test:unit": "node scripts/test-runner.cjs --unit",
    "test:component": "node scripts/test-runner.cjs --component",
    "test:integration": "node scripts/test-runner.cjs --integration",
    "test:e2e": "node scripts/test-runner.cjs --e2e",
    "test:watch": "node scripts/test-runner.cjs --watch",
    "test:cov": "node scripts/test-runner.cjs --coverage",
    "test:cov:soft": "node ./node_modules/jest/bin/jest.js --config=jest.soft.config.cjs --coverage",
    "test:debug": "node --inspect-brk -r tsconfig-paths/register -r ts-node/register node_modules/.bin/jest --runInBand",
    "test:ci": "node scripts/test-runner.cjs --unit --integration --coverage",
    "security:check": "node scripts/security-check.js",
    "security:check:auth": "node scripts/security-check.js -- --category=auth",
    "security:check:input": "node scripts/security-check.js -- --category=input-validation",
    "security:check:data": "node scripts/security-check.js -- --category=data-security",
    "security:check:db": "node scripts/security-check.js -- --category=database",
    "security:check:web": "node scripts/security-check.js -- --category=web-security",
    "security:check:logging": "node scripts/security-check.js -- --category=logging",
    "security:check:supply-chain": "node scripts/security-check.js -- --category=supply-chain",
    "security:check:audit": "node scripts/security-check.js -- --category=audit",
    "security:report": "node scripts/security-check.js -- --format=json --output=security-report.json",
    "security:sarif": "node scripts/security-check.js -- --format=sarif --output=security-results.sarif",
    "security:fail-high": "node scripts/security-check.js -- --fail-on=high",
    "security:fail-critical": "node scripts/security-check.js -- --fail-on=critical",
    "security:check:test": "node scripts/security-check.js -- --env-file=.env.test",
    "security:check:test:ci": "node scripts/security-check.js -- --ci --fail-on=high",
    "security:validate-data": "node scripts/validate-vulnerability-data.js",
    "security:validate-data:json": "node scripts/validate-vulnerability-data.js -- --format=json --output=validation-report.json",
    "security:validate-data:ci": "node scripts/validate-vulnerability-data.js -- --ci",
    "security:heatmap": "node scripts/generate-risk-heatmap-v2.js",
    "security:heatmap:v1": "node scripts/generate-risk-heatmap.js",
    "security:heatmap:v2": "node scripts/generate-risk-heatmap-v2.js",
    "security:heatmap:test": "node scripts/generate-risk-heatmap.test.js",
    "security:heatmap:jest": "jest scripts/generate-risk-heatmap.test.js",
    "security:burndown": "node scripts/generate-burndown-chart.js",
    "security:validate-constants": "node scripts/validate-security-constants.js",
    "security:validate-constants:ci": "node scripts/validate-security-constants.js --ci",
    "security:check:optimized": "node scripts/security-check.js --optimize-performance",
    "security:notify-success": "node scripts/send-security-notification.js --type=success",
    "security:notify-warning": "node scripts/send-security-notification.js --type=warning",
    "security:notify-error": "node scripts/send-security-notification.js --type=error",
    "security:full-check": "npm run security:validate-constants && npm run security:validate-data && npm run security:check:optimized",
    "docs:coordination-check": "node scripts/docs-coordination-check.js",
    "docs:coordination-fix": "node scripts/docs-coordination-fix.js",
    "docs:coordination-report": "node scripts/docs-coordination-check.js --report",
    "migration:generate": "typeorm migration:generate -d src/config/typeorm.config.ts",
    "migration:run": "typeorm migration:run -d src/config/typeorm.config.ts",
    "migration:revert": "typeorm migration:revert -d src/config/typeorm.config.ts",
    "tidb:health": "node scripts/tidb-health-check.js",
    "upgrade:tools": "npm install --save-dev npm-check-updates@16.0.0 npm-check@0.0.1 depcheck@1.4.0 --legacy-peer-deps",
    "upgrade:analyze": "npm outdated && npx depcheck && npx npm-check --graph",
    "upgrade:update": "npx npm-check-updates --interactive -u",
    "upgrade:install": "npm install --legacy-peer-deps",
    "upgrade:test": "npm run test",
    "upgrade:security": "npm audit",
    "upgrade:fix-deps": "npm audit fix --legacy-peer-deps",
    "docs:validate": "node scripts/docs-consistency-manager.js validate",
    "docs:validate:package": "node scripts/docs-consistency-manager.js validate --categories=package",
    "docs:validate:config": "node scripts/docs-consistency-manager.js validate --categories=config",
    "docs:validate:api": "node scripts/docs-consistency-manager.js validate --categories=api",
    "docs:validate:structure": "node scripts/docs-consistency-manager.js validate --categories=structure",
    "docs:validate:content": "node scripts/docs-consistency-manager.js validate --categories=content",
    "docs:fix": "node scripts/docs-consistency-manager.js fix",
    "docs:fix:validate": "node scripts/docs-consistency-manager.js check-and-fix",
    "docs:sync": "node scripts/docs-consistency-manager.js sync",
    "docs:sync:package": "node scripts/docs-consistency-manager.js sync --categories=package",
    "docs:health": "node scripts/docs-coverage-check.js",
    "docs:coverage": "node scripts/docs-coverage-check.js",
    "docs:report": "node scripts/docs-consistency-manager.js validate --verbose",
    "config:validate": "node scripts/config-validator.js",
    "config:generate": "copy .env.master .env.example",
    "config:test": "NODE_ENV=test node scripts/config-validator.js",
    "config:prod": "NODE_ENV=production node scripts/config-validator.js",
    "paperless:deploy": "powershell -ExecutionPolicy Bypass -File scripts/deploy-paperless-basic.ps1",
    "paperless:setup": "powershell -ExecutionPolicy Bypass -File scripts/paperless-post-deploy.ps1",
    "paperless:deploy-local": "powershell -ExecutionPolicy Bypass -File scripts/deploy-paperless-local.ps1",
    "paperless:setup-local": "powershell -ExecutionPolicy Bypass -File scripts/paperless-setup-local.ps1",
    "paperless:start": "powershell -ExecutionPolicy Bypass -File scripts/paperless-service.ps1 -Action start",
    "paperless:stop": "powershell -ExecutionPolicy Bypass -File scripts/paperless-service.ps1 -Action stop",
    "paperless:restart": "powershell -ExecutionPolicy Bypass -File scripts/paperless-service.ps1 -Action restart",
    "paperless:status": "powershell -ExecutionPolicy Bypass -File scripts/paperless-service.ps1 -Action status",
    "paperless:status-local": "cd paperless-ngx && docker-compose ps",
    "paperless:logs-local": "cd paperless-ngx && docker-compose logs -f",
    "paperless:stop-local": "cd paperless-ngx && docker-compose down",
    "paperless:restart-local": "cd paperless-ngx && docker-compose restart",
    "paperless:config": "powershell -ExecutionPolicy Bypass -File scripts/paperless-config.ps1",
    "paperless:logs": "docker-compose -f paperless-ngx/docker-compose.yml logs -f",
    "paperless:update": "docker-compose -f paperless-ngx/docker-compose.yml pull && docker-compose -f paperless-ngx/docker-compose.yml up -d",
    "docs:integration:scan": "node scripts/docs-paperless-integration.js scan",
    "docs:integration:import": "node scripts/docs-paperless-integration.js import",
    "docs:integration:watch": "node scripts/docs-paperless-integration.js watch",
    "docs:integration:status": "node scripts/docs-paperless-integration.js status",
    "docs:sync:start": "node scripts/docs-sync-daemon.js start",
    "docs:sync:stop": "node scripts/docs-sync-daemon.js stop",
    "docs:sync:status": "node scripts/docs-sync-daemon.js status",
    "docs:system:init": "node scripts/docs-system-controller.js init",
    "docs:system:start": "node scripts/docs-system-controller.js start",
    "docs:system:stop": "node scripts/docs-system-controller.js stop",
    "docs:system:restart": "node scripts/docs-system-controller.js restart",
    "docs:system:status": "node scripts/docs-system-controller.js status",
    "docs:system:health": "node scripts/docs-system-controller.js health",
    "docs:system:report": "node scripts/docs-system-controller.js report",
    "docs:install": "npm install && node scripts/docs-system-controller.js check-deps"
  },
  "dependencies": {
    "@nestjs/axios": "^4.0.1",
    "@nestjs/bull": "^11.0.3",
    "@nestjs/cache-manager": "^3.0.1",
    "@nestjs/common": "^11.1.6",
    "@nestjs/config": "^4.0.2",
    "@nestjs/core": "^11.1.6",
    "@nestjs/cqrs": "^11.0.3",
    "@nestjs/event-emitter": "^3.0.1",
    "@nestjs/jwt": "^11.0.0",
    "@nestjs/passport": "^11.0.5",
    "@nestjs/platform-express": "^11.1.6",
    "@nestjs/schedule": "^6.0.1",
    "@nestjs/swagger": "^11.2.0",
    "@nestjs/terminus": "^11.0.0",
    "@nestjs/throttler": "^6.4.0",
    "@nestjs/typeorm": "^11.0.0",
    "@opentelemetry/auto-instrumentations-node": "^0.64.6",
    "@opentelemetry/exporter-jaeger": "^2.1.0",
    "@opentelemetry/exporter-trace-otlp-http": "^0.205.0",
    "@opentelemetry/resources": "^2.1.0",
    "@opentelemetry/sdk-node": "^0.205.0",
    "@opentelemetry/sdk-trace-base": "^2.1.0",
    "@opentelemetry/semantic-conventions": "^1.37.0",
    "@types/ioredis": "^5.0.0",
    "@types/js-yaml": "^4.0.9",
    "@types/kafkajs": "^1.9.0",
    "@types/nodemailer": "^7.0.2",
    "@types/passport-jwt": "^4.0.1",
    "@types/passport-local": "^1.0.38",
    "@types/pg": "^8.15.5",
    "ajv": "^8.17.1",
    "axios": "^1.12.2",
    "bcrypt": "^6.0.0",
    "bull": "^4.16.5",
    "cache-manager-ioredis-yet": "^2.1.2",
    "caddy-style-shopping-site": "file:..",
    "chokidar": "^4.0.3",
    "class-transformer": "^0.5.1",
    "class-validator": "^0.14.2",
    "compression": "^1.8.1",
    "cors": "^2.8.5",
    "dotenv": "^17.2.3",
    "express": "^5.1.0",
    "helmet": "^8.1.0",
    "ioredis": "^5.8.0",
    "joi": "^18.0.1",
    "jsonwebtoken": "^9.0.2",
    "kafkajs": "^2.2.4",
    "mysql2": "^3.15.1",
    "nest-winston": "^1.10.2",
    "nodemailer": "^7.0.6",
    "passport": "^0.7.0",
    "passport-jwt": "^4.0.1",
    "passport-local": "^1.0.0",
    "pg": "^8.16.3",
    "reflect-metadata": "^0.2.2",
    "rxjs": "^7.8.2",
    "sqlite3": "^5.1.7",
    "swagger-ui-express": "^5.0.1",
    "typeorm": "^0.3.27",
    "uuid": "^13.0.0",
    "winston": "^3.18.3",
    "winston-daily-rotate-file": "^5.0.0"
  },
  "devDependencies": {
    "@nestjs/cli": "^11.0.10",
    "@nestjs/schematics": "^11.0.8",
    "@nestjs/testing": "^11.1.6",
    "@types/bcrypt": "^6.0.0",
    "@types/chokidar": "^1.7.5",
    "@types/compression": "^1.8.1",
    "@types/cors": "^2.8.19",
    "@types/express": "^5.0.3",
    "@types/jest": "^30.0.0",
    "@types/jsonwebtoken": "^9.0.10",
    "@types/node": "^24.6.2",
    "@types/supertest": "^6.0.3",
    "@typescript-eslint/eslint-plugin": "^8.45.0",
    "@typescript-eslint/parser": "^8.45.0",
    "eslint": "^9.37.0",
    "eslint-config-prettier": "^10.1.8",
    "eslint-plugin-prettier": "^5.5.4",
    "jest": "^30.2.0",
    "postcss-preset-env": "^10.4.0",
    "prettier": "^3.6.2",
    "source-map-support": "^0.5.21",
    "supertest": "^7.1.4",
    "ts-jest": "^29.4.4",
    "ts-loader": "^9.5.4",
    "ts-node": "^10.9.2",
    "tsconfig-paths": "^4.2.0",
    "typescript": "^5.9.3"
  }
}
