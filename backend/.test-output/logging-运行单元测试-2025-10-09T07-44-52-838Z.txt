# 运行单元测试 @ 2025-10-09T07:44:52.838Z
# Command: npx jest --config=jest.config.cjs --testPathPatterns=".*\.(spec|test)\.ts$" --testPathIgnorePatterns=".*\.e2e-spec\.ts$" --testPathPatterns="src/logging/user-behavior-tracker.service.spec.ts"

  console.log
    [dotenv@17.2.3] injecting env (84) from .env.test -- tip: 🔐 prevent committing .env to code: https://dotenvx.com/precommit

      at _log (../node_modules/dotenv/lib/main.js:142:11)

  console.log
    [dotenv@17.2.3] injecting env (84) from .env.test -- tip: ⚙️  specify custom .env file path with { path: '/custom/path/.env' }

      at _log (../node_modules/dotenv/lib/main.js:142:11)

  console.log
    [dotenv@17.2.3] injecting env (84) from .env.test -- tip: ⚙️  override existing env vars with { override: true }

      at _log (../node_modules/dotenv/lib/main.js:142:11)

  console.log
    [dotenv@17.2.3] injecting env (84) from .env.test -- tip: 🔐 prevent committing .env to code: https://dotenvx.com/precommit

      at _log (../node_modules/dotenv/lib/main.js:142:11)

  console.log
    [dotenv@17.2.3] injecting env (84) from .env.test -- tip: 👥 sync secrets across teammates & machines: https://dotenvx.com/ops

      at _log (../node_modules/dotenv/lib/main.js:142:11)

  console.log
    [dotenv@17.2.3] injecting env (84) from .env.test -- tip: ⚙️  write to custom object with { processEnv: myObject }

      at _log (../node_modules/dotenv/lib/main.js:142:11)

[33m[Nest] 14512  - [39m2025/10/09 15:44:20 [33m   WARN[39m [38;5;3m[RedisHealthService] [39m[33mTest environment: Redis client is using stub.[39m
[33m[Nest] 14512  - [39m2025/10/09 15:44:20 [33m   WARN[39m [38;5;3m[RedisHealthService] [39m[33mTest environment: Redis client is using stub.[39m
[33m[Nest] 14512  - [39m2025/10/09 15:44:20 [33m   WARN[39m [38;5;3m[RedisHealthService] [39m[33mTest environment: Redis client is using stub.[39m
  console.error
    Failed to send logs to OpenObserve: Request failed with status code 403

    [0m [90m 85 |[39m       [36mthis[39m[33m.[39mretryCount [33m=[39m [35m0[39m[33m;[39m [90m// 重置重试计数[39m
     [90m 86 |[39m     } [36mcatch[39m (error) {
    [31m[1m>[22m[39m[90m 87 |[39m       console[33m.[39merror([32m`Failed to send logs to OpenObserve: ${error.message}`[39m)[33m;[39m
     [90m    |[39m               [31m[1m^[22m[39m
     [90m 88 |[39m       
     [90m 89 |[39m       [90m// 检查重试次数[39m
     [90m 90 |[39m       [36mif[39m ([36mthis[39m[33m.[39mretryCount [33m<[39m [36mthis[39m[33m.[39mmaxRetries) {[0m

      at OpenObserveTransport.flush (logging/openobserve-transport.js:87:15)

  console.error
    Failed to send logs to OpenObserve: Request failed with status code 403

    [0m [90m 85 |[39m       [36mthis[39m[33m.[39mretryCount [33m=[39m [35m0[39m[33m;[39m [90m// 重置重试计数[39m
     [90m 86 |[39m     } [36mcatch[39m (error) {
    [31m[1m>[22m[39m[90m 87 |[39m       console[33m.[39merror([32m`Failed to send logs to OpenObserve: ${error.message}`[39m)[33m;[39m
     [90m    |[39m               [31m[1m^[22m[39m
     [90m 88 |[39m       
     [90m 89 |[39m       [90m// 检查重试次数[39m
     [90m 90 |[39m       [36mif[39m ([36mthis[39m[33m.[39mretryCount [33m<[39m [36mthis[39m[33m.[39mmaxRetries) {[0m

      at OpenObserveTransport.flush (logging/openobserve-transport.js:87:15)

  console.error
    Failed to send logs to OpenObserve: Request failed with status code 403

    [0m [90m 85 |[39m       [36mthis[39m[33m.[39mretryCount [33m=[39m [35m0[39m[33m;[39m [90m// 重置重试计数[39m
     [90m 86 |[39m     } [36mcatch[39m (error) {
    [31m[1m>[22m[39m[90m 87 |[39m       console[33m.[39merror([32m`Failed to send logs to OpenObserve: ${error.message}`[39m)[33m;[39m
     [90m    |[39m               [31m[1m^[22m[39m
     [90m 88 |[39m       
     [90m 89 |[39m       [90m// 检查重试次数[39m
     [90m 90 |[39m       [36mif[39m ([36mthis[39m[33m.[39mretryCount [33m<[39m [36mthis[39m[33m.[39mmaxRetries) {[0m

      at OpenObserveTransport.flush (logging/openobserve-transport.js:87:15)

  console.error
    Failed to send logs to OpenObserve: Request failed with status code 403

    [0m [90m 85 |[39m       [36mthis[39m[33m.[39mretryCount [33m=[39m [35m0[39m[33m;[39m [90m// 重置重试计数[39m
     [90m 86 |[39m     } [36mcatch[39m (error) {
    [31m[1m>[22m[39m[90m 87 |[39m       console[33m.[39merror([32m`Failed to send logs to OpenObserve: ${error.message}`[39m)[33m;[39m
     [90m    |[39m               [31m[1m^[22m[39m
     [90m 88 |[39m       
     [90m 89 |[39m       [90m// 检查重试次数[39m
     [90m 90 |[39m       [36mif[39m ([36mthis[39m[33m.[39mretryCount [33m<[39m [36mthis[39m[33m.[39mmaxRetries) {[0m

      at OpenObserveTransport.flush (logging/openobserve-transport.js:87:15)

[32m[Nest] 14512  - [39m2025/10/09 15:44:21 [32m    LOG[39m [38;5;3m[RedisHealthService] [39m[32mRedis client disconnected[39m
[32m[Nest] 14512  - [39m2025/10/09 15:44:21 [32m    LOG[39m [38;5;3m[RedisHealthService] [39m[32mRedis client disconnected[39m
  console.log
    [dotenv@17.2.3] injecting env (84) from .env.test -- tip: ✅ audit secrets and track compliance: https://dotenvx.com/ops

      at _log (../node_modules/dotenv/lib/main.js:142:11)

  console.log
    [dotenv@17.2.3] injecting env (84) from .env.test -- tip: 🔑 add access controls to secrets: https://dotenvx.com/ops

      at _log (../node_modules/dotenv/lib/main.js:142:11)

[33m[Nest] 14512  - [39m2025/10/09 15:44:22 [33m   WARN[39m [38;5;3m[RedisHealthService] [39m[33mTest environment: Redis client is using stub.[39m
[33m[Nest] 14512  - [39m2025/10/09 15:44:22 [33m   WARN[39m [38;5;3m[RedisHealthService] [39m[33mTest environment: Redis client is using stub.[39m
[33m[Nest] 14512  - [39m2025/10/09 15:44:22 [33m   WARN[39m [38;5;3m[RedisHealthService] [39m[33mTest environment: Redis client is using stub.[39m
  console.log
    Skipping test: mockRedis or mockRedis.on is not defined

      at Object.<anonymous> (redis/redis-health.service.standalone.spec.ts:219:17)

  console.log
    Skipping test: mockRedis or mockRedis.ping is not defined

      at Object.<anonymous> (redis/redis-health.service.standalone.spec.ts:241:17)

  console.log
    Skipping test: mockRedis or mockRedis.ping is not defined

      at Object.<anonymous> (redis/redis-health.service.standalone.spec.ts:260:17)

  console.log
    Skipping test: mockRedis or mockRedis.ping is not defined

      at Object.<anonymous> (redis/redis-health.service.standalone.spec.ts:291:17)

  console.log
    Skipping test: localMockRedis is not defined

      at Object.<anonymous> (redis/redis-health.service.standalone.spec.ts:332:17)

  console.log
    Skipping test: localMockRedis is not defined

      at Object.<anonymous> (redis/redis-health.service.standalone.spec.ts:354:17)

  console.log
    Skipping test: localMockRedis is not defined

      at Object.<anonymous> (redis/redis-health.service.standalone.spec.ts:397:17)

  console.log
    Skipping test: localMockRedis is not defined

      at Object.<anonymous> (redis/redis-health.service.standalone.spec.ts:419:17)

  console.log
    [dotenv@17.2.3] injecting env (84) from .env.test -- tip: ✅ audit secrets and track compliance: https://dotenvx.com/ops

      at _log (../node_modules/dotenv/lib/main.js:142:11)

  console.log
    [dotenv@17.2.3] injecting env (84) from .env.test -- tip: ⚙️  suppress all logs with { quiet: true }

      at _log (../node_modules/dotenv/lib/main.js:142:11)

  console.log
    [dotenv@17.2.3] injecting env (84) from .env.test -- tip: 🔑 add access controls to secrets: https://dotenvx.com/ops

      at _log (../node_modules/dotenv/lib/main.js:142:11)

  console.log
    [dotenv@17.2.3] injecting env (84) from .env.test -- tip: 🔐 prevent committing .env to code: https://dotenvx.com/precommit

      at _log (../node_modules/dotenv/lib/main.js:142:11)

  console.log
    [dotenv@17.2.3] injecting env (84) from .env.test -- tip: 🔐 prevent committing .env to code: https://dotenvx.com/precommit

      at _log (../node_modules/dotenv/lib/main.js:142:11)

  console.log
    [dotenv@17.2.3] injecting env (84) from .env.test -- tip: 🛠️  run anywhere with `dotenvx run -- yourcommand`

      at _log (../node_modules/dotenv/lib/main.js:142:11)

  console.log
    [dotenv@17.2.3] injecting env (84) from .env.test -- tip: ⚙️  suppress all logs with { quiet: true }

      at _log (../node_modules/dotenv/lib/main.js:142:11)

  console.log
    [dotenv@17.2.3] injecting env (84) from .env.test -- tip: ✅ audit secrets and track compliance: https://dotenvx.com/ops

      at _log (../node_modules/dotenv/lib/main.js:142:11)

  console.error
    Failed to send logs to OpenObserve: Request failed with status code 403

    [0m [90m 85 |[39m       [36mthis[39m[33m.[39mretryCount [33m=[39m [35m0[39m[33m;[39m [90m// 重置重试计数[39m
     [90m 86 |[39m     } [36mcatch[39m (error) {
    [31m[1m>[22m[39m[90m 87 |[39m       console[33m.[39merror([32m`Failed to send logs to OpenObserve: ${error.message}`[39m)[33m;[39m
     [90m    |[39m               [31m[1m^[22m[39m
     [90m 88 |[39m       
     [90m 89 |[39m       [90m// 检查重试次数[39m
     [90m 90 |[39m       [36mif[39m ([36mthis[39m[33m.[39mretryCount [33m<[39m [36mthis[39m[33m.[39mmaxRetries) {[0m

      at OpenObserveTransport.flush (logging/openobserve-transport.js:87:15)

  console.error
    Failed to send logs to OpenObserve: Request failed with status code 403

    [0m [90m 85 |[39m       [36mthis[39m[33m.[39mretryCount [33m=[39m [35m0[39m[33m;[39m [90m// 重置重试计数[39m
     [90m 86 |[39m     } [36mcatch[39m (error) {
    [31m[1m>[22m[39m[90m 87 |[39m       console[33m.[39merror([32m`Failed to send logs to OpenObserve: ${error.message}`[39m)[33m;[39m
     [90m    |[39m               [31m[1m^[22m[39m
     [90m 88 |[39m       
     [90m 89 |[39m       [90m// 检查重试次数[39m
     [90m 90 |[39m       [36mif[39m ([36mthis[39m[33m.[39mretryCount [33m<[39m [36mthis[39m[33m.[39mmaxRetries) {[0m

      at OpenObserveTransport.flush (logging/openobserve-transport.js:87:15)

  console.error
    发布订单状态更新事件失败: Error: Event publishing failed
        at Object.<anonymous> (D:\onlinestore\backend\src\orders\orders.service.spec.ts:1455:11)
        at Promise.finally.completed (D:\onlinestore\backend\node_modules\jest-circus\build\jestAdapterInit.js:1557:28)
        at new Promise (<anonymous>)
        at callAsyncCircusFn (D:\onlinestore\backend\node_modules\jest-circus\build\jestAdapterInit.js:1497:10)
        at _callCircusTest (D:\onlinestore\backend\node_modules\jest-circus\build\jestAdapterInit.js:1007:40)
        at runNextTicks (node:internal/process/task_queues:65:5)
        at listOnTimeout (node:internal/timers:549:9)
        at processTimers (node:internal/timers:523:7)
        at _runTest (D:\onlinestore\backend\node_modules\jest-circus\build\jestAdapterInit.js:947:3)
        at D:\onlinestore\backend\node_modules\jest-circus\build\jestAdapterInit.js:849:7
        at _runTestsForDescribeBlock (D:\onlinestore\backend\node_modules\jest-circus\build\jestAdapterInit.js:862:11)
        at _runTestsForDescribeBlock (D:\onlinestore\backend\node_modules\jest-circus\build\jestAdapterInit.js:857:11)
        at _runTestsForDescribeBlock (D:\onlinestore\backend\node_modules\jest-circus\build\jestAdapterInit.js:857:11)
        at _runTestsForDescribeBlock (D:\onlinestore\backend\node_modules\jest-circus\build\jestAdapterInit.js:857:11)
        at run (D:\onlinestore\backend\node_modules\jest-circus\build\jestAdapterInit.js:761:3)
        at runAndTransformResultsToJestFormat (D:\onlinestore\backend\node_modules\jest-circus\build\jestAdapterInit.js:1918:21)
        at jestAdapter (D:\onlinestore\backend\node_modules\jest-circus\build\runner.js:101:19)
        at runTestInternal (D:\onlinestore\backend\node_modules\jest-runner\build\index.js:275:16)
        at runTest (D:\onlinestore\backend\node_modules\jest-runner\build\index.js:343:7)

    [0m [90m 209 |[39m
     [90m 210 |[39m     [36mthis[39m[33m.[39mpublishOrderStatusUpdatedEvent(updatedOrder[33m![39m[33m,[39m status)[33m.[39m[36mcatch[39m(error [33m=>[39m {
    [31m[1m>[22m[39m[90m 211 |[39m       console[33m.[39merror([32m'发布订单状态更新事件失败:'[39m[33m,[39m error)[33m;[39m
     [90m     |[39m               [31m[1m^[22m[39m
     [90m 212 |[39m     })[33m;[39m
     [90m 213 |[39m
     [90m 214 |[39m     [36mreturn[39m updatedOrder[33m![39m[33m;[39m[0m

      at orders/orders.service.ts:211:15

  console.log
    [dotenv@17.2.3] injecting env (84) from .env.test -- tip: 🛠️  run anywhere with `dotenvx run -- yourcommand`

      at _log (../node_modules/dotenv/lib/main.js:142:11)

  console.log
    [dotenv@17.2.3] injecting env (84) from .env.test -- tip: ⚙️  enable debug logging with { debug: true }

      at _log (../node_modules/dotenv/lib/main.js:142:11)

  console.error
    Redis connection error during registration: Error: Redis connection failed
        at Object.<anonymous> (D:\onlinestore\backend\src\auth\auth.service.spec.ts:634:15)
        at D:\onlinestore\backend\node_modules\jest-mock\build\index.js:305:39
        at Object.<anonymous> (D:\onlinestore\backend\node_modules\jest-mock\build\index.js:312:13)
        at Object.mockConstructor [as get] (D:\onlinestore\backend\node_modules\jest-mock\build\index.js:102:19)
        at AuthService.register (D:\onlinestore\backend\src\auth\auth.service.ts:70:45)
        at Object.<anonymous> (D:\onlinestore\backend\src\auth\auth.service.spec.ts:638:36)
        at Promise.finally.completed (D:\onlinestore\backend\node_modules\jest-circus\build\jestAdapterInit.js:1557:28)
        at new Promise (<anonymous>)
        at callAsyncCircusFn (D:\onlinestore\backend\node_modules\jest-circus\build\jestAdapterInit.js:1497:10)
        at _callCircusTest (D:\onlinestore\backend\node_modules\jest-circus\build\jestAdapterInit.js:1007:40)
        at _runTest (D:\onlinestore\backend\node_modules\jest-circus\build\jestAdapterInit.js:947:3)
        at D:\onlinestore\backend\node_modules\jest-circus\build\jestAdapterInit.js:849:7
        at _runTestsForDescribeBlock (D:\onlinestore\backend\node_modules\jest-circus\build\jestAdapterInit.js:862:11)
        at _runTestsForDescribeBlock (D:\onlinestore\backend\node_modules\jest-circus\build\jestAdapterInit.js:857:11)
        at _runTestsForDescribeBlock (D:\onlinestore\backend\node_modules\jest-circus\build\jestAdapterInit.js:857:11)
        at run (D:\onlinestore\backend\node_modules\jest-circus\build\jestAdapterInit.js:761:3)
        at runAndTransformResultsToJestFormat (D:\onlinestore\backend\node_modules\jest-circus\build\jestAdapterInit.js:1918:21)
        at jestAdapter (D:\onlinestore\backend\node_modules\jest-circus\build\runner.js:101:19)
        at runTestInternal (D:\onlinestore\backend\node_modules\jest-runner\build\index.js:275:16)
        at runTest (D:\onlinestore\backend\node_modules\jest-runner\build\index.js:343:7)

    [0m [90m 84 |[39m         }
     [90m 85 |[39m         [90m// Redis连接错误时，继续执行注册流程[39m
    [31m[1m>[22m[39m[90m 86 |[39m         console[33m.[39merror([32m'Redis connection error during registration:'[39m[33m,[39m error)[33m;[39m
     [90m    |[39m                 [31m[1m^[22m[39m
     [90m 87 |[39m       }
     [90m 88 |[39m     }
     [90m 89 |[39m     [90m// 检查用户是否已存在[39m[0m

      at AuthService.register (auth/auth.service.ts:86:17)
      at Object.<anonymous> (auth/auth.service.spec.ts:638:36)

  console.log
    [dotenv@17.2.3] injecting env (84) from .env.test -- tip: ⚙️  suppress all logs with { quiet: true }

      at _log (../node_modules/dotenv/lib/main.js:142:11)

  console.log
    [dotenv@17.2.3] injecting env (84) from .env.test -- tip: 🔄 add secrets lifecycle management: https://dotenvx.com/ops

      at _log (../node_modules/dotenv/lib/main.js:142:11)

  console.log
    2025/10/9 15:44:32 ERROR [VALIDATION_TEST] 测试错误

      at Function.outputLog (config/error-logger.ts:157:13)

  console.log
    详细信息: {
      "stack": "Error: 测试错误\n    at Function.validateErrorLogging (D:\\onlinestore\\backend\\src\\config\\configuration.validator.ts:362:27)\n    at Function.validateAll (D:\\onlinestore\\backend\\src\\config\\configuration.validator.ts:111:37)\n    at Object.<anonymous> (D:\\onlinestore\\backend\\src\\config\\configuration.spec.ts:32:45)\n    at Promise.finally.completed (D:\\onlinestore\\backend\\node_modules\\jest-circus\\build\\jestAdapterInit.js:1557:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (D:\\onlinestore\\backend\\node_modules\\jest-circus\\build\\jestAdapterInit.js:1497:10)\n    at _callCircusTest (D:\\onlinestore\\backend\\node_modules\\jest-circus\\build\\jestAdapterInit.js:1007:40)\n    at _runTest (D:\\onlinestore\\backend\\node_modules\\jest-circus\\build\\jestAdapterInit.js:947:3)\n    at D:\\onlinestore\\backend\\node_modules\\jest-circus\\build\\jestAdapterInit.js:849:7\n    at _runTestsForDescribeBlock (D:\\onlinestore\\backend\\node_modules\\jest-circus\\build\\jestAdapterInit.js:862:11)\n    at _runTestsForDescribeBlock (D:\\onlinestore\\backend\\node_modules\\jest-circus\\build\\jestAdapterInit.js:857:11)\n    at _runTestsForDescribeBlock (D:\\onlinestore\\backend\\node_modules\\jest-circus\\build\\jestAdapterInit.js:857:11)\n    at run (D:\\onlinestore\\backend\\node_modules\\jest-circus\\build\\jestAdapterInit.js:761:3)\n    at runAndTransformResultsToJestFormat (D:\\onlinestore\\backend\\node_modules\\jest-circus\\build\\jestAdapterInit.js:1918:21)\n    at jestAdapter (D:\\onlinestore\\backend\\node_modules\\jest-circus\\build\\runner.js:101:19)\n    at runTestInternal (D:\\onlinestore\\backend\\node_modules\\jest-runner\\build\\index.js:275:16)\n    at runTest (D:\\onlinestore\\backend\\node_modules\\jest-runner\\build\\index.js:343:7)",
      "name": "Error"
    }

      at Function.outputLog (config/error-logger.ts:160:15)

  console.log
    2025/10/9 15:44:32 ERROR [VALIDATION_TEST] 测试错误

      at Function.outputLog (config/error-logger.ts:157:13)

  console.log
    详细信息: {
      "stack": "Error: 测试错误\n    at Function.validateErrorLogging (D:\\onlinestore\\backend\\src\\config\\configuration.validator.ts:362:27)\n    at Function.validateAll (D:\\onlinestore\\backend\\src\\config\\configuration.validator.ts:111:37)\n    at Object.<anonymous> (D:\\onlinestore\\backend\\src\\config\\configuration.spec.ts:41:45)\n    at Promise.finally.completed (D:\\onlinestore\\backend\\node_modules\\jest-circus\\build\\jestAdapterInit.js:1557:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (D:\\onlinestore\\backend\\node_modules\\jest-circus\\build\\jestAdapterInit.js:1497:10)\n    at _callCircusTest (D:\\onlinestore\\backend\\node_modules\\jest-circus\\build\\jestAdapterInit.js:1007:40)\n    at _runTest (D:\\onlinestore\\backend\\node_modules\\jest-circus\\build\\jestAdapterInit.js:947:3)\n    at D:\\onlinestore\\backend\\node_modules\\jest-circus\\build\\jestAdapterInit.js:849:7\n    at _runTestsForDescribeBlock (D:\\onlinestore\\backend\\node_modules\\jest-circus\\build\\jestAdapterInit.js:862:11)\n    at _runTestsForDescribeBlock (D:\\onlinestore\\backend\\node_modules\\jest-circus\\build\\jestAdapterInit.js:857:11)\n    at _runTestsForDescribeBlock (D:\\onlinestore\\backend\\node_modules\\jest-circus\\build\\jestAdapterInit.js:857:11)\n    at run (D:\\onlinestore\\backend\\node_modules\\jest-circus\\build\\jestAdapterInit.js:761:3)\n    at runAndTransformResultsToJestFormat (D:\\onlinestore\\backend\\node_modules\\jest-circus\\build\\jestAdapterInit.js:1918:21)\n    at jestAdapter (D:\\onlinestore\\backend\\node_modules\\jest-circus\\build\\runner.js:101:19)\n    at runTestInternal (D:\\onlinestore\\backend\\node_modules\\jest-runner\\build\\index.js:275:16)\n    at runTest (D:\\onlinestore\\backend\\node_modules\\jest-runner\\build\\index.js:343:7)",
      "name": "Error"
    }

      at Function.outputLog (config/error-logger.ts:160:15)

  console.log
    [dotenv@17.2.3] injecting env (84) from .env.test -- tip: 👥 sync secrets across teammates & machines: https://dotenvx.com/ops

      at _log (../node_modules/dotenv/lib/main.js:142:11)

  console.log
    [dotenv@17.2.3] injecting env (84) from .env.test -- tip: ⚙️  specify custom .env file path with { path: '/custom/path/.env' }

      at _log (../node_modules/dotenv/lib/main.js:142:11)

  console.log
    [dotenv@17.2.3] injecting env (84) from .env.test -- tip: ✅ audit secrets and track compliance: https://dotenvx.com/ops

      at _log (../node_modules/dotenv/lib/main.js:142:11)

  console.error
    Failed to send logs to OpenObserve: Request failed with status code 403

    [0m [90m 85 |[39m       [36mthis[39m[33m.[39mretryCount [33m=[39m [35m0[39m[33m;[39m [90m// 重置重试计数[39m
     [90m 86 |[39m     } [36mcatch[39m (error) {
    [31m[1m>[22m[39m[90m 87 |[39m       console[33m.[39merror([32m`Failed to send logs to OpenObserve: ${error.message}`[39m)[33m;[39m
     [90m    |[39m               [31m[1m^[22m[39m
     [90m 88 |[39m       
     [90m 89 |[39m       [90m// 检查重试次数[39m
     [90m 90 |[39m       [36mif[39m ([36mthis[39m[33m.[39mretryCount [33m<[39m [36mthis[39m[33m.[39mmaxRetries) {[0m

      at OpenObserveTransport.flush (logging/openobserve-transport.js:87:15)

  console.error
    Max retries (3) exceeded, dropping 6 log entries

    [0m [90m 93 |[39m         [36mthis[39m[33m.[39mbuffer[33m.[39mpush([33m...[39mbatch)[33m;[39m
     [90m 94 |[39m       } [36melse[39m {
    [31m[1m>[22m[39m[90m 95 |[39m         console[33m.[39merror([32m`Max retries (${this.maxRetries}) exceeded, dropping ${batch.length} log entries`[39m)[33m;[39m
     [90m    |[39m                 [31m[1m^[22m[39m
     [90m 96 |[39m         [36mthis[39m[33m.[39mretryCount [33m=[39m [35m0[39m[33m;[39m
     [90m 97 |[39m       }
     [90m 98 |[39m     }[0m

      at OpenObserveTransport.flush (logging/openobserve-transport.js:95:17)

  console.error
    Failed to send logs to OpenObserve: Request failed with status code 403

    [0m [90m 85 |[39m       [36mthis[39m[33m.[39mretryCount [33m=[39m [35m0[39m[33m;[39m [90m// 重置重试计数[39m
     [90m 86 |[39m     } [36mcatch[39m (error) {
    [31m[1m>[22m[39m[90m 87 |[39m       console[33m.[39merror([32m`Failed to send logs to OpenObserve: ${error.message}`[39m)[33m;[39m
     [90m    |[39m               [31m[1m^[22m[39m
     [90m 88 |[39m       
     [90m 89 |[39m       [90m// 检查重试次数[39m
     [90m 90 |[39m       [36mif[39m ([36mthis[39m[33m.[39mretryCount [33m<[39m [36mthis[39m[33m.[39mmaxRetries) {[0m

      at OpenObserveTransport.flush (logging/openobserve-transport.js:87:15)

  console.error
    Max retries (3) exceeded, dropping 11 log entries

    [0m [90m 93 |[39m         [36mthis[39m[33m.[39mbuffer[33m.[39mpush([33m...[39mbatch)[33m;[39m
     [90m 94 |[39m       } [36melse[39m {
    [31m[1m>[22m[39m[90m 95 |[39m         console[33m.[39merror([32m`Max retries (${this.maxRetries}) exceeded, dropping ${batch.length} log entries`[39m)[33m;[39m
     [90m    |[39m                 [31m[1m^[22m[39m
     [90m 96 |[39m         [36mthis[39m[33m.[39mretryCount [33m=[39m [35m0[39m[33m;[39m
     [90m 97 |[39m       }
     [90m 98 |[39m     }[0m

      at OpenObserveTransport.flush (logging/openobserve-transport.js:95:17)

  console.log
    [dotenv@17.2.3] injecting env (84) from .env.test -- tip: 🔄 add secrets lifecycle management: https://dotenvx.com/ops

      at _log (../node_modules/dotenv/lib/main.js:142:11)

  console.log
    [dotenv@17.2.3] injecting env (84) from .env.test -- tip: 🔄 add secrets lifecycle management: https://dotenvx.com/ops

      at _log (../node_modules/dotenv/lib/main.js:142:11)

  console.log
    [dotenv@17.2.3] injecting env (84) from .env.test -- tip: 🔄 add secrets lifecycle management: https://dotenvx.com/ops

      at _log (../node_modules/dotenv/lib/main.js:142:11)

  console.log
    [dotenv@17.2.3] injecting env (84) from .env.test -- tip: 🔐 prevent committing .env to code: https://dotenvx.com/precommit

      at _log (../node_modules/dotenv/lib/main.js:142:11)

  console.log
    [dotenv@17.2.3] injecting env (84) from .env.test -- tip: 🗂️ backup and recover secrets: https://dotenvx.com/ops

      at _log (../node_modules/dotenv/lib/main.js:142:11)

  console.log
    [dotenv@17.2.3] injecting env (84) from .env.test -- tip: 🔐 encrypt with Dotenvx: https://dotenvx.com

      at _log (../node_modules/dotenv/lib/main.js:142:11)

  console.log
    [dotenv@17.2.3] injecting env (84) from .env.test -- tip: 🔐 prevent building .env in docker: https://dotenvx.com/prebuild

      at _log (../node_modules/dotenv/lib/main.js:142:11)

  console.log
    [dotenv@17.2.3] injecting env (84) from .env.test -- tip: ⚙️  enable debug logging with { debug: true }

      at _log (../node_modules/dotenv/lib/main.js:142:11)

  console.log
    [dotenv@17.2.3] injecting env (84) from .env.test -- tip: 🔐 prevent building .env in docker: https://dotenvx.com/prebuild

      at _log (../node_modules/dotenv/lib/main.js:142:11)

  console.log
    [dotenv@17.2.3] injecting env (84) from .env.test -- tip: ⚙️  load multiple .env files with { path: ['.env.local', '.env'] }

      at _log (../node_modules/dotenv/lib/main.js:142:11)

  console.log
    [dotenv@17.2.3] injecting env (84) from .env.test -- tip: 👥 sync secrets across teammates & machines: https://dotenvx.com/ops

      at _log (../node_modules/dotenv/lib/main.js:142:11)

  console.log
    [dotenv@17.2.3] injecting env (84) from .env.test -- tip: 🔄 add secrets lifecycle management: https://dotenvx.com/ops

      at _log (../node_modules/dotenv/lib/main.js:142:11)

  console.log
    [dotenv@17.2.3] injecting env (84) from .env.test -- tip: ⚙️  specify custom .env file path with { path: '/custom/path/.env' }

      at _log (../node_modules/dotenv/lib/main.js:142:11)

  console.log
    [dotenv@17.2.3] injecting env (84) from .env.test -- tip: ⚙️  write to custom object with { processEnv: myObject }

      at _log (../node_modules/dotenv/lib/main.js:142:11)

  console.log
    [dotenv@17.2.3] injecting env (84) from .env.test -- tip: ⚙️  load multiple .env files with { path: ['.env.local', '.env'] }

      at _log (../node_modules/dotenv/lib/main.js:142:11)

  console.log
    [dotenv@17.2.3] injecting env (84) from .env.test -- tip: 📡 add observability to secrets: https://dotenvx.com/ops

      at _log (../node_modules/dotenv/lib/main.js:142:11)

  console.log
    [dotenv@17.2.3] injecting env (84) from .env.test -- tip: ✅ audit secrets and track compliance: https://dotenvx.com/ops

      at _log (../node_modules/dotenv/lib/main.js:142:11)

  console.log
    [dotenv@17.2.3] injecting env (84) from .env.test -- tip: 🔐 prevent building .env in docker: https://dotenvx.com/prebuild

      at _log (../node_modules/dotenv/lib/main.js:142:11)

  console.log
    [dotenv@17.2.3] injecting env (84) from .env.test -- tip: ⚙️  enable debug logging with { debug: true }

      at _log (../node_modules/dotenv/lib/main.js:142:11)



--- STDERR ---
FAIL src/monitoring/metrics.interceptor.spec.ts (90.375 s)
  MetricsInterceptor
    √ should be defined (28 ms)
    intercept
      √ should increment active connections on request start (11 ms)
      × should decrement active connections on request completion (10022 ms)
      × should record API call metrics on successful response (10012 ms)
      × should record API call metrics on error response (10037 ms)
      × should calculate request duration correctly (10014 ms)
      × should handle different HTTP methods (10010 ms)
      × should handle different status codes (10020 ms)
      × should handle different request paths (10014 ms)
      × should handle concurrent requests (10014 ms)

  ● MetricsInterceptor › intercept › should decrement active connections on request completion

    expect(jest.fn()).toHaveBeenCalled()

    Expected number of calls: >= 1
    Received number of calls:    0

    [0m [90m 74 |[39m       [90m// Wait for the observable to complete[39m
     [90m 75 |[39m       setTimeout(() [33m=>[39m {
    [31m[1m>[22m[39m[90m 76 |[39m         expect(monitoringService[33m.[39mdecrementActiveConnections)[33m.[39mtoHaveBeenCalled()[33m;[39m
     [90m    |[39m                                                              [31m[1m^[22m[39m
     [90m 77 |[39m         done()[33m;[39m
     [90m 78 |[39m       }[33m,[39m [35m0[39m)[33m;[39m
     [90m 79 |[39m     })[33m;[39m[0m

      at Timeout._onTimeout (monitoring/metrics.interceptor.spec.ts:76:62)

  ● MetricsInterceptor › intercept › should decrement active connections on request completion

    thrown: "Exceeded timeout of 10000 ms for a test while waiting for `done()` to be called.
    Add a timeout value to this test to increase the timeout, if this is a long-running test. See https://jestjs.io/docs/api#testname-fn-timeout."

    [0m [90m 69 |[39m     })[33m;[39m
     [90m 70 |[39m
    [31m[1m>[22m[39m[90m 71 |[39m     it([32m'should decrement active connections on request completion'[39m[33m,[39m (done) [33m=>[39m {
     [90m    |[39m     [31m[1m^[22m[39m
     [90m 72 |[39m       interceptor[33m.[39mintercept(mockContext[33m,[39m mockCallHandler)[33m;[39m
     [90m 73 |[39m
     [90m 74 |[39m       [90m// Wait for the observable to complete[39m[0m

      at monitoring/metrics.interceptor.spec.ts:71:5
      at monitoring/metrics.interceptor.spec.ts:60:3
      at Object.<anonymous> (monitoring/metrics.interceptor.spec.ts:8:1)

  ● MetricsInterceptor › intercept › should record API call metrics on successful response

    expect(jest.fn()).toHaveBeenCalledWith(...expected)

    Expected: "GET", "/api/test", 200, Any<Number>

    Number of calls: 0

    [0m [90m 84 |[39m       [90m// Wait for the observable to complete[39m
     [90m 85 |[39m       setTimeout(() [33m=>[39m {
    [31m[1m>[22m[39m[90m 86 |[39m         expect(monitoringService[33m.[39mrecordApiCall)[33m.[39mtoHaveBeenCalledWith(
     [90m    |[39m                                                 [31m[1m^[22m[39m
     [90m 87 |[39m           [32m'GET'[39m[33m,[39m
     [90m 88 |[39m           [32m'/api/test'[39m[33m,[39m
     [90m 89 |[39m           [35m200[39m[33m,[39m[0m

      at Timeout._onTimeout (monitoring/metrics.interceptor.spec.ts:86:49)

  ● MetricsInterceptor › intercept › should record API call metrics on successful response

    thrown: "Exceeded timeout of 10000 ms for a test while waiting for `done()` to be called.
    Add a timeout value to this test to increase the timeout, if this is a long-running test. See https://jestjs.io/docs/api#testname-fn-timeout."

    [0m [90m 79 |[39m     })[33m;[39m
     [90m 80 |[39m
    [31m[1m>[22m[39m[90m 81 |[39m     it([32m'should record API call metrics on successful response'[39m[33m,[39m (done) [33m=>[39m {
     [90m    |[39m     [31m[1m^[22m[39m
     [90m 82 |[39m       interceptor[33m.[39mintercept(mockContext[33m,[39m mockCallHandler)[33m;[39m
     [90m 83 |[39m
     [90m 84 |[39m       [90m// Wait for the observable to complete[39m[0m

      at monitoring/metrics.interceptor.spec.ts:81:5
      at monitoring/metrics.interceptor.spec.ts:60:3
      at Object.<anonymous> (monitoring/metrics.interceptor.spec.ts:8:1)

  ● MetricsInterceptor › intercept › should record API call metrics on error response

    expect(jest.fn()).toHaveBeenCalledWith(...expected)

    Expected: "GET", "/api/test", 404, Any<Number>

    Number of calls: 0

    [0m [90m 106 |[39m       [90m// Wait for the observable to error[39m
     [90m 107 |[39m       setTimeout(() [33m=>[39m {
    [31m[1m>[22m[39m[90m 108 |[39m         expect(monitoringService[33m.[39mrecordApiCall)[33m.[39mtoHaveBeenCalledWith(
     [90m     |[39m                                                 [31m[1m^[22m[39m
     [90m 109 |[39m           [32m'GET'[39m[33m,[39m
     [90m 110 |[39m           [32m'/api/test'[39m[33m,[39m
     [90m 111 |[39m           [35m404[39m[33m,[39m[0m

      at Timeout._onTimeout (monitoring/metrics.interceptor.spec.ts:108:49)

  ● MetricsInterceptor › intercept › should record API call metrics on error response

    thrown: "Exceeded timeout of 10000 ms for a test while waiting for `done()` to be called.
    Add a timeout value to this test to increase the timeout, if this is a long-running test. See https://jestjs.io/docs/api#testname-fn-timeout."

    [0m [90m 94 |[39m     })[33m;[39m
     [90m 95 |[39m
    [31m[1m>[22m[39m[90m 96 |[39m     it([32m'should record API call metrics on error response'[39m[33m,[39m (done) [33m=>[39m {
     [90m    |[39m     [31m[1m^[22m[39m
     [90m 97 |[39m       mockResponse[33m.[39mstatusCode [33m=[39m [35m404[39m[33m;[39m
     [90m 98 |[39m       mockCallHandler[33m.[39mhandle [33m=[39m jest[33m.[39mfn()[33m.[39mmockReturnValue(
     [90m 99 |[39m         [36mnew[39m [33mObservable[39m(subscriber [33m=>[39m {[0m

      at monitoring/metrics.interceptor.spec.ts:96:5
      at monitoring/metrics.interceptor.spec.ts:60:3
      at Object.<anonymous> (monitoring/metrics.interceptor.spec.ts:8:1)

  ● MetricsInterceptor › intercept › should calculate request duration correctly

    expect(jest.fn()).toHaveBeenCalledWith(...expected)

    Expected: "GET", "/api/test", 200, 200

    Number of calls: 0

    [0m [90m 127 |[39m       [90m// Wait for the observable to complete[39m
     [90m 128 |[39m       setTimeout(() [33m=>[39m {
    [31m[1m>[22m[39m[90m 129 |[39m         expect(monitoringService[33m.[39mrecordApiCall)[33m.[39mtoHaveBeenCalledWith(
     [90m     |[39m                                                 [31m[1m^[22m[39m
     [90m 130 |[39m           [32m'GET'[39m[33m,[39m
     [90m 131 |[39m           [32m'/api/test'[39m[33m,[39m
     [90m 132 |[39m           [35m200[39m[33m,[39m[0m

      at Timeout._onTimeout (monitoring/metrics.interceptor.spec.ts:129:49)

  ● MetricsInterceptor › intercept › should calculate request duration correctly

    thrown: "Exceeded timeout of 10000 ms for a test while waiting for `done()` to be called.
    Add a timeout value to this test to increase the timeout, if this is a long-running test. See https://jestjs.io/docs/api#testname-fn-timeout."

    [0m [90m 116 |[39m     })[33m;[39m
     [90m 117 |[39m
    [31m[1m>[22m[39m[90m 118 |[39m     it([32m'should calculate request duration correctly'[39m[33m,[39m (done) [33m=>[39m {
     [90m     |[39m     [31m[1m^[22m[39m
     [90m 119 |[39m       [90m// Mock Date.now to return different values[39m
     [90m 120 |[39m       [36mconst[39m mockDateNow [33m=[39m jest
     [90m 121 |[39m         [33m.[39mspyOn([33mDate[39m[33m,[39m [32m'now'[39m)[0m

      at monitoring/metrics.interceptor.spec.ts:118:5
      at monitoring/metrics.interceptor.spec.ts:60:3
      at Object.<anonymous> (monitoring/metrics.interceptor.spec.ts:8:1)

  ● MetricsInterceptor › intercept › should handle different HTTP methods

    expect(jest.fn()).toHaveBeenCalledWith(...expected)

    Expected: "GET", "/api/test", 200, Any<Number>

    Number of calls: 0

    [0m [90m 147 |[39m
     [90m 148 |[39m         setTimeout(() [33m=>[39m {
    [31m[1m>[22m[39m[90m 149 |[39m           expect(monitoringService[33m.[39mrecordApiCall)[33m.[39mtoHaveBeenCalledWith(
     [90m     |[39m                                                   [31m[1m^[22m[39m
     [90m 150 |[39m             method[33m,[39m
     [90m 151 |[39m             [32m'/api/test'[39m[33m,[39m
     [90m 152 |[39m             [35m200[39m[33m,[39m[0m

      at Timeout._onTimeout (monitoring/metrics.interceptor.spec.ts:149:51)

  ● MetricsInterceptor › intercept › should handle different HTTP methods

    expect(jest.fn()).toHaveBeenCalledWith(...expected)

    Expected: "POST", "/api/test", 200, Any<Number>

    Number of calls: 0

    [0m [90m 147 |[39m
     [90m 148 |[39m         setTimeout(() [33m=>[39m {
    [31m[1m>[22m[39m[90m 149 |[39m           expect(monitoringService[33m.[39mrecordApiCall)[33m.[39mtoHaveBeenCalledWith(
     [90m     |[39m                                                   [31m[1m^[22m[39m
     [90m 150 |[39m             method[33m,[39m
     [90m 151 |[39m             [32m'/api/test'[39m[33m,[39m
     [90m 152 |[39m             [35m200[39m[33m,[39m[0m

      at Timeout._onTimeout (monitoring/metrics.interceptor.spec.ts:149:51)

  ● MetricsInterceptor › intercept › should handle different HTTP methods

    expect(jest.fn()).toHaveBeenCalledWith(...expected)

    Expected: "PUT", "/api/test", 200, Any<Number>

    Number of calls: 0

    [0m [90m 147 |[39m
     [90m 148 |[39m         setTimeout(() [33m=>[39m {
    [31m[1m>[22m[39m[90m 149 |[39m           expect(monitoringService[33m.[39mrecordApiCall)[33m.[39mtoHaveBeenCalledWith(
     [90m     |[39m                                                   [31m[1m^[22m[39m
     [90m 150 |[39m             method[33m,[39m
     [90m 151 |[39m             [32m'/api/test'[39m[33m,[39m
     [90m 152 |[39m             [35m200[39m[33m,[39m[0m

      at Timeout._onTimeout (monitoring/metrics.interceptor.spec.ts:149:51)

  ● MetricsInterceptor › intercept › should handle different HTTP methods

    expect(jest.fn()).toHaveBeenCalledWith(...expected)

    Expected: "DELETE", "/api/test", 200, Any<Number>

    Number of calls: 0

    [0m [90m 147 |[39m
     [90m 148 |[39m         setTimeout(() [33m=>[39m {
    [31m[1m>[22m[39m[90m 149 |[39m           expect(monitoringService[33m.[39mrecordApiCall)[33m.[39mtoHaveBeenCalledWith(
     [90m     |[39m                                                   [31m[1m^[22m[39m
     [90m 150 |[39m             method[33m,[39m
     [90m 151 |[39m             [32m'/api/test'[39m[33m,[39m
     [90m 152 |[39m             [35m200[39m[33m,[39m[0m

      at Timeout._onTimeout (monitoring/metrics.interceptor.spec.ts:149:51)

  ● MetricsInterceptor › intercept › should handle different HTTP methods

    expect(jest.fn()).toHaveBeenCalledWith(...expected)

    Expected: "PATCH", "/api/test", 200, Any<Number>

    Number of calls: 0

    [0m [90m 147 |[39m
     [90m 148 |[39m         setTimeout(() [33m=>[39m {
    [31m[1m>[22m[39m[90m 149 |[39m           expect(monitoringService[33m.[39mrecordApiCall)[33m.[39mtoHaveBeenCalledWith(
     [90m     |[39m                                                   [31m[1m^[22m[39m
     [90m 150 |[39m             method[33m,[39m
     [90m 151 |[39m             [32m'/api/test'[39m[33m,[39m
     [90m 152 |[39m             [35m200[39m[33m,[39m[0m

      at Timeout._onTimeout (monitoring/metrics.interceptor.spec.ts:149:51)

  ● MetricsInterceptor › intercept › should handle different HTTP methods

    thrown: "Exceeded timeout of 10000 ms for a test while waiting for `done()` to be called.
    Add a timeout value to this test to increase the timeout, if this is a long-running test. See https://jestjs.io/docs/api#testname-fn-timeout."

    [0m [90m 138 |[39m     })[33m;[39m
     [90m 139 |[39m
    [31m[1m>[22m[39m[90m 140 |[39m     it([32m'should handle different HTTP methods'[39m[33m,[39m (done) [33m=>[39m {
     [90m     |[39m     [31m[1m^[22m[39m
     [90m 141 |[39m       [36mconst[39m methods [33m=[39m [[32m'GET'[39m[33m,[39m [32m'POST'[39m[33m,[39m [32m'PUT'[39m[33m,[39m [32m'DELETE'[39m[33m,[39m [32m'PATCH'[39m][33m;[39m
     [90m 142 |[39m       [36mlet[39m completed [33m=[39m [35m0[39m[33m;[39m
     [90m 143 |[39m[0m

      at monitoring/metrics.interceptor.spec.ts:140:5
      at monitoring/metrics.interceptor.spec.ts:60:3
      at Object.<anonymous> (monitoring/metrics.interceptor.spec.ts:8:1)

  ● MetricsInterceptor › intercept › should handle different status codes

    expect(jest.fn()).toHaveBeenCalledWith(...expected)

    Expected: "GET", "/api/test", 200, Any<Number>

    Number of calls: 0

    [0m [90m 170 |[39m
     [90m 171 |[39m         setTimeout(() [33m=>[39m {
    [31m[1m>[22m[39m[90m 172 |[39m           expect(monitoringService[33m.[39mrecordApiCall)[33m.[39mtoHaveBeenCalledWith(
     [90m     |[39m                                                   [31m[1m^[22m[39m
     [90m 173 |[39m             [32m'GET'[39m[33m,[39m
     [90m 174 |[39m             [32m'/api/test'[39m[33m,[39m
     [90m 175 |[39m             statusCode[33m,[39m[0m

      at Timeout._onTimeout (monitoring/metrics.interceptor.spec.ts:172:51)

  ● MetricsInterceptor › intercept › should handle different status codes

    expect(jest.fn()).toHaveBeenCalledWith(...expected)

    Expected: "GET", "/api/test", 201, Any<Number>

    Number of calls: 0

    [0m [90m 170 |[39m
     [90m 171 |[39m         setTimeout(() [33m=>[39m {
    [31m[1m>[22m[39m[90m 172 |[39m           expect(monitoringService[33m.[39mrecordApiCall)[33m.[39mtoHaveBeenCalledWith(
     [90m     |[39m                                                   [31m[1m^[22m[39m
     [90m 173 |[39m             [32m'GET'[39m[33m,[39m
     [90m 174 |[39m             [32m'/api/test'[39m[33m,[39m
     [90m 175 |[39m             statusCode[33m,[39m[0m

      at Timeout._onTimeout (monitoring/metrics.interceptor.spec.ts:172:51)

  ● MetricsInterceptor › intercept › should handle different status codes

    expect(jest.fn()).toHaveBeenCalledWith(...expected)

    Expected: "GET", "/api/test", 204, Any<Number>

    Number of calls: 0

    [0m [90m 170 |[39m
     [90m 171 |[39m         setTimeout(() [33m=>[39m {
    [31m[1m>[22m[39m[90m 172 |[39m           expect(monitoringService[33m.[39mrecordApiCall)[33m.[39mtoHaveBeenCalledWith(
     [90m     |[39m                                                   [31m[1m^[22m[39m
     [90m 173 |[39m             [32m'GET'[39m[33m,[39m
     [90m 174 |[39m             [32m'/api/test'[39m[33m,[39m
     [90m 175 |[39m             statusCode[33m,[39m[0m

      at Timeout._onTimeout (monitoring/metrics.interceptor.spec.ts:172:51)

  ● MetricsInterceptor › intercept › should handle different status codes

    expect(jest.fn()).toHaveBeenCalledWith(...expected)

    Expected: "GET", "/api/test", 400, Any<Number>

    Number of calls: 0

    [0m [90m 170 |[39m
     [90m 171 |[39m         setTimeout(() [33m=>[39m {
    [31m[1m>[22m[39m[90m 172 |[39m           expect(monitoringService[33m.[39mrecordApiCall)[33m.[39mtoHaveBeenCalledWith(
     [90m     |[39m                                                   [31m[1m^[22m[39m
     [90m 173 |[39m             [32m'GET'[39m[33m,[39m
     [90m 174 |[39m             [32m'/api/test'[39m[33m,[39m
     [90m 175 |[39m             statusCode[33m,[39m[0m

      at Timeout._onTimeout (monitoring/metrics.interceptor.spec.ts:172:51)

  ● MetricsInterceptor › intercept › should handle different status codes

    expect(jest.fn()).toHaveBeenCalledWith(...expected)

    Expected: "GET", "/api/test", 401, Any<Number>

    Number of calls: 0

    [0m [90m 170 |[39m
     [90m 171 |[39m         setTimeout(() [33m=>[39m {
    [31m[1m>[22m[39m[90m 172 |[39m           expect(monitoringService[33m.[39mrecordApiCall)[33m.[39mtoHaveBeenCalledWith(
     [90m     |[39m                                                   [31m[1m^[22m[39m
     [90m 173 |[39m             [32m'GET'[39m[33m,[39m
     [90m 174 |[39m             [32m'/api/test'[39m[33m,[39m
     [90m 175 |[39m             statusCode[33m,[39m[0m

      at Timeout._onTimeout (monitoring/metrics.interceptor.spec.ts:172:51)

  ● MetricsInterceptor › intercept › should handle different status codes

    expect(jest.fn()).toHaveBeenCalledWith(...expected)

    Expected: "GET", "/api/test", 403, Any<Number>

    Number of calls: 0

    [0m [90m 170 |[39m
     [90m 171 |[39m         setTimeout(() [33m=>[39m {
    [31m[1m>[22m[39m[90m 172 |[39m           expect(monitoringService[33m.[39mrecordApiCall)[33m.[39mtoHaveBeenCalledWith(
     [90m     |[39m                                                   [31m[1m^[22m[39m
     [90m 173 |[39m             [32m'GET'[39m[33m,[39m
     [90m 174 |[39m             [32m'/api/test'[39m[33m,[39m
     [90m 175 |[39m             statusCode[33m,[39m[0m

      at Timeout._onTimeout (monitoring/metrics.interceptor.spec.ts:172:51)

  ● MetricsInterceptor › intercept › should handle different status codes

    expect(jest.fn()).toHaveBeenCalledWith(...expected)

    Expected: "GET", "/api/test", 404, Any<Number>

    Number of calls: 0

    [0m [90m 170 |[39m
     [90m 171 |[39m         setTimeout(() [33m=>[39m {
    [31m[1m>[22m[39m[90m 172 |[39m           expect(monitoringService[33m.[39mrecordApiCall)[33m.[39mtoHaveBeenCalledWith(
     [90m     |[39m                                                   [31m[1m^[22m[39m
     [90m 173 |[39m             [32m'GET'[39m[33m,[39m
     [90m 174 |[39m             [32m'/api/test'[39m[33m,[39m
     [90m 175 |[39m             statusCode[33m,[39m[0m

      at Timeout._onTimeout (monitoring/metrics.interceptor.spec.ts:172:51)

  ● MetricsInterceptor › intercept › should handle different status codes

    expect(jest.fn()).toHaveBeenCalledWith(...expected)

    Expected: "GET", "/api/test", 500, Any<Number>

    Number of calls: 0

    [0m [90m 170 |[39m
     [90m 171 |[39m         setTimeout(() [33m=>[39m {
    [31m[1m>[22m[39m[90m 172 |[39m           expect(monitoringService[33m.[39mrecordApiCall)[33m.[39mtoHaveBeenCalledWith(
     [90m     |[39m                                                   [31m[1m^[22m[39m
     [90m 173 |[39m             [32m'GET'[39m[33m,[39m
     [90m 174 |[39m             [32m'/api/test'[39m[33m,[39m
     [90m 175 |[39m             statusCode[33m,[39m[0m

      at Timeout._onTimeout (monitoring/metrics.interceptor.spec.ts:172:51)

  ● MetricsInterceptor › intercept › should handle different status codes

    expect(jest.fn()).toHaveBeenCalledWith(...expected)

    Expected: "GET", "/api/test", 502, Any<Number>

    Number of calls: 0

    [0m [90m 170 |[39m
     [90m 171 |[39m         setTimeout(() [33m=>[39m {
    [31m[1m>[22m[39m[90m 172 |[39m           expect(monitoringService[33m.[39mrecordApiCall)[33m.[39mtoHaveBeenCalledWith(
     [90m     |[39m                                                   [31m[1m^[22m[39m
     [90m 173 |[39m             [32m'GET'[39m[33m,[39m
     [90m 174 |[39m             [32m'/api/test'[39m[33m,[39m
     [90m 175 |[39m             statusCode[33m,[39m[0m

      at Timeout._onTimeout (monitoring/metrics.interceptor.spec.ts:172:51)

  ● MetricsInterceptor › intercept › should handle different status codes

    expect(jest.fn()).toHaveBeenCalledWith(...expected)

    Expected: "GET", "/api/test", 503, Any<Number>

    Number of calls: 0

    [0m [90m 170 |[39m
     [90m 171 |[39m         setTimeout(() [33m=>[39m {
    [31m[1m>[22m[39m[90m 172 |[39m           expect(monitoringService[33m.[39mrecordApiCall)[33m.[39mtoHaveBeenCalledWith(
     [90m     |[39m                                                   [31m[1m^[22m[39m
     [90m 173 |[39m             [32m'GET'[39m[33m,[39m
     [90m 174 |[39m             [32m'/api/test'[39m[33m,[39m
     [90m 175 |[39m             statusCode[33m,[39m[0m

      at Timeout._onTimeout (monitoring/metrics.interceptor.spec.ts:172:51)

  ● MetricsInterceptor › intercept › should handle different status codes

    thrown: "Exceeded timeout of 10000 ms for a test while waiting for `done()` to be called.
    Add a timeout value to this test to increase the timeout, if this is a long-running test. See https://jestjs.io/docs/api#testname-fn-timeout."

    [0m [90m 161 |[39m     })[33m;[39m
     [90m 162 |[39m
    [31m[1m>[22m[39m[90m 163 |[39m     it([32m'should handle different status codes'[39m[33m,[39m (done) [33m=>[39m {
     [90m     |[39m     [31m[1m^[22m[39m
     [90m 164 |[39m       [36mconst[39m statusCodes [33m=[39m [[35m200[39m[33m,[39m [35m201[39m[33m,[39m [35m204[39m[33m,[39m [35m400[39m[33m,[39m [35m401[39m[33m,[39m [35m403[39m[33m,[39m [35m404[39m[33m,[39m [35m500[39m[33m,[39m [35m502[39m[33m,[39m [35m503[39m][33m;[39m
     [90m 165 |[39m       [36mlet[39m completed [33m=[39m [35m0[39m[33m;[39m
     [90m 166 |[39m[0m

      at monitoring/metrics.interceptor.spec.ts:163:5
      at monitoring/metrics.interceptor.spec.ts:60:3
      at Object.<anonymous> (monitoring/metrics.interceptor.spec.ts:8:1)

  ● MetricsInterceptor › intercept › should handle different request paths

    expect(jest.fn()).toHaveBeenCalledWith(...expected)

    Expected: "GET", "/api/users", 200, Any<Number>

    Number of calls: 0

    [0m [90m 193 |[39m
     [90m 194 |[39m         setTimeout(() [33m=>[39m {
    [31m[1m>[22m[39m[90m 195 |[39m           expect(monitoringService[33m.[39mrecordApiCall)[33m.[39mtoHaveBeenCalledWith(
     [90m     |[39m                                                   [31m[1m^[22m[39m
     [90m 196 |[39m             [32m'GET'[39m[33m,[39m
     [90m 197 |[39m             path[33m,[39m
     [90m 198 |[39m             [35m200[39m[33m,[39m[0m

      at Timeout._onTimeout (monitoring/metrics.interceptor.spec.ts:195:51)

  ● MetricsInterceptor › intercept › should handle different request paths

    expect(jest.fn()).toHaveBeenCalledWith(...expected)

    Expected: "GET", "/api/products", 200, Any<Number>

    Number of calls: 0

    [0m [90m 193 |[39m
     [90m 194 |[39m         setTimeout(() [33m=>[39m {
    [31m[1m>[22m[39m[90m 195 |[39m           expect(monitoringService[33m.[39mrecordApiCall)[33m.[39mtoHaveBeenCalledWith(
     [90m     |[39m                                                   [31m[1m^[22m[39m
     [90m 196 |[39m             [32m'GET'[39m[33m,[39m
     [90m 197 |[39m             path[33m,[39m
     [90m 198 |[39m             [35m200[39m[33m,[39m[0m

      at Timeout._onTimeout (monitoring/metrics.interceptor.spec.ts:195:51)

  ● MetricsInterceptor › intercept › should handle different request paths

    expect(jest.fn()).toHaveBeenCalledWith(...expected)

    Expected: "GET", "/api/orders", 200, Any<Number>

    Number of calls: 0

    [0m [90m 193 |[39m
     [90m 194 |[39m         setTimeout(() [33m=>[39m {
    [31m[1m>[22m[39m[90m 195 |[39m           expect(monitoringService[33m.[39mrecordApiCall)[33m.[39mtoHaveBeenCalledWith(
     [90m     |[39m                                                   [31m[1m^[22m[39m
     [90m 196 |[39m             [32m'GET'[39m[33m,[39m
     [90m 197 |[39m             path[33m,[39m
     [90m 198 |[39m             [35m200[39m[33m,[39m[0m

      at Timeout._onTimeout (monitoring/metrics.interceptor.spec.ts:195:51)

  ● MetricsInterceptor › intercept › should handle different request paths

    expect(jest.fn()).toHaveBeenCalledWith(...expected)

    Expected: "GET", "/health", 200, Any<Number>

    Number of calls: 0

    [0m [90m 193 |[39m
     [90m 194 |[39m         setTimeout(() [33m=>[39m {
    [31m[1m>[22m[39m[90m 195 |[39m           expect(monitoringService[33m.[39mrecordApiCall)[33m.[39mtoHaveBeenCalledWith(
     [90m     |[39m                                                   [31m[1m^[22m[39m
     [90m 196 |[39m             [32m'GET'[39m[33m,[39m
     [90m 197 |[39m             path[33m,[39m
     [90m 198 |[39m             [35m200[39m[33m,[39m[0m

      at Timeout._onTimeout (monitoring/metrics.interceptor.spec.ts:195:51)

  ● MetricsInterceptor › intercept › should handle different request paths

    thrown: "Exceeded timeout of 10000 ms for a test while waiting for `done()` to be called.
    Add a timeout value to this test to increase the timeout, if this is a long-running test. See https://jestjs.io/docs/api#testname-fn-timeout."

    [0m [90m 184 |[39m     })[33m;[39m
     [90m 185 |[39m
    [31m[1m>[22m[39m[90m 186 |[39m     it([32m'should handle different request paths'[39m[33m,[39m (done) [33m=>[39m {
     [90m     |[39m     [31m[1m^[22m[39m
     [90m 187 |[39m       [36mconst[39m paths [33m=[39m [[32m'/api/users'[39m[33m,[39m [32m'/api/products'[39m[33m,[39m [32m'/api/orders'[39m[33m,[39m [32m'/health'[39m][33m;[39m
     [90m 188 |[39m       [36mlet[39m completed [33m=[39m [35m0[39m[33m;[39m
     [90m 189 |[39m[0m

      at monitoring/metrics.interceptor.spec.ts:186:5
      at monitoring/metrics.interceptor.spec.ts:60:3
      at Object.<anonymous> (monitoring/metrics.interceptor.spec.ts:8:1)

  ● MetricsInterceptor › intercept › should handle concurrent requests

    expect(jest.fn()).toHaveBeenCalledTimes(expected)

    Expected number of calls: 5
    Received number of calls: 0

    [0m [90m 218 |[39m       [90m// Wait for all observables to complete[39m
     [90m 219 |[39m       setTimeout(() [33m=>[39m {
    [31m[1m>[22m[39m[90m 220 |[39m         expect(monitoringService[33m.[39mdecrementActiveConnections)[33m.[39mtoHaveBeenCalledTimes(concurrentRequests)[33m;[39m
     [90m     |[39m                                                              [31m[1m^[22m[39m
     [90m 221 |[39m         expect(monitoringService[33m.[39mrecordApiCall)[33m.[39mtoHaveBeenCalledTimes(concurrentRequests)[33m;[39m
     [90m 222 |[39m         done()[33m;[39m
     [90m 223 |[39m       }[33m,[39m [35m0[39m)[33m;[39m[0m

      at Timeout._onTimeout (monitoring/metrics.interceptor.spec.ts:220:62)

  ● MetricsInterceptor › intercept › should handle concurrent requests

    thrown: "Exceeded timeout of 10000 ms for a test while waiting for `done()` to be called.
    Add a timeout value to this test to increase the timeout, if this is a long-running test. See https://jestjs.io/docs/api#testname-fn-timeout."

    [0m [90m 207 |[39m     })[33m;[39m
     [90m 208 |[39m
    [31m[1m>[22m[39m[90m 209 |[39m     it([32m'should handle concurrent requests'[39m[33m,[39m (done) [33m=>[39m {
     [90m     |[39m     [31m[1m^[22m[39m
     [90m 210 |[39m       [36mconst[39m concurrentRequests [33m=[39m [35m5[39m[33m;[39m
     [90m 211 |[39m
     [90m 212 |[39m       [36mfor[39m ([36mlet[39m i [33m=[39m [35m0[39m[33m;[39m i [33m<[39m concurrentRequests[33m;[39m i[33m++[39m) {[0m

      at monitoring/metrics.interceptor.spec.ts:209:5
      at monitoring/metrics.interceptor.spec.ts:60:3
      at Object.<anonymous> (monitoring/metrics.interceptor.spec.ts:8:1)

[31m[Nest] 14512  - [39m2025/10/09 15:44:15 [31m  ERROR[39m [38;5;3m[LogAnalyticsService] [39m[31mFailed to get log stats[39m
AxiosError: Request failed with status code 403
    at settle (D:\onlinestore\backend\node_modules\axios\lib\core\settle.js:19:12)
    at BrotliDecompress.handleStreamEnd (D:\onlinestore\backend\node_modules\axios\lib\adapters\http.js:617:11)
    at BrotliDecompress.emit (node:events:531:35)
    at endReadableNT (node:internal/streams/readable:1698:12)
    at processTicksAndRejections (node:internal/process/task_queues:90:21)
    at Axios.request (D:\onlinestore\backend\node_modules\axios\lib\core\Axios.js:45:41)
    at processTicksAndRejections (node:internal/process/task_queues:105:5)
[31m[Nest] 14512  - [39m2025/10/09 15:44:15 [31m  ERROR[39m [38;5;3m[LogAnalyticsService] [39m[31mFailed to get user behavior analytics[39m
AxiosError: Request failed with status code 403
    at settle (D:\onlinestore\backend\node_modules\axios\lib\core\settle.js:19:12)
    at BrotliDecompress.handleStreamEnd (D:\onlinestore\backend\node_modules\axios\lib\adapters\http.js:617:11)
    at BrotliDecompress.emit (node:events:531:35)
    at endReadableNT (node:internal/streams/readable:1698:12)
    at processTicksAndRejections (node:internal/process/task_queues:90:21)
    at Axios.request (D:\onlinestore\backend\node_modules\axios\lib\core\Axios.js:45:41)
    at processTicksAndRejections (node:internal/process/task_queues:105:5)
[31m[Nest] 14512  - [39m2025/10/09 15:44:15 [31m  ERROR[39m [38;5;3m[LoggingController] [39m[31mFailed to get user behavior analytics[39m
AxiosError: Request failed with status code 403
    at settle (D:\onlinestore\backend\node_modules\axios\lib\core\settle.js:19:12)
    at BrotliDecompress.handleStreamEnd (D:\onlinestore\backend\node_modules\axios\lib\adapters\http.js:617:11)
    at BrotliDecompress.emit (node:events:531:35)
    at endReadableNT (node:internal/streams/readable:1698:12)
    at processTicksAndRejections (node:internal/process/task_queues:90:21)
    at Axios.request (D:\onlinestore\backend\node_modules\axios\lib\core\Axios.js:45:41)
    at processTicksAndRejections (node:internal/process/task_queues:105:5)
[31m[Nest] 14512  - [39m2025/10/09 15:44:15 [31m  ERROR[39m [38;5;3m[LogAnalyticsService] [39m[31mFailed to detect anomalous patterns[39m
AxiosError: Request failed with status code 403
    at settle (D:\onlinestore\backend\node_modules\axios\lib\core\settle.js:19:12)
    at BrotliDecompress.handleStreamEnd (D:\onlinestore\backend\node_modules\axios\lib\adapters\http.js:617:11)
    at BrotliDecompress.emit (node:events:531:35)
    at endReadableNT (node:internal/streams/readable:1698:12)
    at processTicksAndRejections (node:internal/process/task_queues:90:21)
    at Axios.request (D:\onlinestore\backend\node_modules\axios\lib\core\Axios.js:45:41)
    at processTicksAndRejections (node:internal/process/task_queues:105:5)
[31m[Nest] 14512  - [39m2025/10/09 15:44:15 [31m  ERROR[39m [38;5;3m[LoggingController] [39m[31mFailed to detect anomalous patterns[39m
AxiosError: Request failed with status code 403
    at settle (D:\onlinestore\backend\node_modules\axios\lib\core\settle.js:19:12)
    at BrotliDecompress.handleStreamEnd (D:\onlinestore\backend\node_modules\axios\lib\adapters\http.js:617:11)
    at BrotliDecompress.emit (node:events:531:35)
    at endReadableNT (node:internal/streams/readable:1698:12)
    at processTicksAndRejections (node:internal/process/task_queues:90:21)
    at Axios.request (D:\onlinestore\backend\node_modules\axios\lib\core\Axios.js:45:41)
    at processTicksAndRejections (node:internal/process/task_queues:105:5)
[31m[Nest] 14512  - [39m2025/10/09 15:44:16 [31m  ERROR[39m [38;5;3m[LogAnalyticsService] [39m[31mFailed to get popular pages[39m
[31m[Nest] 14512  - [39m2025/10/09 15:44:16 [31m  ERROR[39m [38;5;3m[LogAnalyticsService] [39mAxiosError {
  message: [32m'Request failed with status code 403'[39m,
  name: [32m'AxiosError'[39m,
  code: [32m'ERR_BAD_REQUEST'[39m,
  config: {
    transitional: {
      silentJSONParsing: [33mtrue[39m,
      forcedJSONParsing: [33mtrue[39m,
      clarifyTimeoutError: [33mfalse[39m
    },
    adapter: [
      [32m'xhr'[39m,
      [32m'http'[39m,
      [32m'fetch'[39m
    ],
    transformRequest: [
      [36m[Function: transformRequest][39m
    ],
    transformResponse: [
      [36m[Function: transformResponse][39m
    ],
    timeout: [33m30000[39m,
    xsrfCookieName: [32m'XSRF-TOKEN'[39m,
    xsrfHeaderName: [32m'X-XSRF-TOKEN'[39m,
    maxContentLength: [33m-1[39m,
    maxBodyLength: [33m-1[39m,
    env: {
      FormData: [Function: FormData] [FormData] {
        LINE_BREAK: [32m'\r\n'[39m,
        DEFAULT_CONTENT_TYPE: [32m'application/octet-stream'[39m
      },
      Blob: [36m[class Blob][39m
    },
    validateStatus: [36m[Function: validateStatus][39m,
    headers: Object [AxiosHeaders] {
      Accept: [32m'application/json, text/plain, */*'[39m,
      [32m'Content-Type'[39m: [32m'application/json'[39m,
      Authorization: [32m'Bearer '[39m,
      [32m'User-Agent'[39m: [32m'axios/1.12.2'[39m,
      [32m'Content-Length'[39m: [32m'379'[39m,
      [32m'Accept-Encoding'[39m: [32m'gzip, compress, deflate, br'[39m
    },
    cancelToken: CancelToken {
      promise: Promise {
        CanceledError {
          message: [32m'canceled'[39m,
          name: [32m'CanceledError'[39m,
          code: [32m'ERR_CANCELED'[39m
        },
        then: [36m[Function (anonymous)][39m,
        [[32mSymbol(async_id_symbol)[39m]: [33m12860[39m,
        [[32mSymbol(trigger_async_id_symbol)[39m]: [33m12842[39m,
        [[32mSymbol(kResourceStore)[39m]: [90mundefined[39m,
        [[32mSymbol(kResourceStore)[39m]: [32m'Logging Integration Log Analytics Integration should get popular pages through controller'[39m
      },
      _listeners: [],
      reason: CanceledError {
        message: [32m'canceled'[39m,
        name: [32m'CanceledError'[39m,
        code: [32m'ERR_CANCELED'[39m
      }
    },
    method: [32m'post'[39m,
    url: [32m'http://localhost:5080/api/default/_search'[39m,
    data: [32m`{"query":"\\n      SELECT eventData.page as page,\\n             COUNT(*) as view_count,\\n             COUNT(DISTINCT userId) as unique_users\\n      FROM user-behavior\\n      WHERE eventType = 'PAGE_VIEW' \\n        AND timestamp >= '2023-01-01T00:00:00Z' \\n        AND timestamp <= '2023-01-02T00:00:00Z'\\n      GROUP BY page\\n      ORDER BY view_count DESC\\n      LIMIT 10\\n    "}`[39m,
    allowAbsoluteUrls: [33mtrue[39m
  },
  request: [36m<ref *1>[39m ClientRequest {
    _events: [Object: null prototype] {
      abort: [36m[Function (anonymous)][39m,
      aborted: [36m[Function (anonymous)][39m,
      connect: [36m[Function (anonymous)][39m,
      error: [36m[Function (anonymous)][39m,
      socket: [36m[Function (anonymous)][39m,
      timeout: [36m[Function (anonymous)][39m,
      finish: [36m[Function: requestOnFinish][39m
    },
    _eventsCount: [33m7[39m,
    _maxListeners: [90mundefined[39m,
    outputData: [],
    outputSize: [33m0[39m,
    writable: [33mtrue[39m,
    destroyed: [33mtrue[39m,
    _last: [33mfalse[39m,
    chunkedEncoding: [33mfalse[39m,
    shouldKeepAlive: [33mfalse[39m,
    maxRequestsOnConnectionReached: [33mfalse[39m,
    _defaultKeepAlive: [33mtrue[39m,
    useChunkedEncodingByDefault: [33mtrue[39m,
    sendDate: [33mfalse[39m,
    _removedConnection: [33mfalse[39m,
    _removedContLen: [33mfalse[39m,
    _removedTE: [33mfalse[39m,
    strictContentLength: [33mfalse[39m,
    _contentLength: [33m379[39m,
    _hasBody: [33mtrue[39m,
    _trailer: [32m''[39m,
    finished: [33mtrue[39m,
    _headerSent: [33mtrue[39m,
    _closed: [33mtrue[39m,
    _header: [32m'POST /api/default/_search HTTP/1.1\r\nAccept: application/json, text/plain, */*\r\nContent-Type: application/json\r\nAuthorization: Bearer \r\nUser-Agent: axios/1.12.2\r\nContent-Length: 379\r\nAccept-Encoding: gzip, compress, deflate, br\r\nHost: localhost:5080\r\nConnection: keep-alive\r\n\r\n'[39m,
    _keepAliveTimeout: [33m0[39m,
    _onPendingData: [36m[Function: nop][39m,
    agent: Agent {
      _events: [Object: null prototype] {
        free: [36m[Function (anonymous)][39m,
        newListener: [36m[Function: maybeEnableKeylog][39m
      },
      _eventsCount: [33m2[39m,
      _maxListeners: [90mundefined[39m,
      defaultPort: [33m80[39m,
      protocol: [32m'http:'[39m,
      options: [Object: null prototype] {
        keepAlive: [33mtrue[39m,
        scheduling: [32m'lifo'[39m,
        timeout: [33m5000[39m,
        noDelay: [33mtrue[39m,
        path: [1mnull[22m
      },
      requests: [Object: null prototype] {},
      sockets: [Object: null prototype] {},
      freeSockets: [Object: null prototype] {},
      keepAliveMsecs: [33m1000[39m,
      keepAlive: [33mtrue[39m,
      maxSockets: [33mInfinity[39m,
      maxFreeSockets: [33m256[39m,
      scheduling: [32m'lifo'[39m,
      maxTotalSockets: [33mInfinity[39m,
      totalSocketCount: [33m0[39m,
      agentKeepAliveTimeoutBuffer: [33m1000[39m,
      [[32mSymbol(shapeMode)[39m]: [33mfalse[39m,
      [[32mSymbol(kCapture)[39m]: [33mfalse[39m
    },
    socketPath: [90mundefined[39m,
    method: [32m'POST'[39m,
    maxHeaderSize: [90mundefined[39m,
    insecureHTTPParser: [90mundefined[39m,
    joinDuplicateHeaders: [90mundefined[39m,
    path: [32m'/api/default/_search'[39m,
    _ended: [33mtrue[39m,
    res: IncomingMessage {
      _events: {
        close: [
          [36m[Function (anonymous)][39m,
          [36m[Function: onclose][39m,
          [36m[Function: onclose][39m
        ],
        error: [
          [36m[Function: onerror][39m,
          [36m[Function: onError][39m,
          [36m[Function: onerror][39m
        ],
        data: [90mundefined[39m,
        end: [
          [36m[Function: responseOnEnd][39m,
          [36m[Function: onend][39m,
          [36m[Function: onend][39m
        ],
        readable: [90mundefined[39m,
        finish: [
          [36m[Function: onfinish][39m,
          [36m[Function: onfinish][39m
        ]
      },
      _readableState: ReadableState {
        highWaterMark: [33m16384[39m,
        buffer: [],
        bufferIndex: [33m0[39m,
        length: [33m0[39m,
        pipes: [],
        awaitDrainWriters: [1mnull[22m,
        [[32mSymbol(kState)[39m]: [33m110892924[39m
      },
      _maxListeners: [90mundefined[39m,
      socket: Socket {
        connecting: [33mfalse[39m,
        _hadError: [33mfalse[39m,
        _parent: [1mnull[22m,
        _host: [32m'localhost'[39m,
        _closeAfterHandlingError: [33mfalse[39m,
        _events: {
          close: [
            [36m[Function: onClose][39m,
            [36m[Function: socketCloseListener][39m
          ],
          error: [36m[Function: socketErrorListener][39m,
          prefinish: [90mundefined[39m,
          finish: [90mundefined[39m,
          drain: [90mundefined[39m,
          data: [90mundefined[39m,
          end: [36m[Function: onReadableStreamEnd][39m,
          readable: [90mundefined[39m,
          connect: [90mundefined[39m,
          free: [36m[Function: onFree][39m,
          timeout: [
            [36m[Function: onTimeout][39m,
            [36m[Function (anonymous)][39m
          ],
          agentRemove: [36m[Function: onRemove][39m
        },
        _readableState: ReadableState {
          highWaterMark: [33m16384[39m,
          buffer: [],
          bufferIndex: [33m0[39m,
          length: [33m0[39m,
          pipes: [],
          awaitDrainWriters: [1mnull[22m,
          [[32mSymbol(kState)[39m]: [33m60303732[39m
        },
        _writableState: WritableState {
          highWaterMark: [33m16384[39m,
          length: [33m0[39m,
          corked: [33m0[39m,
          onwrite: [36m[Function: bound onwrite][39m,
          writelen: [33m0[39m,
          bufferedIndex: [33m0[39m,
          pendingcb: [33m0[39m,
          [[32mSymbol(kState)[39m]: [33m1091450228[39m,
          [[32mSymbol(kBufferedValue)[39m]: [1mnull[22m,
          [[32mSymbol(kWriteCbValue)[39m]: [1mnull[22m
        },
        allowHalfOpen: [33mfalse[39m,
        _maxListeners: [90mundefined[39m,
        _eventsCount: [33m6[39m,
        _sockname: [1mnull[22m,
        _pendingData: [1mnull[22m,
        _pendingEncoding: [32m''[39m,
        server: [1mnull[22m,
        _server: [1mnull[22m,
        timeout: [33m30000[39m,
        parser: [1mnull[22m,
        _httpMessage: [36m[Circular *1][39m,
        autoSelectFamilyAttemptedAddresses: [
          [32m'::1:5080'[39m
        ],
        [[32mSymbol(async_id_symbol)[39m]: [33m12866[39m,
        [[32mSymbol(kHandle)[39m]: [1mnull[22m,
        [[32mSymbol(lastWriteQueueSize)[39m]: [33m0[39m,
        [[32mSymbol(timeout)[39m]: Timeout {
          _idleTimeout: [33m-1[39m,
          _idlePrev: [1mnull[22m,
          _idleNext: [1mnull[22m,
          _idleStart: [33m95302[39m,
          _onTimeout: [1mnull[22m,
          _timerArgs: [90mundefined[39m,
          _repeat: [1mnull[22m,
          _destroyed: [33mtrue[39m,
          [[32mSymbol(refed)[39m]: [33mfalse[39m,
          [[32mSymbol(kHasPrimitive)[39m]: [33mfalse[39m,
          [[32mSymbol(asyncId)[39m]: [33m12886[39m,
          [[32mSymbol(triggerId)[39m]: [33m12868[39m,
          [[32mSymbol(kAsyncContextFrame)[39m]: [90mundefined[39m,
          [[32mSymbol(kResourceStore)[39m]: [90mundefined[39m,
          [[32mSymbol(kResourceStore)[39m]: [32m'Logging Integration Log Analytics Integration should get popular pages through controller'[39m
        },
        [[32mSymbol(kBuffer)[39m]: [1mnull[22m,
        [[32mSymbol(kBufferCb)[39m]: [1mnull[22m,
        [[32mSymbol(kBufferGen)[39m]: [1mnull[22m,
        [[32mSymbol(shapeMode)[39m]: [33mtrue[39m,
        [[32mSymbol(kCapture)[39m]: [33mfalse[39m,
        [[32mSymbol(kSetNoDelay)[39m]: [33mtrue[39m,
        [[32mSymbol(kSetKeepAlive)[39m]: [33mtrue[39m,
        [[32mSymbol(kSetKeepAliveInitialDelay)[39m]: [33m60[39m,
        [[32mSymbol(kBytesRead)[39m]: [33m372[39m,
        [[32mSymbol(kBytesWritten)[39m]: [33m655[39m
      },
      httpVersionMajor: [33m1[39m,
      httpVersionMinor: [33m1[39m,
      httpVersion: [32m'1.1'[39m,
      complete: [33mtrue[39m,
      rawHeaders: [
        [32m'transfer-encoding'[39m,
        [32m'chunked'[39m,
        [32m'connection'[39m,
        [32m'close'[39m,
        [32m'content-type'[39m,
        [32m'text/plain; charset=utf-8'[39m,
        [32m'vary'[39m,
        [32m'Origin, Access-Control-Request-Method, Access-Control-Request-Headers'[39m,
        [32m'vary'[39m,
        [32m'accept-encoding'[39m,
        [32m'content-encoding'[39m,
        [32m'br'[39m,
        [32m'access-control-allow-credentials'[39m,
        [32m'true'[39m,
        [32m'x-api-node'[39m,
        [32m'995170affe05'[39m,
        [32m'date'[39m,
        [32m'Thu, 09 Oct 2025 07:44:15 GMT'[39m
      ],
      rawTrailers: [],
      joinDuplicateHeaders: [90mundefined[39m,
      aborted: [33mfalse[39m,
      upgrade: [33mfalse[39m,
      url: [32m''[39m,
      method: [1mnull[22m,
      statusCode: [33m403[39m,
      statusMessage: [32m'Forbidden'[39m,
      client: Socket {
        connecting: [33mfalse[39m,
        _hadError: [33mfalse[39m,
        _parent: [1mnull[22m,
        _host: [32m'localhost'[39m,
        _closeAfterHandlingError: [33mfalse[39m,
        _events: {
          close: [
            [36m[Function: onClose][39m,
            [36m[Function: socketCloseListener][39m
          ],
          error: [36m[Function: socketErrorListener][39m,
          prefinish: [90mundefined[39m,
          finish: [90mundefined[39m,
          drain: [90mundefined[39m,
          data: [90mundefined[39m,
          end: [36m[Function: onReadableStreamEnd][39m,
          readable: [90mundefined[39m,
          connect: [90mundefined[39m,
          free: [36m[Function: onFree][39m,
          timeout: [
            [36m[Function: onTimeout][39m,
            [36m[Function (anonymous)][39m
          ],
          agentRemove: [36m[Function: onRemove][39m
        },
        _readableState: ReadableState {
          highWaterMark: [33m16384[39m,
          buffer: [],
          bufferIndex: [33m0[39m,
          length: [33m0[39m,
          pipes: [],
          awaitDrainWriters: [1mnull[22m,
          [[32mSymbol(kState)[39m]: [33m60303732[39m
        },
        _writableState: WritableState {
          highWaterMark: [33m16384[39m,
          length: [33m0[39m,
          corked: [33m0[39m,
          onwrite: [36m[Function: bound onwrite][39m,
          writelen: [33m0[39m,
          bufferedIndex: [33m0[39m,
          pendingcb: [33m0[39m,
          [[32mSymbol(kState)[39m]: [33m1091450228[39m,
          [[32mSymbol(kBufferedValue)[39m]: [1mnull[22m,
          [[32mSymbol(kWriteCbValue)[39m]: [1mnull[22m
        },
        allowHalfOpen: [33mfalse[39m,
        _maxListeners: [90mundefined[39m,
        _eventsCount: [33m6[39m,
        _sockname: [1mnull[22m,
        _pendingData: [1mnull[22m,
        _pendingEncoding: [32m''[39m,
        server: [1mnull[22m,
        _server: [1mnull[22m,
        timeout: [33m30000[39m,
        parser: [1mnull[22m,
        _httpMessage: [36m[Circular *1][39m,
        autoSelectFamilyAttemptedAddresses: [
          [32m'::1:5080'[39m
        ],
        [[32mSymbol(async_id_symbol)[39m]: [33m12866[39m,
        [[32mSymbol(kHandle)[39m]: [1mnull[22m,
        [[32mSymbol(lastWriteQueueSize)[39m]: [33m0[39m,
        [[32mSymbol(timeout)[39m]: Timeout {
          _idleTimeout: [33m-1[39m,
          _idlePrev: [1mnull[22m,
          _idleNext: [1mnull[22m,
          _idleStart: [33m95302[39m,
          _onTimeout: [1mnull[22m,
          _timerArgs: [90mundefined[39m,
          _repeat: [1mnull[22m,
          _destroyed: [33mtrue[39m,
          [[32mSymbol(refed)[39m]: [33mfalse[39m,
          [[32mSymbol(kHasPrimitive)[39m]: [33mfalse[39m,
          [[32mSymbol(asyncId)[39m]: [33m12886[39m,
          [[32mSymbol(triggerId)[39m]: [33m12868[39m,
          [[32mSymbol(kAsyncContextFrame)[39m]: [90mundefined[39m,
          [[32mSymbol(kResourceStore)[39m]: [90mundefined[39m,
          [[32mSymbol(kResourceStore)[39m]: [32m'Logging Integration Log Analytics Integration should get popular pages through controller'[39m
        },
        [[32mSymbol(kBuffer)[39m]: [1mnull[22m,
        [[32mSymbol(kBufferCb)[39m]: [1mnull[22m,
        [[32mSymbol(kBufferGen)[39m]: [1mnull[22m,
        [[32mSymbol(shapeMode)[39m]: [33mtrue[39m,
        [[32mSymbol(kCapture)[39m]: [33mfalse[39m,
        [[32mSymbol(kSetNoDelay)[39m]: [33mtrue[39m,
        [[32mSymbol(kSetKeepAlive)[39m]: [33mtrue[39m,
        [[32mSymbol(kSetKeepAliveInitialDelay)[39m]: [33m60[39m,
        [[32mSymbol(kBytesRead)[39m]: [33m372[39m,
        [[32mSymbol(kBytesWritten)[39m]: [33m655[39m
      },
      _consuming: [33mfalse[39m,
      _dumped: [33mfalse[39m,
      req: [36m[Circular *1][39m,
      _eventsCount: [33m4[39m,
      responseUrl: [32m'http://localhost:5080/api/default/_search'[39m,
      redirects: [],
      [[32mSymbol(shapeMode)[39m]: [33mtrue[39m,
      [[32mSymbol(kCapture)[39m]: [33mfalse[39m,
      [[32mSymbol(kHeaders)[39m]: {
        [32m'transfer-encoding'[39m: [32m'chunked'[39m,
        connection: [32m'close'[39m,
        [32m'content-type'[39m: [32m'text/plain; charset=utf-8'[39m,
        vary: [32m'Origin, Access-Control-Request-Method, Access-Control-Request-Headers, accept-encoding'[39m,
        [32m'access-control-allow-credentials'[39m: [32m'true'[39m,
        [32m'x-api-node'[39m: [32m'995170affe05'[39m,
        date: [32m'Thu, 09 Oct 2025 07:44:15 GMT'[39m
      },
      [[32mSymbol(kHeadersCount)[39m]: [33m18[39m,
      [[32mSymbol(kTrailers)[39m]: [1mnull[22m,
      [[32mSymbol(kTrailersCount)[39m]: [33m0[39m
    },
    aborted: [33mfalse[39m,
    timeoutCb: [36m[Function: emitRequestTimeout][39m,
    upgradeOrConnect: [33mfalse[39m,
    parser: [1mnull[22m,
    maxHeadersCount: [1mnull[22m,
    reusedSocket: [33mfalse[39m,
    host: [32m'localhost'[39m,
    protocol: [32m'http:'[39m,
    _redirectable: Writable {
      _events: {
        close: [90mundefined[39m,
        error: [36m[Function: handleRequestError][39m,
        prefinish: [90mundefined[39m,
        finish: [90mundefined[39m,
        drain: [90mundefined[39m,
        response: [36m[Function: handleResponse][39m,
        socket: [
          [36m[Function: handleRequestSocket][39m,
          [36m[Function: destroyOnTimeout][39m
        ],
        timeout: [90mundefined[39m,
        abort: [90mundefined[39m
      },
      _writableState: WritableState {
        highWaterMark: [33m16384[39m,
        length: [33m0[39m,
        corked: [33m0[39m,
        onwrite: [36m[Function: bound onwrite][39m,
        writelen: [33m0[39m,
        bufferedIndex: [33m0[39m,
        pendingcb: [33m0[39m,
        [[32mSymbol(kState)[39m]: [33m17580812[39m,
        [[32mSymbol(kBufferedValue)[39m]: [1mnull[22m
      },
      _maxListeners: [90mundefined[39m,
      _options: {
        maxRedirects: [33m21[39m,
        maxBodyLength: [33mInfinity[39m,
        protocol: [32m'http:'[39m,
        path: [32m'/api/default/_search'[39m,
        method: [32m'POST'[39m,
        headers: [Object: null prototype] {
          Accept: [32m'application/json, text/plain, */*'[39m,
          [32m'Content-Type'[39m: [32m'application/json'[39m,
          Authorization: [32m'Bearer '[39m,
          [32m'User-Agent'[39m: [32m'axios/1.12.2'[39m,
          [32m'Content-Length'[39m: [32m'379'[39m,
          [32m'Accept-Encoding'[39m: [32m'gzip, compress, deflate, br'[39m
        },
        agents: {
          http: [90mundefined[39m,
          https: [90mundefined[39m
        },
        auth: [90mundefined[39m,
        family: [90mundefined[39m,
        beforeRedirect: [36m[Function: dispatchBeforeRedirect][39m,
        beforeRedirects: {
          proxy: [36m[Function: beforeRedirect][39m
        },
        hostname: [32m'localhost'[39m,
        port: [32m'5080'[39m,
        agent: [90mundefined[39m,
        nativeProtocols: {
          [32m'http:'[39m: {
            _connectionListener: [36m[Function: connectionListener][39m,
            METHODS: [36m[Array][39m,
            STATUS_CODES: [36m[Object][39m,
            Agent: [36m[Function][39m,
            ClientRequest: [36m[Function: ClientRequest][39m,
            IncomingMessage: [36m[Function: IncomingMessage][39m,
            OutgoingMessage: [36m[Function: OutgoingMessage][39m,
            Server: [36m[Function: Server][39m,
            ServerResponse: [36m[Function: ServerResponse][39m,
            createServer: [36m[Function: createServer][39m,
            validateHeaderName: [36m[Function][39m,
            validateHeaderValue: [36m[Function][39m,
            get: [36m[Function: get][39m,
            request: [36m[Function: request][39m,
            setMaxIdleHTTPParsers: [36m[Function: setMaxIdleHTTPParsers][39m,
            maxHeaderSize: [36m[Getter][39m,
            globalAgent: [36m[Getter/Setter][39m,
            WebSocket: [36m[Getter][39m,
            CloseEvent: [36m[Getter][39m,
            MessageEvent: [36m[Getter][39m
          },
          [32m'https:'[39m: {
            Agent: [36m[Function: Agent][39m,
            globalAgent: [36m[Agent][39m,
            Server: [36m[Function: Server][39m,
            createServer: [36m[Function: createServer][39m,
            get: [36m[Function: get][39m,
            request: [36m[Function: request][39m
          }
        },
        pathname: [32m'/api/default/_search'[39m
      },
      _ended: [33mtrue[39m,
      _ending: [33mtrue[39m,
      _redirectCount: [33m0[39m,
      _redirects: [],
      _requestBodyLength: [33m379[39m,
      _requestBodyBuffers: [],
      _eventsCount: [33m3[39m,
      _onNativeResponse: [36m[Function (anonymous)][39m,
      _currentRequest: [36m[Circular *1][39m,
      _currentUrl: [32m'http://localhost:5080/api/default/_search'[39m,
      _timeout: [1mnull[22m,
      [[32mSymbol(shapeMode)[39m]: [33mtrue[39m,
      [[32mSymbol(kCapture)[39m]: [33mfalse[39m
    },
    [[32mSymbol(shapeMode)[39m]: [33mfalse[39m,
    [[32mSymbol(kCapture)[39m]: [33mfalse[39m,
    [[32mSymbol(kBytesWritten)[39m]: [33m0[39m,
    [[32mSymbol(kNeedDrain)[39m]: [33mfalse[39m,
    [[32mSymbol(corked)[39m]: [33m0[39m,
    [[32mSymbol(kChunkedBuffer)[39m]: [],
    [[32mSymbol(kChunkedLength)[39m]: [33m0[39m,
    [[32mSymbol(kSocket)[39m]: Socket {
      connecting: [33mfalse[39m,
      _hadError: [33mfalse[39m,
      _parent: [1mnull[22m,
      _host: [32m'localhost'[39m,
      _closeAfterHandlingError: [33mfalse[39m,
      _events: {
        close: [
          [36m[Function: onClose][39m,
          [36m[Function: socketCloseListener][39m
        ],
        error: [36m[Function: socketErrorListener][39m,
        prefinish: [90mundefined[39m,
        finish: [90mundefined[39m,
        drain: [90mundefined[39m,
        data: [90mundefined[39m,
        end: [36m[Function: onReadableStreamEnd][39m,
        readable: [90mundefined[39m,
        connect: [90mundefined[39m,
        free: [36m[Function: onFree][39m,
        timeout: [
          [36m[Function: onTimeout][39m,
          [36m[Function (anonymous)][39m
        ],
        agentRemove: [36m[Function: onRemove][39m
      },
      _readableState: ReadableState {
        highWaterMark: [33m16384[39m,
        buffer: [],
        bufferIndex: [33m0[39m,
        length: [33m0[39m,
        pipes: [],
        awaitDrainWriters: [1mnull[22m,
        [[32mSymbol(kState)[39m]: [33m60303732[39m
      },
      _writableState: WritableState {
        highWaterMark: [33m16384[39m,
        length: [33m0[39m,
        corked: [33m0[39m,
        onwrite: [36m[Function: bound onwrite][39m,
        writelen: [33m0[39m,
        bufferedIndex: [33m0[39m,
        pendingcb: [33m0[39m,
        [[32mSymbol(kState)[39m]: [33m1091450228[39m,
        [[32mSymbol(kBufferedValue)[39m]: [1mnull[22m,
        [[32mSymbol(kWriteCbValue)[39m]: [1mnull[22m
      },
      allowHalfOpen: [33mfalse[39m,
      _maxListeners: [90mundefined[39m,
      _eventsCount: [33m6[39m,
      _sockname: [1mnull[22m,
      _pendingData: [1mnull[22m,
      _pendingEncoding: [32m''[39m,
      server: [1mnull[22m,
      _server: [1mnull[22m,
      timeout: [33m30000[39m,
      parser: [1mnull[22m,
      _httpMessage: [36m[Circular *1][39m,
      autoSelectFamilyAttemptedAddresses: [
        [32m'::1:5080'[39m
      ],
      [[32mSymbol(async_id_symbol)[39m]: [33m12866[39m,
      [[32mSymbol(kHandle)[39m]: [1mnull[22m,
      [[32mSymbol(lastWriteQueueSize)[39m]: [33m0[39m,
      [[32mSymbol(timeout)[39m]: Timeout {
        _idleTimeout: [33m-1[39m,
        _idlePrev: [1mnull[22m,
        _idleNext: [1mnull[22m,
        _idleStart: [33m95302[39m,
        _onTimeout: [1mnull[22m,
        _timerArgs: [90mundefined[39m,
        _repeat: [1mnull[22m,
        _destroyed: [33mtrue[39m,
        [[32mSymbol(refed)[39m]: [33mfalse[39m,
        [[32mSymbol(kHasPrimitive)[39m]: [33mfalse[39m,
        [[32mSymbol(asyncId)[39m]: [33m12886[39m,
        [[32mSymbol(triggerId)[39m]: [33m12868[39m,
        [[32mSymbol(kAsyncContextFrame)[39m]: [90mundefined[39m,
        [[32mSymbol(kResourceStore)[39m]: [90mundefined[39m,
        [[32mSymbol(kResourceStore)[39m]: [32m'Logging Integration Log Analytics Integration should get popular pages through controller'[39m
      },
      [[32mSymbol(kBuffer)[39m]: [1mnull[22m,
      [[32mSymbol(kBufferCb)[39m]: [1mnull[22m,
      [[32mSymbol(kBufferGen)[39m]: [1mnull[22m,
      [[32mSymbol(shapeMode)[39m]: [33mtrue[39m,
      [[32mSymbol(kCapture)[39m]: [33mfalse[39m,
      [[32mSymbol(kSetNoDelay)[39m]: [33mtrue[39m,
      [[32mSymbol(kSetKeepAlive)[39m]: [33mtrue[39m,
      [[32mSymbol(kSetKeepAliveInitialDelay)[39m]: [33m60[39m,
      [[32mSymbol(kBytesRead)[39m]: [33m372[39m,
      [[32mSymbol(kBytesWritten)[39m]: [33m655[39m
    },
    [[32mSymbol(kOutHeaders)[39m]: [Object: null prototype] {
      accept: [
        [32m'Accept'[39m,
        [32m'application/json, text/plain, */*'[39m
      ],
      [32m'content-type'[39m: [
        [32m'Content-Type'[39m,
        [32m'application/json'[39m
      ],
      authorization: [
        [32m'Authorization'[39m,
        [32m'Bearer '[39m
      ],
      [32m'user-agent'[39m: [
        [32m'User-Agent'[39m,
        [32m'axios/1.12.2'[39m
      ],
      [32m'content-length'[39m: [
        [32m'Content-Length'[39m,
        [32m'379'[39m
      ],
      [32m'accept-encoding'[39m: [
        [32m'Accept-Encoding'[39m,
        [32m'gzip, compress, deflate, br'[39m
      ],
      host: [
        [32m'Host'[39m,
        [32m'localhost:5080'[39m
      ]
    },
    [[32mSymbol(errored)[39m]: [1mnull[22m,
    [[32mSymbol(kHighWaterMark)[39m]: [33m16384[39m,
    [[32mSymbol(kRejectNonStandardBodyWrites)[39m]: [33mfalse[39m,
    [[32mSymbol(kUniqueHeaders)[39m]: [1mnull[22m
  },
  response: {
    status: [33m403[39m,
    statusText: [32m'Forbidden'[39m,
    headers: Object [AxiosHeaders] {
      [32m'transfer-encoding'[39m: [32m'chunked'[39m,
      connection: [32m'close'[39m,
      [32m'content-type'[39m: [32m'text/plain; charset=utf-8'[39m,
      vary: [32m'Origin, Access-Control-Request-Method, Access-Control-Request-Headers, accept-encoding'[39m,
      [32m'access-control-allow-credentials'[39m: [32m'true'[39m,
      [32m'x-api-node'[39m: [32m'995170affe05'[39m,
      date: [32m'Thu, 09 Oct 2025 07:44:15 GMT'[39m
    },
    config: {
      transitional: {
        silentJSONParsing: [33mtrue[39m,
        forcedJSONParsing: [33mtrue[39m,
        clarifyTimeoutError: [33mfalse[39m
      },
      adapter: [
        [32m'xhr'[39m,
        [32m'http'[39m,
        [32m'fetch'[39m
      ],
      transformRequest: [
        [36m[Function: transformRequest][39m
      ],
      transformResponse: [
        [36m[Function: transformResponse][39m
      ],
      timeout: [33m30000[39m,
      xsrfCookieName: [32m'XSRF-TOKEN'[39m,
      xsrfHeaderName: [32m'X-XSRF-TOKEN'[39m,
      maxContentLength: [33m-1[39m,
      maxBodyLength: [33m-1[39m,
      env: {
        FormData: [Function: FormData] [FormData] {
          LINE_BREAK: [32m'\r\n'[39m,
          DEFAULT_CONTENT_TYPE: [32m'application/octet-stream'[39m
        },
        Blob: [36m[class Blob][39m
      },
      validateStatus: [36m[Function: validateStatus][39m,
      headers: Object [AxiosHeaders] {
        Accept: [32m'application/json, text/plain, */*'[39m,
        [32m'Content-Type'[39m: [32m'application/json'[39m,
        Authorization: [32m'Bearer '[39m,
        [32m'User-Agent'[39m: [32m'axios/1.12.2'[39m,
        [32m'Content-Length'[39m: [32m'379'[39m,
        [32m'Accept-Encoding'[39m: [32m'gzip, compress, deflate, br'[39m
      },
      cancelToken: CancelToken {
        promise: Promise {
          CanceledError {
            message: [32m'canceled'[39m,
            name: [32m'CanceledError'[39m,
            code: [32m'ERR_CANCELED'[39m
          },
          then: [36m[Function (anonymous)][39m,
          [[32mSymbol(async_id_symbol)[39m]: [33m12860[39m,
          [[32mSymbol(trigger_async_id_symbol)[39m]: [33m12842[39m,
          [[32mSymbol(kResourceStore)[39m]: [90mundefined[39m,
          [[32mSymbol(kResourceStore)[39m]: [32m'Logging Integration Log Analytics Integration should get popular pages through controller'[39m
        },
        _listeners: [],
        reason: CanceledError {
          message: [32m'canceled'[39m,
          name: [32m'CanceledError'[39m,
          code: [32m'ERR_CANCELED'[39m
        }
      },
      method: [32m'post'[39m,
      url: [32m'http://localhost:5080/api/default/_search'[39m,
      data: [32m`{"query":"\\n      SELECT eventData.page as page,\\n             COUNT(*) as view_count,\\n             COUNT(DISTINCT userId) as unique_users\\n      FROM user-behavior\\n      WHERE eventType = 'PAGE_VIEW' \\n        AND timestamp >= '2023-01-01T00:00:00Z' \\n        AND timestamp <= '2023-01-02T00:00:00Z'\\n      GROUP BY page\\n      ORDER BY view_count DESC\\n      LIMIT 10\\n    "}`[39m,
      allowAbsoluteUrls: [33mtrue[39m
    },
    request: [36m<ref *1>[39m ClientRequest {
      _events: [Object: null prototype] {
        abort: [36m[Function (anonymous)][39m,
        aborted: [36m[Function (anonymous)][39m,
        connect: [36m[Function (anonymous)][39m,
        error: [36m[Function (anonymous)][39m,
        socket: [36m[Function (anonymous)][39m,
        timeout: [36m[Function (anonymous)][39m,
        finish: [36m[Function: requestOnFinish][39m
      },
      _eventsCount: [33m7[39m,
      _maxListeners: [90mundefined[39m,
      outputData: [],
      outputSize: [33m0[39m,
      writable: [33mtrue[39m,
      destroyed: [33mtrue[39m,
      _last: [33mfalse[39m,
      chunkedEncoding: [33mfalse[39m,
      shouldKeepAlive: [33mfalse[39m,
      maxRequestsOnConnectionReached: [33mfalse[39m,
      _defaultKeepAlive: [33mtrue[39m,
      useChunkedEncodingByDefault: [33mtrue[39m,
      sendDate: [33mfalse[39m,
      _removedConnection: [33mfalse[39m,
      _removedContLen: [33mfalse[39m,
      _removedTE: [33mfalse[39m,
      strictContentLength: [33mfalse[39m,
      _contentLength: [33m379[39m,
      _hasBody: [33mtrue[39m,
      _trailer: [32m''[39m,
      finished: [33mtrue[39m,
      _headerSent: [33mtrue[39m,
      _closed: [33mtrue[39m,
      _header: [32m'POST /api/default/_search HTTP/1.1\r\nAccept: application/json, text/plain, */*\r\nContent-Type: application/json\r\nAuthorization: Bearer \r\nUser-Agent: axios/1.12.2\r\nContent-Length: 379\r\nAccept-Encoding: gzip, compress, deflate, br\r\nHost: localhost:5080\r\nConnection: keep-alive\r\n\r\n'[39m,
      _keepAliveTimeout: [33m0[39m,
      _onPendingData: [36m[Function: nop][39m,
      agent: Agent {
        _events: [Object: null prototype] {
          free: [36m[Function (anonymous)][39m,
          newListener: [36m[Function: maybeEnableKeylog][39m
        },
        _eventsCount: [33m2[39m,
        _maxListeners: [90mundefined[39m,
        defaultPort: [33m80[39m,
        protocol: [32m'http:'[39m,
        options: [Object: null prototype] {
          keepAlive: [33mtrue[39m,
          scheduling: [32m'lifo'[39m,
          timeout: [33m5000[39m,
          noDelay: [33mtrue[39m,
          path: [1mnull[22m
        },
        requests: [Object: null prototype] {},
        sockets: [Object: null prototype] {},
        freeSockets: [Object: null prototype] {},
        keepAliveMsecs: [33m1000[39m,
        keepAlive: [33mtrue[39m,
        maxSockets: [33mInfinity[39m,
        maxFreeSockets: [33m256[39m,
        scheduling: [32m'lifo'[39m,
        maxTotalSockets: [33mInfinity[39m,
        totalSocketCount: [33m0[39m,
        agentKeepAliveTimeoutBuffer: [33m1000[39m,
        [[32mSymbol(shapeMode)[39m]: [33mfalse[39m,
        [[32mSymbol(kCapture)[39m]: [33mfalse[39m
      },
      socketPath: [90mundefined[39m,
      method: [32m'POST'[39m,
      maxHeaderSize: [90mundefined[39m,
      insecureHTTPParser: [90mundefined[39m,
      joinDuplicateHeaders: [90mundefined[39m,
      path: [32m'/api/default/_search'[39m,
      _ended: [33mtrue[39m,
      res: IncomingMessage {
        _events: {
          close: [
            [36m[Function (anonymous)][39m,
            [36m[Function: onclose][39m,
            [36m[Function: onclose][39m
          ],
          error: [
            [36m[Function: onerror][39m,
            [36m[Function: onError][39m,
            [36m[Function: onerror][39m
          ],
          data: [90mundefined[39m,
          end: [
            [36m[Function: responseOnEnd][39m,
            [36m[Function: onend][39m,
            [36m[Function: onend][39m
          ],
          readable: [90mundefined[39m,
          finish: [
            [36m[Function: onfinish][39m,
            [36m[Function: onfinish][39m
          ]
        },
        _readableState: ReadableState {
          highWaterMark: [33m16384[39m,
          buffer: [],
          bufferIndex: [33m0[39m,
          length: [33m0[39m,
          pipes: [],
          awaitDrainWriters: [1mnull[22m,
          [[32mSymbol(kState)[39m]: [33m110892924[39m
        },
        _maxListeners: [90mundefined[39m,
        socket: Socket {
          connecting: [33mfalse[39m,
          _hadError: [33mfalse[39m,
          _parent: [1mnull[22m,
          _host: [32m'localhost'[39m,
          _closeAfterHandlingError: [33mfalse[39m,
          _events: {
            close: [36m[Array][39m,
            error: [36m[Function: socketErrorListener][39m,
            prefinish: [90mundefined[39m,
            finish: [90mundefined[39m,
            drain: [90mundefined[39m,
            data: [90mundefined[39m,
            end: [36m[Function: onReadableStreamEnd][39m,
            readable: [90mundefined[39m,
            connect: [90mundefined[39m,
            free: [36m[Function: onFree][39m,
            timeout: [36m[Array][39m,
            agentRemove: [36m[Function: onRemove][39m
          },
          _readableState: ReadableState {
            highWaterMark: [33m16384[39m,
            buffer: [],
            bufferIndex: [33m0[39m,
            length: [33m0[39m,
            pipes: [],
            awaitDrainWriters: [1mnull[22m,
            [[32mSymbol(kState)[39m]: [33m60303732[39m
          },
          _writableState: WritableState {
            highWaterMark: [33m16384[39m,
            length: [33m0[39m,
            corked: [33m0[39m,
            onwrite: [36m[Function: bound onwrite][39m,
            writelen: [33m0[39m,
            bufferedIndex: [33m0[39m,
            pendingcb: [33m0[39m,
            [[32mSymbol(kState)[39m]: [33m1091450228[39m,
            [[32mSymbol(kBufferedValue)[39m]: [1mnull[22m,
            [[32mSymbol(kWriteCbValue)[39m]: [1mnull[22m
          },
          allowHalfOpen: [33mfalse[39m,
          _maxListeners: [90mundefined[39m,
          _eventsCount: [33m6[39m,
          _sockname: [1mnull[22m,
          _pendingData: [1mnull[22m,
          _pendingEncoding: [32m''[39m,
          server: [1mnull[22m,
          _server: [1mnull[22m,
          timeout: [33m30000[39m,
          parser: [1mnull[22m,
          _httpMessage: [36m[Circular *1][39m,
          autoSelectFamilyAttemptedAddresses: [
            [32m'::1:5080'[39m
          ],
          [[32mSymbol(async_id_symbol)[39m]: [33m12866[39m,
          [[32mSymbol(kHandle)[39m]: [1mnull[22m,
          [[32mSymbol(lastWriteQueueSize)[39m]: [33m0[39m,
          [[32mSymbol(timeout)[39m]: Timeout {
            _idleTimeout: [33m-1[39m,
            _idlePrev: [1mnull[22m,
            _idleNext: [1mnull[22m,
            _idleStart: [33m95302[39m,
            _onTimeout: [1mnull[22m,
            _timerArgs: [90mundefined[39m,
            _repeat: [1mnull[22m,
            _destroyed: [33mtrue[39m,
            [[32mSymbol(refed)[39m]: [33mfalse[39m,
            [[32mSymbol(kHasPrimitive)[39m]: [33mfalse[39m,
            [[32mSymbol(asyncId)[39m]: [33m12886[39m,
            [[32mSymbol(triggerId)[39m]: [33m12868[39m,
            [[32mSymbol(kAsyncContextFrame)[39m]: [90mundefined[39m,
            [[32mSymbol(kResourceStore)[39m]: [90mundefined[39m,
            [[32mSymbol(kResourceStore)[39m]: [32m'Logging Integration Log Analytics Integration should get popular pages through controller'[39m
          },
          [[32mSymbol(kBuffer)[39m]: [1mnull[22m,
          [[32mSymbol(kBufferCb)[39m]: [1mnull[22m,
          [[32mSymbol(kBufferGen)[39m]: [1mnull[22m,
          [[32mSymbol(shapeMode)[39m]: [33mtrue[39m,
          [[32mSymbol(kCapture)[39m]: [33mfalse[39m,
          [[32mSymbol(kSetNoDelay)[39m]: [33mtrue[39m,
          [[32mSymbol(kSetKeepAlive)[39m]: [33mtrue[39m,
          [[32mSymbol(kSetKeepAliveInitialDelay)[39m]: [33m60[39m,
          [[32mSymbol(kBytesRead)[39m]: [33m372[39m,
          [[32mSymbol(kBytesWritten)[39m]: [33m655[39m
        },
        httpVersionMajor: [33m1[39m,
        httpVersionMinor: [33m1[39m,
        httpVersion: [32m'1.1'[39m,
        complete: [33mtrue[39m,
        rawHeaders: [
          [32m'transfer-encoding'[39m,
          [32m'chunked'[39m,
          [32m'connection'[39m,
          [32m'close'[39m,
          [32m'content-type'[39m,
          [32m'text/plain; charset=utf-8'[39m,
          [32m'vary'[39m,
          [32m'Origin, Access-Control-Request-Method, Access-Control-Request-Headers'[39m,
          [32m'vary'[39m,
          [32m'accept-encoding'[39m,
          [32m'content-encoding'[39m,
          [32m'br'[39m,
          [32m'access-control-allow-credentials'[39m,
          [32m'true'[39m,
          [32m'x-api-node'[39m,
          [32m'995170affe05'[39m,
          [32m'date'[39m,
          [32m'Thu, 09 Oct 2025 07:44:15 GMT'[39m
        ],
        rawTrailers: [],
        joinDuplicateHeaders: [90mundefined[39m,
        aborted: [33mfalse[39m,
        upgrade: [33mfalse[39m,
        url: [32m''[39m,
        method: [1mnull[22m,
        statusCode: [33m403[39m,
        statusMessage: [32m'Forbidden'[39m,
        client: Socket {
          connecting: [33mfalse[39m,
          _hadError: [33mfalse[39m,
          _parent: [1mnull[22m,
          _host: [32m'localhost'[39m,
          _closeAfterHandlingError: [33mfalse[39m,
          _events: {
            close: [36m[Array][39m,
            error: [36m[Function: socketErrorListener][39m,
            prefinish: [90mundefined[39m,
            finish: [90mundefined[39m,
            drain: [90mundefined[39m,
            data: [90mundefined[39m,
            end: [36m[Function: onReadableStreamEnd][39m,
            readable: [90mundefined[39m,
            connect: [90mundefined[39m,
            free: [36m[Function: onFree][39m,
            timeout: [36m[Array][39m,
            agentRemove: [36m[Function: onRemove][39m
          },
          _readableState: ReadableState {
            highWaterMark: [33m16384[39m,
            buffer: [],
            bufferIndex: [33m0[39m,
            length: [33m0[39m,
            pipes: [],
            awaitDrainWriters: [1mnull[22m,
            [[32mSymbol(kState)[39m]: [33m60303732[39m
          },
          _writableState: WritableState {
            highWaterMark: [33m16384[39m,
            length: [33m0[39m,
            corked: [33m0[39m,
            onwrite: [36m[Function: bound onwrite][39m,
            writelen: [33m0[39m,
            bufferedIndex: [33m0[39m,
            pendingcb: [33m0[39m,
            [[32mSymbol(kState)[39m]: [33m1091450228[39m,
            [[32mSymbol(kBufferedValue)[39m]: [1mnull[22m,
            [[32mSymbol(kWriteCbValue)[39m]: [1mnull[22m
          },
          allowHalfOpen: [33mfalse[39m,
          _maxListeners: [90mundefined[39m,
          _eventsCount: [33m6[39m,
          _sockname: [1mnull[22m,
          _pendingData: [1mnull[22m,
          _pendingEncoding: [32m''[39m,
          server: [1mnull[22m,
          _server: [1mnull[22m,
          timeout: [33m30000[39m,
          parser: [1mnull[22m,
          _httpMessage: [36m[Circular *1][39m,
          autoSelectFamilyAttemptedAddresses: [
            [32m'::1:5080'[39m
          ],
          [[32mSymbol(async_id_symbol)[39m]: [33m12866[39m,
          [[32mSymbol(kHandle)[39m]: [1mnull[22m,
          [[32mSymbol(lastWriteQueueSize)[39m]: [33m0[39m,
          [[32mSymbol(timeout)[39m]: Timeout {
            _idleTimeout: [33m-1[39m,
            _idlePrev: [1mnull[22m,
            _idleNext: [1mnull[22m,
            _idleStart: [33m95302[39m,
            _onTimeout: [1mnull[22m,
            _timerArgs: [90mundefined[39m,
            _repeat: [1mnull[22m,
            _destroyed: [33mtrue[39m,
            [[32mSymbol(refed)[39m]: [33mfalse[39m,
            [[32mSymbol(kHasPrimitive)[39m]: [33mfalse[39m,
            [[32mSymbol(asyncId)[39m]: [33m12886[39m,
            [[32mSymbol(triggerId)[39m]: [33m12868[39m,
            [[32mSymbol(kAsyncContextFrame)[39m]: [90mundefined[39m,
            [[32mSymbol(kResourceStore)[39m]: [90mundefined[39m,
            [[32mSymbol(kResourceStore)[39m]: [32m'Logging Integration Log Analytics Integration should get popular pages through controller'[39m
          },
          [[32mSymbol(kBuffer)[39m]: [1mnull[22m,
          [[32mSymbol(kBufferCb)[39m]: [1mnull[22m,
          [[32mSymbol(kBufferGen)[39m]: [1mnull[22m,
          [[32mSymbol(shapeMode)[39m]: [33mtrue[39m,
          [[32mSymbol(kCapture)[39m]: [33mfalse[39m,
          [[32mSymbol(kSetNoDelay)[39m]: [33mtrue[39m,
          [[32mSymbol(kSetKeepAlive)[39m]: [33mtrue[39m,
          [[32mSymbol(kSetKeepAliveInitialDelay)[39m]: [33m60[39m,
          [[32mSymbol(kBytesRead)[39m]: [33m372[39m,
          [[32mSymbol(kBytesWritten)[39m]: [33m655[39m
        },
        _consuming: [33mfalse[39m,
        _dumped: [33mfalse[39m,
        req: [36m[Circular *1][39m,
        _eventsCount: [33m4[39m,
        responseUrl: [32m'http://localhost:5080/api/default/_search'[39m,
        redirects: [],
        [[32mSymbol(shapeMode)[39m]: [33mtrue[39m,
        [[32mSymbol(kCapture)[39m]: [33mfalse[39m,
        [[32mSymbol(kHeaders)[39m]: {
          [32m'transfer-encoding'[39m: [32m'chunked'[39m,
          connection: [32m'close'[39m,
          [32m'content-type'[39m: [32m'text/plain; charset=utf-8'[39m,
          vary: [32m'Origin, Access-Control-Request-Method, Access-Control-Request-Headers, accept-encoding'[39m,
          [32m'access-control-allow-credentials'[39m: [32m'true'[39m,
          [32m'x-api-node'[39m: [32m'995170affe05'[39m,
          date: [32m'Thu, 09 Oct 2025 07:44:15 GMT'[39m
        },
        [[32mSymbol(kHeadersCount)[39m]: [33m18[39m,
        [[32mSymbol(kTrailers)[39m]: [1mnull[22m,
        [[32mSymbol(kTrailersCount)[39m]: [33m0[39m
      },
      aborted: [33mfalse[39m,
      timeoutCb: [36m[Function: emitRequestTimeout][39m,
      upgradeOrConnect: [33mfalse[39m,
      parser: [1mnull[22m,
      maxHeadersCount: [1mnull[22m,
      reusedSocket: [33mfalse[39m,
      host: [32m'localhost'[39m,
      protocol: [32m'http:'[39m,
      _redirectable: Writable {
        _events: {
          close: [90mundefined[39m,
          error: [36m[Function: handleRequestError][39m,
          prefinish: [90mundefined[39m,
          finish: [90mundefined[39m,
          drain: [90mundefined[39m,
          response: [36m[Function: handleResponse][39m,
          socket: [
            [36m[Function: handleRequestSocket][39m,
            [36m[Function: destroyOnTimeout][39m
          ],
          timeout: [90mundefined[39m,
          abort: [90mundefined[39m
        },
        _writableState: WritableState {
          highWaterMark: [33m16384[39m,
          length: [33m0[39m,
          corked: [33m0[39m,
          onwrite: [36m[Function: bound onwrite][39m,
          writelen: [33m0[39m,
          bufferedIndex: [33m0[39m,
          pendingcb: [33m0[39m,
          [[32mSymbol(kState)[39m]: [33m17580812[39m,
          [[32mSymbol(kBufferedValue)[39m]: [1mnull[22m
        },
        _maxListeners: [90mundefined[39m,
        _options: {
          maxRedirects: [33m21[39m,
          maxBodyLength: [33mInfinity[39m,
          protocol: [32m'http:'[39m,
          path: [32m'/api/default/_search'[39m,
          method: [32m'POST'[39m,
          headers: [Object: null prototype] {
            Accept: [32m'application/json, text/plain, */*'[39m,
            [32m'Content-Type'[39m: [32m'application/json'[39m,
            Authorization: [32m'Bearer '[39m,
            [32m'User-Agent'[39m: [32m'axios/1.12.2'[39m,
            [32m'Content-Length'[39m: [32m'379'[39m,
            [32m'Accept-Encoding'[39m: [32m'gzip, compress, deflate, br'[39m
          },
          agents: {
            http: [90mundefined[39m,
            https: [90mundefined[39m
          },
          auth: [90mundefined[39m,
          family: [90mundefined[39m,
          beforeRedirect: [36m[Function: dispatchBeforeRedirect][39m,
          beforeRedirects: {
            proxy: [36m[Function: beforeRedirect][39m
          },
          hostname: [32m'localhost'[39m,
          port: [32m'5080'[39m,
          agent: [90mundefined[39m,
          nativeProtocols: {
            [32m'http:'[39m: [36m[Object][39m,
            [32m'https:'[39m: [36m[Object][39m
          },
          pathname: [32m'/api/default/_search'[39m
        },
        _ended: [33mtrue[39m,
        _ending: [33mtrue[39m,
        _redirectCount: [33m0[39m,
        _redirects: [],
        _requestBodyLength: [33m379[39m,
        _requestBodyBuffers: [],
        _eventsCount: [33m3[39m,
        _onNativeResponse: [36m[Function (anonymous)][39m,
        _currentRequest: [36m[Circular *1][39m,
        _currentUrl: [32m'http://localhost:5080/api/default/_search'[39m,
        _timeout: [1mnull[22m,
        [[32mSymbol(shapeMode)[39m]: [33mtrue[39m,
        [[32mSymbol(kCapture)[39m]: [33mfalse[39m
      },
      [[32mSymbol(shapeMode)[39m]: [33mfalse[39m,
      [[32mSymbol(kCapture)[39m]: [33mfalse[39m,
      [[32mSymbol(kBytesWritten)[39m]: [33m0[39m,
      [[32mSymbol(kNeedDrain)[39m]: [33mfalse[39m,
      [[32mSymbol(corked)[39m]: [33m0[39m,
      [[32mSymbol(kChunkedBuffer)[39m]: [],
      [[32mSymbol(kChunkedLength)[39m]: [33m0[39m,
      [[32mSymbol(kSocket)[39m]: Socket {
        connecting: [33mfalse[39m,
        _hadError: [33mfalse[39m,
        _parent: [1mnull[22m,
        _host: [32m'localhost'[39m,
        _closeAfterHandlingError: [33mfalse[39m,
        _events: {
          close: [
            [36m[Function: onClose][39m,
            [36m[Function: socketCloseListener][39m
          ],
          error: [36m[Function: socketErrorListener][39m,
          prefinish: [90mundefined[39m,
          finish: [90mundefined[39m,
          drain: [90mundefined[39m,
          data: [90mundefined[39m,
          end: [36m[Function: onReadableStreamEnd][39m,
          readable: [90mundefined[39m,
          connect: [90mundefined[39m,
          free: [36m[Function: onFree][39m,
          timeout: [
            [36m[Function: onTimeout][39m,
            [36m[Function (anonymous)][39m
          ],
          agentRemove: [36m[Function: onRemove][39m
        },
        _readableState: ReadableState {
          highWaterMark: [33m16384[39m,
          buffer: [],
          bufferIndex: [33m0[39m,
          length: [33m0[39m,
          pipes: [],
          awaitDrainWriters: [1mnull[22m,
          [[32mSymbol(kState)[39m]: [33m60303732[39m
        },
        _writableState: WritableState {
          highWaterMark: [33m16384[39m,
          length: [33m0[39m,
          corked: [33m0[39m,
          onwrite: [36m[Function: bound onwrite][39m,
          writelen: [33m0[39m,
          bufferedIndex: [33m0[39m,
          pendingcb: [33m0[39m,
          [[32mSymbol(kState)[39m]: [33m1091450228[39m,
          [[32mSymbol(kBufferedValue)[39m]: [1mnull[22m,
          [[32mSymbol(kWriteCbValue)[39m]: [1mnull[22m
        },
        allowHalfOpen: [33mfalse[39m,
        _maxListeners: [90mundefined[39m,
        _eventsCount: [33m6[39m,
        _sockname: [1mnull[22m,
        _pendingData: [1mnull[22m,
        _pendingEncoding: [32m''[39m,
        server: [1mnull[22m,
        _server: [1mnull[22m,
        timeout: [33m30000[39m,
        parser: [1mnull[22m,
        _httpMessage: [36m[Circular *1][39m,
        autoSelectFamilyAttemptedAddresses: [
          [32m'::1:5080'[39m
        ],
        [[32mSymbol(async_id_symbol)[39m]: [33m12866[39m,
        [[32mSymbol(kHandle)[39m]: [1mnull[22m,
        [[32mSymbol(lastWriteQueueSize)[39m]: [33m0[39m,
        [[32mSymbol(timeout)[39m]: Timeout {
          _idleTimeout: [33m-1[39m,
          _idlePrev: [1mnull[22m,
          _idleNext: [1mnull[22m,
          _idleStart: [33m95302[39m,
          _onTimeout: [1mnull[22m,
          _timerArgs: [90mundefined[39m,
          _repeat: [1mnull[22m,
          _destroyed: [33mtrue[39m,
          [[32mSymbol(refed)[39m]: [33mfalse[39m,
          [[32mSymbol(kHasPrimitive)[39m]: [33mfalse[39m,
          [[32mSymbol(asyncId)[39m]: [33m12886[39m,
          [[32mSymbol(triggerId)[39m]: [33m12868[39m,
          [[32mSymbol(kAsyncContextFrame)[39m]: [90mundefined[39m,
          [[32mSymbol(kResourceStore)[39m]: [90mundefined[39m,
          [[32mSymbol(kResourceStore)[39m]: [32m'Logging Integration Log Analytics Integration should get popular pages through controller'[39m
        },
        [[32mSymbol(kBuffer)[39m]: [1mnull[22m,
        [[32mSymbol(kBufferCb)[39m]: [1mnull[22m,
        [[32mSymbol(kBufferGen)[39m]: [1mnull[22m,
        [[32mSymbol(shapeMode)[39m]: [33mtrue[39m,
        [[32mSymbol(kCapture)[39m]: [33mfalse[39m,
        [[32mSymbol(kSetNoDelay)[39m]: [33mtrue[39m,
        [[32mSymbol(kSetKeepAlive)[39m]: [33mtrue[39m,
        [[32mSymbol(kSetKeepAliveInitialDelay)[39m]: [33m60[39m,
        [[32mSymbol(kBytesRead)[39m]: [33m372[39m,
        [[32mSymbol(kBytesWritten)[39m]: [33m655[39m
      },
      [[32mSymbol(kOutHeaders)[39m]: [Object: null prototype] {
        accept: [
          [32m'Accept'[39m,
          [32m'application/json, text/plain, */*'[39m
        ],
        [32m'content-type'[39m: [
          [32m'Content-Type'[39m,
          [32m'application/json'[39m
        ],
        authorization: [
          [32m'Authorization'[39m,
          [32m'Bearer '[39m
        ],
        [32m'user-agent'[39m: [
          [32m'User-Agent'[39m,
          [32m'axios/1.12.2'[39m
        ],
        [32m'content-length'[39m: [
          [32m'Content-Length'[39m,
          [32m'379'[39m
        ],
        [32m'accept-encoding'[39m: [
          [32m'Accept-Encoding'[39m,
          [32m'gzip, compress, deflate, br'[39m
        ],
        host: [
          [32m'Host'[39m,
          [32m'localhost:5080'[39m
        ]
      },
      [[32mSymbol(errored)[39m]: [1mnull[22m,
      [[32mSymbol(kHighWaterMark)[39m]: [33m16384[39m,
      [[32mSymbol(kRejectNonStandardBodyWrites)[39m]: [33mfalse[39m,
      [[32mSymbol(kUniqueHeaders)[39m]: [1mnull[22m
    },
    data: [32m'Not Supported'[39m
  },
  status: [33m403[39m
}
[31m[Nest] 14512  - [39m2025/10/09 15:44:16 [31m  ERROR[39m [38;5;3m[LoggingController] [39m[31mFailed to get popular pages[39m
[31m[Nest] 14512  - [39m2025/10/09 15:44:16 [31m  ERROR[39m [38;5;3m[LoggingController] [39mAxiosError {
  message: [32m'Request failed with status code 403'[39m,
  name: [32m'AxiosError'[39m,
  code: [32m'ERR_BAD_REQUEST'[39m,
  config: {
    transitional: {
      silentJSONParsing: [33mtrue[39m,
      forcedJSONParsing: [33mtrue[39m,
      clarifyTimeoutError: [33mfalse[39m
    },
    adapter: [
      [32m'xhr'[39m,
      [32m'http'[39m,
      [32m'fetch'[39m
    ],
    transformRequest: [
      [36m[Function: transformRequest][39m
    ],
    transformResponse: [
      [36m[Function: transformResponse][39m
    ],
    timeout: [33m30000[39m,
    xsrfCookieName: [32m'XSRF-TOKEN'[39m,
    xsrfHeaderName: [32m'X-XSRF-TOKEN'[39m,
    maxContentLength: [33m-1[39m,
    maxBodyLength: [33m-1[39m,
    env: {
      FormData: [Function: FormData] [FormData] {
        LINE_BREAK: [32m'\r\n'[39m,
        DEFAULT_CONTENT_TYPE: [32m'application/octet-stream'[39m
      },
      Blob: [36m[class Blob][39m
    },
    validateStatus: [36m[Function: validateStatus][39m,
    headers: Object [AxiosHeaders] {
      Accept: [32m'application/json, text/plain, */*'[39m,
      [32m'Content-Type'[39m: [32m'application/json'[39m,
      Authorization: [32m'Bearer '[39m,
      [32m'User-Agent'[39m: [32m'axios/1.12.2'[39m,
      [32m'Content-Length'[39m: [32m'379'[39m,
      [32m'Accept-Encoding'[39m: [32m'gzip, compress, deflate, br'[39m
    },
    cancelToken: CancelToken {
      promise: Promise {
        CanceledError {
          message: [32m'canceled'[39m,
          name: [32m'CanceledError'[39m,
          code: [32m'ERR_CANCELED'[39m
        },
        then: [36m[Function (anonymous)][39m,
        [[32mSymbol(async_id_symbol)[39m]: [33m12860[39m,
        [[32mSymbol(trigger_async_id_symbol)[39m]: [33m12842[39m,
        [[32mSymbol(kResourceStore)[39m]: [90mundefined[39m,
        [[32mSymbol(kResourceStore)[39m]: [32m'Logging Integration Log Analytics Integration should get popular pages through controller'[39m
      },
      _listeners: [1mnull[22m,
      reason: CanceledError {
        message: [32m'canceled'[39m,
        name: [32m'CanceledError'[39m,
        code: [32m'ERR_CANCELED'[39m
      }
    },
    method: [32m'post'[39m,
    url: [32m'http://localhost:5080/api/default/_search'[39m,
    data: [32m`{"query":"\\n      SELECT eventData.page as page,\\n             COUNT(*) as view_count,\\n             COUNT(DISTINCT userId) as unique_users\\n      FROM user-behavior\\n      WHERE eventType = 'PAGE_VIEW' \\n        AND timestamp >= '2023-01-01T00:00:00Z' \\n        AND timestamp <= '2023-01-02T00:00:00Z'\\n      GROUP BY page\\n      ORDER BY view_count DESC\\n      LIMIT 10\\n    "}`[39m,
    allowAbsoluteUrls: [33mtrue[39m
  },
  request: [36m<ref *1>[39m ClientRequest {
    _events: [Object: null prototype] {
      abort: [36m[Function (anonymous)][39m,
      aborted: [36m[Function (anonymous)][39m,
      connect: [36m[Function (anonymous)][39m,
      error: [36m[Function (anonymous)][39m,
      socket: [36m[Function (anonymous)][39m,
      timeout: [36m[Function (anonymous)][39m,
      finish: [36m[Function: requestOnFinish][39m
    },
    _eventsCount: [33m7[39m,
    _maxListeners: [90mundefined[39m,
    outputData: [],
    outputSize: [33m0[39m,
    writable: [33mtrue[39m,
    destroyed: [33mtrue[39m,
    _last: [33mfalse[39m,
    chunkedEncoding: [33mfalse[39m,
    shouldKeepAlive: [33mfalse[39m,
    maxRequestsOnConnectionReached: [33mfalse[39m,
    _defaultKeepAlive: [33mtrue[39m,
    useChunkedEncodingByDefault: [33mtrue[39m,
    sendDate: [33mfalse[39m,
    _removedConnection: [33mfalse[39m,
    _removedContLen: [33mfalse[39m,
    _removedTE: [33mfalse[39m,
    strictContentLength: [33mfalse[39m,
    _contentLength: [33m379[39m,
    _hasBody: [33mtrue[39m,
    _trailer: [32m''[39m,
    finished: [33mtrue[39m,
    _headerSent: [33mtrue[39m,
    _closed: [33mtrue[39m,
    _header: [32m'POST /api/default/_search HTTP/1.1\r\nAccept: application/json, text/plain, */*\r\nContent-Type: application/json\r\nAuthorization: Bearer \r\nUser-Agent: axios/1.12.2\r\nContent-Length: 379\r\nAccept-Encoding: gzip, compress, deflate, br\r\nHost: localhost:5080\r\nConnection: keep-alive\r\n\r\n'[39m,
    _keepAliveTimeout: [33m0[39m,
    _onPendingData: [36m[Function: nop][39m,
    agent: Agent {
      _events: [Object: null prototype] {
        free: [36m[Function (anonymous)][39m,
        newListener: [36m[Function: maybeEnableKeylog][39m
      },
      _eventsCount: [33m2[39m,
      _maxListeners: [90mundefined[39m,
      defaultPort: [33m80[39m,
      protocol: [32m'http:'[39m,
      options: [Object: null prototype] {
        keepAlive: [33mtrue[39m,
        scheduling: [32m'lifo'[39m,
        timeout: [33m5000[39m,
        noDelay: [33mtrue[39m,
        path: [1mnull[22m
      },
      requests: [Object: null prototype] {},
      sockets: [Object: null prototype] {},
      freeSockets: [Object: null prototype] {},
      keepAliveMsecs: [33m1000[39m,
      keepAlive: [33mtrue[39m,
      maxSockets: [33mInfinity[39m,
      maxFreeSockets: [33m256[39m,
      scheduling: [32m'lifo'[39m,
      maxTotalSockets: [33mInfinity[39m,
      totalSocketCount: [33m0[39m,
      agentKeepAliveTimeoutBuffer: [33m1000[39m,
      [[32mSymbol(shapeMode)[39m]: [33mfalse[39m,
      [[32mSymbol(kCapture)[39m]: [33mfalse[39m
    },
    socketPath: [90mundefined[39m,
    method: [32m'POST'[39m,
    maxHeaderSize: [90mundefined[39m,
    insecureHTTPParser: [90mundefined[39m,
    joinDuplicateHeaders: [90mundefined[39m,
    path: [32m'/api/default/_search'[39m,
    _ended: [33mtrue[39m,
    res: IncomingMessage {
      _events: {
        close: [
          [36m[Function (anonymous)][39m,
          [36m[Function: onclose][39m,
          [36m[Function: onclose][39m
        ],
        error: [
          [36m[Function: onerror][39m,
          [36m[Function: onError][39m,
          [36m[Function: onerror][39m
        ],
        data: [90mundefined[39m,
        end: [
          [36m[Function: responseOnEnd][39m,
          [36m[Function: onend][39m,
          [36m[Function: onend][39m
        ],
        readable: [90mundefined[39m,
        finish: [
          [36m[Function: onfinish][39m,
          [36m[Function: onfinish][39m
        ]
      },
      _readableState: ReadableState {
        highWaterMark: [33m16384[39m,
        buffer: [],
        bufferIndex: [33m0[39m,
        length: [33m0[39m,
        pipes: [],
        awaitDrainWriters: [1mnull[22m,
        [[32mSymbol(kState)[39m]: [33m110892924[39m
      },
      _maxListeners: [90mundefined[39m,
      socket: Socket {
        connecting: [33mfalse[39m,
        _hadError: [33mfalse[39m,
        _parent: [1mnull[22m,
        _host: [32m'localhost'[39m,
        _closeAfterHandlingError: [33mfalse[39m,
        _events: {
          close: [
            [36m[Function: onClose][39m,
            [36m[Function: socketCloseListener][39m
          ],
          error: [36m[Function: socketErrorListener][39m,
          prefinish: [90mundefined[39m,
          finish: [90mundefined[39m,
          drain: [90mundefined[39m,
          data: [90mundefined[39m,
          end: [36m[Function: onReadableStreamEnd][39m,
          readable: [90mundefined[39m,
          connect: [90mundefined[39m,
          free: [36m[Function: onFree][39m,
          timeout: [
            [36m[Function: onTimeout][39m,
            [36m[Function (anonymous)][39m
          ],
          agentRemove: [36m[Function: onRemove][39m
        },
        _readableState: ReadableState {
          highWaterMark: [33m16384[39m,
          buffer: [],
          bufferIndex: [33m0[39m,
          length: [33m0[39m,
          pipes: [],
          awaitDrainWriters: [1mnull[22m,
          [[32mSymbol(kState)[39m]: [33m60303732[39m
        },
        _writableState: WritableState {
          highWaterMark: [33m16384[39m,
          length: [33m0[39m,
          corked: [33m0[39m,
          onwrite: [36m[Function: bound onwrite][39m,
          writelen: [33m0[39m,
          bufferedIndex: [33m0[39m,
          pendingcb: [33m0[39m,
          [[32mSymbol(kState)[39m]: [33m1091450228[39m,
          [[32mSymbol(kBufferedValue)[39m]: [1mnull[22m,
          [[32mSymbol(kWriteCbValue)[39m]: [1mnull[22m
        },
        allowHalfOpen: [33mfalse[39m,
        _maxListeners: [90mundefined[39m,
        _eventsCount: [33m6[39m,
        _sockname: [1mnull[22m,
        _pendingData: [1mnull[22m,
        _pendingEncoding: [32m''[39m,
        server: [1mnull[22m,
        _server: [1mnull[22m,
        timeout: [33m30000[39m,
        parser: [1mnull[22m,
        _httpMessage: [36m[Circular *1][39m,
        autoSelectFamilyAttemptedAddresses: [
          [32m'::1:5080'[39m
        ],
        [[32mSymbol(async_id_symbol)[39m]: [33m12866[39m,
        [[32mSymbol(kHandle)[39m]: [1mnull[22m,
        [[32mSymbol(lastWriteQueueSize)[39m]: [33m0[39m,
        [[32mSymbol(timeout)[39m]: Timeout {
          _idleTimeout: [33m-1[39m,
          _idlePrev: [1mnull[22m,
          _idleNext: [1mnull[22m,
          _idleStart: [33m95302[39m,
          _onTimeout: [1mnull[22m,
          _timerArgs: [90mundefined[39m,
          _repeat: [1mnull[22m,
          _destroyed: [33mtrue[39m,
          [[32mSymbol(refed)[39m]: [33mfalse[39m,
          [[32mSymbol(kHasPrimitive)[39m]: [33mfalse[39m,
          [[32mSymbol(asyncId)[39m]: [33m12886[39m,
          [[32mSymbol(triggerId)[39m]: [33m12868[39m,
          [[32mSymbol(kAsyncContextFrame)[39m]: [90mundefined[39m,
          [[32mSymbol(kResourceStore)[39m]: [90mundefined[39m,
          [[32mSymbol(kResourceStore)[39m]: [32m'Logging Integration Log Analytics Integration should get popular pages through controller'[39m
        },
        [[32mSymbol(kBuffer)[39m]: [1mnull[22m,
        [[32mSymbol(kBufferCb)[39m]: [1mnull[22m,
        [[32mSymbol(kBufferGen)[39m]: [1mnull[22m,
        [[32mSymbol(shapeMode)[39m]: [33mtrue[39m,
        [[32mSymbol(kCapture)[39m]: [33mfalse[39m,
        [[32mSymbol(kSetNoDelay)[39m]: [33mtrue[39m,
        [[32mSymbol(kSetKeepAlive)[39m]: [33mtrue[39m,
        [[32mSymbol(kSetKeepAliveInitialDelay)[39m]: [33m60[39m,
        [[32mSymbol(kBytesRead)[39m]: [33m372[39m,
        [[32mSymbol(kBytesWritten)[39m]: [33m655[39m
      },
      httpVersionMajor: [33m1[39m,
      httpVersionMinor: [33m1[39m,
      httpVersion: [32m'1.1'[39m,
      complete: [33mtrue[39m,
      rawHeaders: [
        [32m'transfer-encoding'[39m,
        [32m'chunked'[39m,
        [32m'connection'[39m,
        [32m'close'[39m,
        [32m'content-type'[39m,
        [32m'text/plain; charset=utf-8'[39m,
        [32m'vary'[39m,
        [32m'Origin, Access-Control-Request-Method, Access-Control-Request-Headers'[39m,
        [32m'vary'[39m,
        [32m'accept-encoding'[39m,
        [32m'content-encoding'[39m,
        [32m'br'[39m,
        [32m'access-control-allow-credentials'[39m,
        [32m'true'[39m,
        [32m'x-api-node'[39m,
        [32m'995170affe05'[39m,
        [32m'date'[39m,
        [32m'Thu, 09 Oct 2025 07:44:15 GMT'[39m
      ],
      rawTrailers: [],
      joinDuplicateHeaders: [90mundefined[39m,
      aborted: [33mfalse[39m,
      upgrade: [33mfalse[39m,
      url: [32m''[39m,
      method: [1mnull[22m,
      statusCode: [33m403[39m,
      statusMessage: [32m'Forbidden'[39m,
      client: Socket {
        connecting: [33mfalse[39m,
        _hadError: [33mfalse[39m,
        _parent: [1mnull[22m,
        _host: [32m'localhost'[39m,
        _closeAfterHandlingError: [33mfalse[39m,
        _events: {
          close: [
            [36m[Function: onClose][39m,
            [36m[Function: socketCloseListener][39m
          ],
          error: [36m[Function: socketErrorListener][39m,
          prefinish: [90mundefined[39m,
          finish: [90mundefined[39m,
          drain: [90mundefined[39m,
          data: [90mundefined[39m,
          end: [36m[Function: onReadableStreamEnd][39m,
          readable: [90mundefined[39m,
          connect: [90mundefined[39m,
          free: [36m[Function: onFree][39m,
          timeout: [
            [36m[Function: onTimeout][39m,
            [36m[Function (anonymous)][39m
          ],
          agentRemove: [36m[Function: onRemove][39m
        },
        _readableState: ReadableState {
          highWaterMark: [33m16384[39m,
          buffer: [],
          bufferIndex: [33m0[39m,
          length: [33m0[39m,
          pipes: [],
          awaitDrainWriters: [1mnull[22m,
          [[32mSymbol(kState)[39m]: [33m60303732[39m
        },
        _writableState: WritableState {
          highWaterMark: [33m16384[39m,
          length: [33m0[39m,
          corked: [33m0[39m,
          onwrite: [36m[Function: bound onwrite][39m,
          writelen: [33m0[39m,
          bufferedIndex: [33m0[39m,
          pendingcb: [33m0[39m,
          [[32mSymbol(kState)[39m]: [33m1091450228[39m,
          [[32mSymbol(kBufferedValue)[39m]: [1mnull[22m,
          [[32mSymbol(kWriteCbValue)[39m]: [1mnull[22m
        },
        allowHalfOpen: [33mfalse[39m,
        _maxListeners: [90mundefined[39m,
        _eventsCount: [33m6[39m,
        _sockname: [1mnull[22m,
        _pendingData: [1mnull[22m,
        _pendingEncoding: [32m''[39m,
        server: [1mnull[22m,
        _server: [1mnull[22m,
        timeout: [33m30000[39m,
        parser: [1mnull[22m,
        _httpMessage: [36m[Circular *1][39m,
        autoSelectFamilyAttemptedAddresses: [
          [32m'::1:5080'[39m
        ],
        [[32mSymbol(async_id_symbol)[39m]: [33m12866[39m,
        [[32mSymbol(kHandle)[39m]: [1mnull[22m,
        [[32mSymbol(lastWriteQueueSize)[39m]: [33m0[39m,
        [[32mSymbol(timeout)[39m]: Timeout {
          _idleTimeout: [33m-1[39m,
          _idlePrev: [1mnull[22m,
          _idleNext: [1mnull[22m,
          _idleStart: [33m95302[39m,
          _onTimeout: [1mnull[22m,
          _timerArgs: [90mundefined[39m,
          _repeat: [1mnull[22m,
          _destroyed: [33mtrue[39m,
          [[32mSymbol(refed)[39m]: [33mfalse[39m,
          [[32mSymbol(kHasPrimitive)[39m]: [33mfalse[39m,
          [[32mSymbol(asyncId)[39m]: [33m12886[39m,
          [[32mSymbol(triggerId)[39m]: [33m12868[39m,
          [[32mSymbol(kAsyncContextFrame)[39m]: [90mundefined[39m,
          [[32mSymbol(kResourceStore)[39m]: [90mundefined[39m,
          [[32mSymbol(kResourceStore)[39m]: [32m'Logging Integration Log Analytics Integration should get popular pages through controller'[39m
        },
        [[32mSymbol(kBuffer)[39m]: [1mnull[22m,
        [[32mSymbol(kBufferCb)[39m]: [1mnull[22m,
        [[32mSymbol(kBufferGen)[39m]: [1mnull[22m,
        [[32mSymbol(shapeMode)[39m]: [33mtrue[39m,
        [[32mSymbol(kCapture)[39m]: [33mfalse[39m,
        [[32mSymbol(kSetNoDelay)[39m]: [33mtrue[39m,
        [[32mSymbol(kSetKeepAlive)[39m]: [33mtrue[39m,
        [[32mSymbol(kSetKeepAliveInitialDelay)[39m]: [33m60[39m,
        [[32mSymbol(kBytesRead)[39m]: [33m372[39m,
        [[32mSymbol(kBytesWritten)[39m]: [33m655[39m
      },
      _consuming: [33mfalse[39m,
      _dumped: [33mfalse[39m,
      req: [36m[Circular *1][39m,
      _eventsCount: [33m4[39m,
      responseUrl: [32m'http://localhost:5080/api/default/_search'[39m,
      redirects: [],
      [[32mSymbol(shapeMode)[39m]: [33mtrue[39m,
      [[32mSymbol(kCapture)[39m]: [33mfalse[39m,
      [[32mSymbol(kHeaders)[39m]: {
        [32m'transfer-encoding'[39m: [32m'chunked'[39m,
        connection: [32m'close'[39m,
        [32m'content-type'[39m: [32m'text/plain; charset=utf-8'[39m,
        vary: [32m'Origin, Access-Control-Request-Method, Access-Control-Request-Headers, accept-encoding'[39m,
        [32m'access-control-allow-credentials'[39m: [32m'true'[39m,
        [32m'x-api-node'[39m: [32m'995170affe05'[39m,
        date: [32m'Thu, 09 Oct 2025 07:44:15 GMT'[39m
      },
      [[32mSymbol(kHeadersCount)[39m]: [33m18[39m,
      [[32mSymbol(kTrailers)[39m]: [1mnull[22m,
      [[32mSymbol(kTrailersCount)[39m]: [33m0[39m
    },
    aborted: [33mfalse[39m,
    timeoutCb: [36m[Function: emitRequestTimeout][39m,
    upgradeOrConnect: [33mfalse[39m,
    parser: [1mnull[22m,
    maxHeadersCount: [1mnull[22m,
    reusedSocket: [33mfalse[39m,
    host: [32m'localhost'[39m,
    protocol: [32m'http:'[39m,
    _redirectable: Writable {
      _events: {
        close: [90mundefined[39m,
        error: [36m[Function: handleRequestError][39m,
        prefinish: [90mundefined[39m,
        finish: [90mundefined[39m,
        drain: [90mundefined[39m,
        response: [36m[Function: handleResponse][39m,
        socket: [
          [36m[Function: handleRequestSocket][39m,
          [36m[Function: destroyOnTimeout][39m
        ],
        timeout: [90mundefined[39m,
        abort: [90mundefined[39m
      },
      _writableState: WritableState {
        highWaterMark: [33m16384[39m,
        length: [33m0[39m,
        corked: [33m0[39m,
        onwrite: [36m[Function: bound onwrite][39m,
        writelen: [33m0[39m,
        bufferedIndex: [33m0[39m,
        pendingcb: [33m0[39m,
        [[32mSymbol(kState)[39m]: [33m17580812[39m,
        [[32mSymbol(kBufferedValue)[39m]: [1mnull[22m
      },
      _maxListeners: [90mundefined[39m,
      _options: {
        maxRedirects: [33m21[39m,
        maxBodyLength: [33mInfinity[39m,
        protocol: [32m'http:'[39m,
        path: [32m'/api/default/_search'[39m,
        method: [32m'POST'[39m,
        headers: [Object: null prototype] {
          Accept: [32m'application/json, text/plain, */*'[39m,
          [32m'Content-Type'[39m: [32m'application/json'[39m,
          Authorization: [32m'Bearer '[39m,
          [32m'User-Agent'[39m: [32m'axios/1.12.2'[39m,
          [32m'Content-Length'[39m: [32m'379'[39m,
          [32m'Accept-Encoding'[39m: [32m'gzip, compress, deflate, br'[39m
        },
        agents: {
          http: [90mundefined[39m,
          https: [90mundefined[39m
        },
        auth: [90mundefined[39m,
        family: [90mundefined[39m,
        beforeRedirect: [36m[Function: dispatchBeforeRedirect][39m,
        beforeRedirects: {
          proxy: [36m[Function: beforeRedirect][39m
        },
        hostname: [32m'localhost'[39m,
        port: [32m'5080'[39m,
        agent: [90mundefined[39m,
        nativeProtocols: {
          [32m'http:'[39m: {
            _connectionListener: [36m[Function: connectionListener][39m,
            METHODS: [36m[Array][39m,
            STATUS_CODES: [36m[Object][39m,
            Agent: [36m[Function][39m,
            ClientRequest: [36m[Function: ClientRequest][39m,
            IncomingMessage: [36m[Function: IncomingMessage][39m,
            OutgoingMessage: [36m[Function: OutgoingMessage][39m,
            Server: [36m[Function: Server][39m,
            ServerResponse: [36m[Function: ServerResponse][39m,
            createServer: [36m[Function: createServer][39m,
            validateHeaderName: [36m[Function][39m,
            validateHeaderValue: [36m[Function][39m,
            get: [36m[Function: get][39m,
            request: [36m[Function: request][39m,
            setMaxIdleHTTPParsers: [36m[Function: setMaxIdleHTTPParsers][39m,
            maxHeaderSize: [36m[Getter][39m,
            globalAgent: [36m[Getter/Setter][39m,
            WebSocket: [36m[Getter][39m,
            CloseEvent: [36m[Getter][39m,
            MessageEvent: [36m[Getter][39m
          },
          [32m'https:'[39m: {
            Agent: [36m[Function: Agent][39m,
            globalAgent: [36m[Agent][39m,
            Server: [36m[Function: Server][39m,
            createServer: [36m[Function: createServer][39m,
            get: [36m[Function: get][39m,
            request: [36m[Function: request][39m
          }
        },
        pathname: [32m'/api/default/_search'[39m
      },
      _ended: [33mtrue[39m,
      _ending: [33mtrue[39m,
      _redirectCount: [33m0[39m,
      _redirects: [],
      _requestBodyLength: [33m379[39m,
      _requestBodyBuffers: [],
      _eventsCount: [33m3[39m,
      _onNativeResponse: [36m[Function (anonymous)][39m,
      _currentRequest: [36m[Circular *1][39m,
      _currentUrl: [32m'http://localhost:5080/api/default/_search'[39m,
      _timeout: [1mnull[22m,
      [[32mSymbol(shapeMode)[39m]: [33mtrue[39m,
      [[32mSymbol(kCapture)[39m]: [33mfalse[39m
    },
    [[32mSymbol(shapeMode)[39m]: [33mfalse[39m,
    [[32mSymbol(kCapture)[39m]: [33mfalse[39m,
    [[32mSymbol(kBytesWritten)[39m]: [33m0[39m,
    [[32mSymbol(kNeedDrain)[39m]: [33mfalse[39m,
    [[32mSymbol(corked)[39m]: [33m0[39m,
    [[32mSymbol(kChunkedBuffer)[39m]: [],
    [[32mSymbol(kChunkedLength)[39m]: [33m0[39m,
    [[32mSymbol(kSocket)[39m]: Socket {
      connecting: [33mfalse[39m,
      _hadError: [33mfalse[39m,
      _parent: [1mnull[22m,
      _host: [32m'localhost'[39m,
      _closeAfterHandlingError: [33mfalse[39m,
      _events: {
        close: [
          [36m[Function: onClose][39m,
          [36m[Function: socketCloseListener][39m
        ],
        error: [36m[Function: socketErrorListener][39m,
        prefinish: [90mundefined[39m,
        finish: [90mundefined[39m,
        drain: [90mundefined[39m,
        data: [90mundefined[39m,
        end: [36m[Function: onReadableStreamEnd][39m,
        readable: [90mundefined[39m,
        connect: [90mundefined[39m,
        free: [36m[Function: onFree][39m,
        timeout: [
          [36m[Function: onTimeout][39m,
          [36m[Function (anonymous)][39m
        ],
        agentRemove: [36m[Function: onRemove][39m
      },
      _readableState: ReadableState {
        highWaterMark: [33m16384[39m,
        buffer: [],
        bufferIndex: [33m0[39m,
        length: [33m0[39m,
        pipes: [],
        awaitDrainWriters: [1mnull[22m,
        [[32mSymbol(kState)[39m]: [33m60303732[39m
      },
      _writableState: WritableState {
        highWaterMark: [33m16384[39m,
        length: [33m0[39m,
        corked: [33m0[39m,
        onwrite: [36m[Function: bound onwrite][39m,
        writelen: [33m0[39m,
        bufferedIndex: [33m0[39m,
        pendingcb: [33m0[39m,
        [[32mSymbol(kState)[39m]: [33m1091450228[39m,
        [[32mSymbol(kBufferedValue)[39m]: [1mnull[22m,
        [[32mSymbol(kWriteCbValue)[39m]: [1mnull[22m
      },
      allowHalfOpen: [33mfalse[39m,
      _maxListeners: [90mundefined[39m,
      _eventsCount: [33m6[39m,
      _sockname: [1mnull[22m,
      _pendingData: [1mnull[22m,
      _pendingEncoding: [32m''[39m,
      server: [1mnull[22m,
      _server: [1mnull[22m,
      timeout: [33m30000[39m,
      parser: [1mnull[22m,
      _httpMessage: [36m[Circular *1][39m,
      autoSelectFamilyAttemptedAddresses: [
        [32m'::1:5080'[39m
      ],
      [[32mSymbol(async_id_symbol)[39m]: [33m12866[39m,
      [[32mSymbol(kHandle)[39m]: [1mnull[22m,
      [[32mSymbol(lastWriteQueueSize)[39m]: [33m0[39m,
      [[32mSymbol(timeout)[39m]: Timeout {
        _idleTimeout: [33m-1[39m,
        _idlePrev: [1mnull[22m,
        _idleNext: [1mnull[22m,
        _idleStart: [33m95302[39m,
        _onTimeout: [1mnull[22m,
        _timerArgs: [90mundefined[39m,
        _repeat: [1mnull[22m,
        _destroyed: [33mtrue[39m,
        [[32mSymbol(refed)[39m]: [33mfalse[39m,
        [[32mSymbol(kHasPrimitive)[39m]: [33mfalse[39m,
        [[32mSymbol(asyncId)[39m]: [33m12886[39m,
        [[32mSymbol(triggerId)[39m]: [33m12868[39m,
        [[32mSymbol(kAsyncContextFrame)[39m]: [90mundefined[39m,
        [[32mSymbol(kResourceStore)[39m]: [90mundefined[39m,
        [[32mSymbol(kResourceStore)[39m]: [32m'Logging Integration Log Analytics Integration should get popular pages through controller'[39m
      },
      [[32mSymbol(kBuffer)[39m]: [1mnull[22m,
      [[32mSymbol(kBufferCb)[39m]: [1mnull[22m,
      [[32mSymbol(kBufferGen)[39m]: [1mnull[22m,
      [[32mSymbol(shapeMode)[39m]: [33mtrue[39m,
      [[32mSymbol(kCapture)[39m]: [33mfalse[39m,
      [[32mSymbol(kSetNoDelay)[39m]: [33mtrue[39m,
      [[32mSymbol(kSetKeepAlive)[39m]: [33mtrue[39m,
      [[32mSymbol(kSetKeepAliveInitialDelay)[39m]: [33m60[39m,
      [[32mSymbol(kBytesRead)[39m]: [33m372[39m,
      [[32mSymbol(kBytesWritten)[39m]: [33m655[39m
    },
    [[32mSymbol(kOutHeaders)[39m]: [Object: null prototype] {
      accept: [
        [32m'Accept'[39m,
        [32m'application/json, text/plain, */*'[39m
      ],
      [32m'content-type'[39m: [
        [32m'Content-Type'[39m,
        [32m'application/json'[39m
      ],
      authorization: [
        [32m'Authorization'[39m,
        [32m'Bearer '[39m
      ],
      [32m'user-agent'[39m: [
        [32m'User-Agent'[39m,
        [32m'axios/1.12.2'[39m
      ],
      [32m'content-length'[39m: [
        [32m'Content-Length'[39m,
        [32m'379'[39m
      ],
      [32m'accept-encoding'[39m: [
        [32m'Accept-Encoding'[39m,
        [32m'gzip, compress, deflate, br'[39m
      ],
      host: [
        [32m'Host'[39m,
        [32m'localhost:5080'[39m
      ]
    },
    [[32mSymbol(errored)[39m]: [1mnull[22m,
    [[32mSymbol(kHighWaterMark)[39m]: [33m16384[39m,
    [[32mSymbol(kRejectNonStandardBodyWrites)[39m]: [33mfalse[39m,
    [[32mSymbol(kUniqueHeaders)[39m]: [1mnull[22m
  },
  response: {
    status: [33m403[39m,
    statusText: [32m'Forbidden'[39m,
    headers: Object [AxiosHeaders] {
      [32m'transfer-encoding'[39m: [32m'chunked'[39m,
      connection: [32m'close'[39m,
      [32m'content-type'[39m: [32m'text/plain; charset=utf-8'[39m,
      vary: [32m'Origin, Access-Control-Request-Method, Access-Control-Request-Headers, accept-encoding'[39m,
      [32m'access-control-allow-credentials'[39m: [32m'true'[39m,
      [32m'x-api-node'[39m: [32m'995170affe05'[39m,
      date: [32m'Thu, 09 Oct 2025 07:44:15 GMT'[39m
    },
    config: {
      transitional: {
        silentJSONParsing: [33mtrue[39m,
        forcedJSONParsing: [33mtrue[39m,
        clarifyTimeoutError: [33mfalse[39m
      },
      adapter: [
        [32m'xhr'[39m,
        [32m'http'[39m,
        [32m'fetch'[39m
      ],
      transformRequest: [
        [36m[Function: transformRequest][39m
      ],
      transformResponse: [
        [36m[Function: transformResponse][39m
      ],
      timeout: [33m30000[39m,
      xsrfCookieName: [32m'XSRF-TOKEN'[39m,
      xsrfHeaderName: [32m'X-XSRF-TOKEN'[39m,
      maxContentLength: [33m-1[39m,
      maxBodyLength: [33m-1[39m,
      env: {
        FormData: [Function: FormData] [FormData] {
          LINE_BREAK: [32m'\r\n'[39m,
          DEFAULT_CONTENT_TYPE: [32m'application/octet-stream'[39m
        },
        Blob: [36m[class Blob][39m
      },
      validateStatus: [36m[Function: validateStatus][39m,
      headers: Object [AxiosHeaders] {
        Accept: [32m'application/json, text/plain, */*'[39m,
        [32m'Content-Type'[39m: [32m'application/json'[39m,
        Authorization: [32m'Bearer '[39m,
        [32m'User-Agent'[39m: [32m'axios/1.12.2'[39m,
        [32m'Content-Length'[39m: [32m'379'[39m,
        [32m'Accept-Encoding'[39m: [32m'gzip, compress, deflate, br'[39m
      },
      cancelToken: CancelToken {
        promise: Promise {
          CanceledError {
            message: [32m'canceled'[39m,
            name: [32m'CanceledError'[39m,
            code: [32m'ERR_CANCELED'[39m
          },
          then: [36m[Function (anonymous)][39m,
          [[32mSymbol(async_id_symbol)[39m]: [33m12860[39m,
          [[32mSymbol(trigger_async_id_symbol)[39m]: [33m12842[39m,
          [[32mSymbol(kResourceStore)[39m]: [90mundefined[39m,
          [[32mSymbol(kResourceStore)[39m]: [32m'Logging Integration Log Analytics Integration should get popular pages through controller'[39m
        },
        _listeners: [1mnull[22m,
        reason: CanceledError {
          message: [32m'canceled'[39m,
          name: [32m'CanceledError'[39m,
          code: [32m'ERR_CANCELED'[39m
        }
      },
      method: [32m'post'[39m,
      url: [32m'http://localhost:5080/api/default/_search'[39m,
      data: [32m`{"query":"\\n      SELECT eventData.page as page,\\n             COUNT(*) as view_count,\\n             COUNT(DISTINCT userId) as unique_users\\n      FROM user-behavior\\n      WHERE eventType = 'PAGE_VIEW' \\n        AND timestamp >= '2023-01-01T00:00:00Z' \\n        AND timestamp <= '2023-01-02T00:00:00Z'\\n      GROUP BY page\\n      ORDER BY view_count DESC\\n      LIMIT 10\\n    "}`[39m,
      allowAbsoluteUrls: [33mtrue[39m
    },
    request: [36m<ref *1>[39m ClientRequest {
      _events: [Object: null prototype] {
        abort: [36m[Function (anonymous)][39m,
        aborted: [36m[Function (anonymous)][39m,
        connect: [36m[Function (anonymous)][39m,
        error: [36m[Function (anonymous)][39m,
        socket: [36m[Function (anonymous)][39m,
        timeout: [36m[Function (anonymous)][39m,
        finish: [36m[Function: requestOnFinish][39m
      },
      _eventsCount: [33m7[39m,
      _maxListeners: [90mundefined[39m,
      outputData: [],
      outputSize: [33m0[39m,
      writable: [33mtrue[39m,
      destroyed: [33mtrue[39m,
      _last: [33mfalse[39m,
      chunkedEncoding: [33mfalse[39m,
      shouldKeepAlive: [33mfalse[39m,
      maxRequestsOnConnectionReached: [33mfalse[39m,
      _defaultKeepAlive: [33mtrue[39m,
      useChunkedEncodingByDefault: [33mtrue[39m,
      sendDate: [33mfalse[39m,
      _removedConnection: [33mfalse[39m,
      _removedContLen: [33mfalse[39m,
      _removedTE: [33mfalse[39m,
      strictContentLength: [33mfalse[39m,
      _contentLength: [33m379[39m,
      _hasBody: [33mtrue[39m,
      _trailer: [32m''[39m,
      finished: [33mtrue[39m,
      _headerSent: [33mtrue[39m,
      _closed: [33mtrue[39m,
      _header: [32m'POST /api/default/_search HTTP/1.1\r\nAccept: application/json, text/plain, */*\r\nContent-Type: application/json\r\nAuthorization: Bearer \r\nUser-Agent: axios/1.12.2\r\nContent-Length: 379\r\nAccept-Encoding: gzip, compress, deflate, br\r\nHost: localhost:5080\r\nConnection: keep-alive\r\n\r\n'[39m,
      _keepAliveTimeout: [33m0[39m,
      _onPendingData: [36m[Function: nop][39m,
      agent: Agent {
        _events: [Object: null prototype] {
          free: [36m[Function (anonymous)][39m,
          newListener: [36m[Function: maybeEnableKeylog][39m
        },
        _eventsCount: [33m2[39m,
        _maxListeners: [90mundefined[39m,
        defaultPort: [33m80[39m,
        protocol: [32m'http:'[39m,
        options: [Object: null prototype] {
          keepAlive: [33mtrue[39m,
          scheduling: [32m'lifo'[39m,
          timeout: [33m5000[39m,
          noDelay: [33mtrue[39m,
          path: [1mnull[22m
        },
        requests: [Object: null prototype] {},
        sockets: [Object: null prototype] {},
        freeSockets: [Object: null prototype] {},
        keepAliveMsecs: [33m1000[39m,
        keepAlive: [33mtrue[39m,
        maxSockets: [33mInfinity[39m,
        maxFreeSockets: [33m256[39m,
        scheduling: [32m'lifo'[39m,
        maxTotalSockets: [33mInfinity[39m,
        totalSocketCount: [33m0[39m,
        agentKeepAliveTimeoutBuffer: [33m1000[39m,
        [[32mSymbol(shapeMode)[39m]: [33mfalse[39m,
        [[32mSymbol(kCapture)[39m]: [33mfalse[39m
      },
      socketPath: [90mundefined[39m,
      method: [32m'POST'[39m,
      maxHeaderSize: [90mundefined[39m,
      insecureHTTPParser: [90mundefined[39m,
      joinDuplicateHeaders: [90mundefined[39m,
      path: [32m'/api/default/_search'[39m,
      _ended: [33mtrue[39m,
      res: IncomingMessage {
        _events: {
          close: [
            [36m[Function (anonymous)][39m,
            [36m[Function: onclose][39m,
            [36m[Function: onclose][39m
          ],
          error: [
            [36m[Function: onerror][39m,
            [36m[Function: onError][39m,
            [36m[Function: onerror][39m
          ],
          data: [90mundefined[39m,
          end: [
            [36m[Function: responseOnEnd][39m,
            [36m[Function: onend][39m,
            [36m[Function: onend][39m
          ],
          readable: [90mundefined[39m,
          finish: [
            [36m[Function: onfinish][39m,
            [36m[Function: onfinish][39m
          ]
        },
        _readableState: ReadableState {
          highWaterMark: [33m16384[39m,
          buffer: [],
          bufferIndex: [33m0[39m,
          length: [33m0[39m,
          pipes: [],
          awaitDrainWriters: [1mnull[22m,
          [[32mSymbol(kState)[39m]: [33m110892924[39m
        },
        _maxListeners: [90mundefined[39m,
        socket: Socket {
          connecting: [33mfalse[39m,
          _hadError: [33mfalse[39m,
          _parent: [1mnull[22m,
          _host: [32m'localhost'[39m,
          _closeAfterHandlingError: [33mfalse[39m,
          _events: {
            close: [36m[Array][39m,
            error: [36m[Function: socketErrorListener][39m,
            prefinish: [90mundefined[39m,
            finish: [90mundefined[39m,
            drain: [90mundefined[39m,
            data: [90mundefined[39m,
            end: [36m[Function: onReadableStreamEnd][39m,
            readable: [90mundefined[39m,
            connect: [90mundefined[39m,
            free: [36m[Function: onFree][39m,
            timeout: [36m[Array][39m,
            agentRemove: [36m[Function: onRemove][39m
          },
          _readableState: ReadableState {
            highWaterMark: [33m16384[39m,
            buffer: [],
            bufferIndex: [33m0[39m,
            length: [33m0[39m,
            pipes: [],
            awaitDrainWriters: [1mnull[22m,
            [[32mSymbol(kState)[39m]: [33m60303732[39m
          },
          _writableState: WritableState {
            highWaterMark: [33m16384[39m,
            length: [33m0[39m,
            corked: [33m0[39m,
            onwrite: [36m[Function: bound onwrite][39m,
            writelen: [33m0[39m,
            bufferedIndex: [33m0[39m,
            pendingcb: [33m0[39m,
            [[32mSymbol(kState)[39m]: [33m1091450228[39m,
            [[32mSymbol(kBufferedValue)[39m]: [1mnull[22m,
            [[32mSymbol(kWriteCbValue)[39m]: [1mnull[22m
          },
          allowHalfOpen: [33mfalse[39m,
          _maxListeners: [90mundefined[39m,
          _eventsCount: [33m6[39m,
          _sockname: [1mnull[22m,
          _pendingData: [1mnull[22m,
          _pendingEncoding: [32m''[39m,
          server: [1mnull[22m,
          _server: [1mnull[22m,
          timeout: [33m30000[39m,
          parser: [1mnull[22m,
          _httpMessage: [36m[Circular *1][39m,
          autoSelectFamilyAttemptedAddresses: [
            [32m'::1:5080'[39m
          ],
          [[32mSymbol(async_id_symbol)[39m]: [33m12866[39m,
          [[32mSymbol(kHandle)[39m]: [1mnull[22m,
          [[32mSymbol(lastWriteQueueSize)[39m]: [33m0[39m,
          [[32mSymbol(timeout)[39m]: Timeout {
            _idleTimeout: [33m-1[39m,
            _idlePrev: [1mnull[22m,
            _idleNext: [1mnull[22m,
            _idleStart: [33m95302[39m,
            _onTimeout: [1mnull[22m,
            _timerArgs: [90mundefined[39m,
            _repeat: [1mnull[22m,
            _destroyed: [33mtrue[39m,
            [[32mSymbol(refed)[39m]: [33mfalse[39m,
            [[32mSymbol(kHasPrimitive)[39m]: [33mfalse[39m,
            [[32mSymbol(asyncId)[39m]: [33m12886[39m,
            [[32mSymbol(triggerId)[39m]: [33m12868[39m,
            [[32mSymbol(kAsyncContextFrame)[39m]: [90mundefined[39m,
            [[32mSymbol(kResourceStore)[39m]: [90mundefined[39m,
            [[32mSymbol(kResourceStore)[39m]: [32m'Logging Integration Log Analytics Integration should get popular pages through controller'[39m
          },
          [[32mSymbol(kBuffer)[39m]: [1mnull[22m,
          [[32mSymbol(kBufferCb)[39m]: [1mnull[22m,
          [[32mSymbol(kBufferGen)[39m]: [1mnull[22m,
          [[32mSymbol(shapeMode)[39m]: [33mtrue[39m,
          [[32mSymbol(kCapture)[39m]: [33mfalse[39m,
          [[32mSymbol(kSetNoDelay)[39m]: [33mtrue[39m,
          [[32mSymbol(kSetKeepAlive)[39m]: [33mtrue[39m,
          [[32mSymbol(kSetKeepAliveInitialDelay)[39m]: [33m60[39m,
          [[32mSymbol(kBytesRead)[39m]: [33m372[39m,
          [[32mSymbol(kBytesWritten)[39m]: [33m655[39m
        },
        httpVersionMajor: [33m1[39m,
        httpVersionMinor: [33m1[39m,
        httpVersion: [32m'1.1'[39m,
        complete: [33mtrue[39m,
        rawHeaders: [
          [32m'transfer-encoding'[39m,
          [32m'chunked'[39m,
          [32m'connection'[39m,
          [32m'close'[39m,
          [32m'content-type'[39m,
          [32m'text/plain; charset=utf-8'[39m,
          [32m'vary'[39m,
          [32m'Origin, Access-Control-Request-Method, Access-Control-Request-Headers'[39m,
          [32m'vary'[39m,
          [32m'accept-encoding'[39m,
          [32m'content-encoding'[39m,
          [32m'br'[39m,
          [32m'access-control-allow-credentials'[39m,
          [32m'true'[39m,
          [32m'x-api-node'[39m,
          [32m'995170affe05'[39m,
          [32m'date'[39m,
          [32m'Thu, 09 Oct 2025 07:44:15 GMT'[39m
        ],
        rawTrailers: [],
        joinDuplicateHeaders: [90mundefined[39m,
        aborted: [33mfalse[39m,
        upgrade: [33mfalse[39m,
        url: [32m''[39m,
        method: [1mnull[22m,
        statusCode: [33m403[39m,
        statusMessage: [32m'Forbidden'[39m,
        client: Socket {
          connecting: [33mfalse[39m,
          _hadError: [33mfalse[39m,
          _parent: [1mnull[22m,
          _host: [32m'localhost'[39m,
          _closeAfterHandlingError: [33mfalse[39m,
          _events: {
            close: [36m[Array][39m,
            error: [36m[Function: socketErrorListener][39m,
            prefinish: [90mundefined[39m,
            finish: [90mundefined[39m,
            drain: [90mundefined[39m,
            data: [90mundefined[39m,
            end: [36m[Function: onReadableStreamEnd][39m,
            readable: [90mundefined[39m,
            connect: [90mundefined[39m,
            free: [36m[Function: onFree][39m,
            timeout: [36m[Array][39m,
            agentRemove: [36m[Function: onRemove][39m
          },
          _readableState: ReadableState {
            highWaterMark: [33m16384[39m,
            buffer: [],
            bufferIndex: [33m0[39m,
            length: [33m0[39m,
            pipes: [],
            awaitDrainWriters: [1mnull[22m,
            [[32mSymbol(kState)[39m]: [33m60303732[39m
          },
          _writableState: WritableState {
            highWaterMark: [33m16384[39m,
            length: [33m0[39m,
            corked: [33m0[39m,
            onwrite: [36m[Function: bound onwrite][39m,
            writelen: [33m0[39m,
            bufferedIndex: [33m0[39m,
            pendingcb: [33m0[39m,
            [[32mSymbol(kState)[39m]: [33m1091450228[39m,
            [[32mSymbol(kBufferedValue)[39m]: [1mnull[22m,
            [[32mSymbol(kWriteCbValue)[39m]: [1mnull[22m
          },
          allowHalfOpen: [33mfalse[39m,
          _maxListeners: [90mundefined[39m,
          _eventsCount: [33m6[39m,
          _sockname: [1mnull[22m,
          _pendingData: [1mnull[22m,
          _pendingEncoding: [32m''[39m,
          server: [1mnull[22m,
          _server: [1mnull[22m,
          timeout: [33m30000[39m,
          parser: [1mnull[22m,
          _httpMessage: [36m[Circular *1][39m,
          autoSelectFamilyAttemptedAddresses: [
            [32m'::1:5080'[39m
          ],
          [[32mSymbol(async_id_symbol)[39m]: [33m12866[39m,
          [[32mSymbol(kHandle)[39m]: [1mnull[22m,
          [[32mSymbol(lastWriteQueueSize)[39m]: [33m0[39m,
          [[32mSymbol(timeout)[39m]: Timeout {
            _idleTimeout: [33m-1[39m,
            _idlePrev: [1mnull[22m,
            _idleNext: [1mnull[22m,
            _idleStart: [33m95302[39m,
            _onTimeout: [1mnull[22m,
            _timerArgs: [90mundefined[39m,
            _repeat: [1mnull[22m,
            _destroyed: [33mtrue[39m,
            [[32mSymbol(refed)[39m]: [33mfalse[39m,
            [[32mSymbol(kHasPrimitive)[39m]: [33mfalse[39m,
            [[32mSymbol(asyncId)[39m]: [33m12886[39m,
            [[32mSymbol(triggerId)[39m]: [33m12868[39m,
            [[32mSymbol(kAsyncContextFrame)[39m]: [90mundefined[39m,
            [[32mSymbol(kResourceStore)[39m]: [90mundefined[39m,
            [[32mSymbol(kResourceStore)[39m]: [32m'Logging Integration Log Analytics Integration should get popular pages through controller'[39m
          },
          [[32mSymbol(kBuffer)[39m]: [1mnull[22m,
          [[32mSymbol(kBufferCb)[39m]: [1mnull[22m,
          [[32mSymbol(kBufferGen)[39m]: [1mnull[22m,
          [[32mSymbol(shapeMode)[39m]: [33mtrue[39m,
          [[32mSymbol(kCapture)[39m]: [33mfalse[39m,
          [[32mSymbol(kSetNoDelay)[39m]: [33mtrue[39m,
          [[32mSymbol(kSetKeepAlive)[39m]: [33mtrue[39m,
          [[32mSymbol(kSetKeepAliveInitialDelay)[39m]: [33m60[39m,
          [[32mSymbol(kBytesRead)[39m]: [33m372[39m,
          [[32mSymbol(kBytesWritten)[39m]: [33m655[39m
        },
        _consuming: [33mfalse[39m,
        _dumped: [33mfalse[39m,
        req: [36m[Circular *1][39m,
        _eventsCount: [33m4[39m,
        responseUrl: [32m'http://localhost:5080/api/default/_search'[39m,
        redirects: [],
        [[32mSymbol(shapeMode)[39m]: [33mtrue[39m,
        [[32mSymbol(kCapture)[39m]: [33mfalse[39m,
        [[32mSymbol(kHeaders)[39m]: {
          [32m'transfer-encoding'[39m: [32m'chunked'[39m,
          connection: [32m'close'[39m,
          [32m'content-type'[39m: [32m'text/plain; charset=utf-8'[39m,
          vary: [32m'Origin, Access-Control-Request-Method, Access-Control-Request-Headers, accept-encoding'[39m,
          [32m'access-control-allow-credentials'[39m: [32m'true'[39m,
          [32m'x-api-node'[39m: [32m'995170affe05'[39m,
          date: [32m'Thu, 09 Oct 2025 07:44:15 GMT'[39m
        },
        [[32mSymbol(kHeadersCount)[39m]: [33m18[39m,
        [[32mSymbol(kTrailers)[39m]: [1mnull[22m,
        [[32mSymbol(kTrailersCount)[39m]: [33m0[39m
      },
      aborted: [33mfalse[39m,
      timeoutCb: [36m[Function: emitRequestTimeout][39m,
      upgradeOrConnect: [33mfalse[39m,
      parser: [1mnull[22m,
      maxHeadersCount: [1mnull[22m,
      reusedSocket: [33mfalse[39m,
      host: [32m'localhost'[39m,
      protocol: [32m'http:'[39m,
      _redirectable: Writable {
        _events: {
          close: [90mundefined[39m,
          error: [36m[Function: handleRequestError][39m,
          prefinish: [90mundefined[39m,
          finish: [90mundefined[39m,
          drain: [90mundefined[39m,
          response: [36m[Function: handleResponse][39m,
          socket: [
            [36m[Function: handleRequestSocket][39m,
            [36m[Function: destroyOnTimeout][39m
          ],
          timeout: [90mundefined[39m,
          abort: [90mundefined[39m
        },
        _writableState: WritableState {
          highWaterMark: [33m16384[39m,
          length: [33m0[39m,
          corked: [33m0[39m,
          onwrite: [36m[Function: bound onwrite][39m,
          writelen: [33m0[39m,
          bufferedIndex: [33m0[39m,
          pendingcb: [33m0[39m,
          [[32mSymbol(kState)[39m]: [33m17580812[39m,
          [[32mSymbol(kBufferedValue)[39m]: [1mnull[22m
        },
        _maxListeners: [90mundefined[39m,
        _options: {
          maxRedirects: [33m21[39m,
          maxBodyLength: [33mInfinity[39m,
          protocol: [32m'http:'[39m,
          path: [32m'/api/default/_search'[39m,
          method: [32m'POST'[39m,
          headers: [Object: null prototype] {
            Accept: [32m'application/json, text/plain, */*'[39m,
            [32m'Content-Type'[39m: [32m'application/json'[39m,
            Authorization: [32m'Bearer '[39m,
            [32m'User-Agent'[39m: [32m'axios/1.12.2'[39m,
            [32m'Content-Length'[39m: [32m'379'[39m,
            [32m'Accept-Encoding'[39m: [32m'gzip, compress, deflate, br'[39m
          },
          agents: {
            http: [90mundefined[39m,
            https: [90mundefined[39m
          },
          auth: [90mundefined[39m,
          family: [90mundefined[39m,
          beforeRedirect: [36m[Function: dispatchBeforeRedirect][39m,
          beforeRedirects: {
            proxy: [36m[Function: beforeRedirect][39m
          },
          hostname: [32m'localhost'[39m,
          port: [32m'5080'[39m,
          agent: [90mundefined[39m,
          nativeProtocols: {
            [32m'http:'[39m: [36m[Object][39m,
            [32m'https:'[39m: [36m[Object][39m
          },
          pathname: [32m'/api/default/_search'[39m
        },
        _ended: [33mtrue[39m,
        _ending: [33mtrue[39m,
        _redirectCount: [33m0[39m,
        _redirects: [],
        _requestBodyLength: [33m379[39m,
        _requestBodyBuffers: [],
        _eventsCount: [33m3[39m,
        _onNativeResponse: [36m[Function (anonymous)][39m,
        _currentRequest: [36m[Circular *1][39m,
        _currentUrl: [32m'http://localhost:5080/api/default/_search'[39m,
        _timeout: [1mnull[22m,
        [[32mSymbol(shapeMode)[39m]: [33mtrue[39m,
        [[32mSymbol(kCapture)[39m]: [33mfalse[39m
      },
      [[32mSymbol(shapeMode)[39m]: [33mfalse[39m,
      [[32mSymbol(kCapture)[39m]: [33mfalse[39m,
      [[32mSymbol(kBytesWritten)[39m]: [33m0[39m,
      [[32mSymbol(kNeedDrain)[39m]: [33mfalse[39m,
      [[32mSymbol(corked)[39m]: [33m0[39m,
      [[32mSymbol(kChunkedBuffer)[39m]: [],
      [[32mSymbol(kChunkedLength)[39m]: [33m0[39m,
      [[32mSymbol(kSocket)[39m]: Socket {
        connecting: [33mfalse[39m,
        _hadError: [33mfalse[39m,
        _parent: [1mnull[22m,
        _host: [32m'localhost'[39m,
        _closeAfterHandlingError: [33mfalse[39m,
        _events: {
          close: [
            [36m[Function: onClose][39m,
            [36m[Function: socketCloseListener][39m
          ],
          error: [36m[Function: socketErrorListener][39m,
          prefinish: [90mundefined[39m,
          finish: [90mundefined[39m,
          drain: [90mundefined[39m,
          data: [90mundefined[39m,
          end: [36m[Function: onReadableStreamEnd][39m,
          readable: [90mundefined[39m,
          connect: [90mundefined[39m,
          free: [36m[Function: onFree][39m,
          timeout: [
            [36m[Function: onTimeout][39m,
            [36m[Function (anonymous)][39m
          ],
          agentRemove: [36m[Function: onRemove][39m
        },
        _readableState: ReadableState {
          highWaterMark: [33m16384[39m,
          buffer: [],
          bufferIndex: [33m0[39m,
          length: [33m0[39m,
          pipes: [],
          awaitDrainWriters: [1mnull[22m,
          [[32mSymbol(kState)[39m]: [33m60303732[39m
        },
        _writableState: WritableState {
          highWaterMark: [33m16384[39m,
          length: [33m0[39m,
          corked: [33m0[39m,
          onwrite: [36m[Function: bound onwrite][39m,
          writelen: [33m0[39m,
          bufferedIndex: [33m0[39m,
          pendingcb: [33m0[39m,
          [[32mSymbol(kState)[39m]: [33m1091450228[39m,
          [[32mSymbol(kBufferedValue)[39m]: [1mnull[22m,
          [[32mSymbol(kWriteCbValue)[39m]: [1mnull[22m
        },
        allowHalfOpen: [33mfalse[39m,
        _maxListeners: [90mundefined[39m,
        _eventsCount: [33m6[39m,
        _sockname: [1mnull[22m,
        _pendingData: [1mnull[22m,
        _pendingEncoding: [32m''[39m,
        server: [1mnull[22m,
        _server: [1mnull[22m,
        timeout: [33m30000[39m,
        parser: [1mnull[22m,
        _httpMessage: [36m[Circular *1][39m,
        autoSelectFamilyAttemptedAddresses: [
          [32m'::1:5080'[39m
        ],
        [[32mSymbol(async_id_symbol)[39m]: [33m12866[39m,
        [[32mSymbol(kHandle)[39m]: [1mnull[22m,
        [[32mSymbol(lastWriteQueueSize)[39m]: [33m0[39m,
        [[32mSymbol(timeout)[39m]: Timeout {
          _idleTimeout: [33m-1[39m,
          _idlePrev: [1mnull[22m,
          _idleNext: [1mnull[22m,
          _idleStart: [33m95302[39m,
          _onTimeout: [1mnull[22m,
          _timerArgs: [90mundefined[39m,
          _repeat: [1mnull[22m,
          _destroyed: [33mtrue[39m,
          [[32mSymbol(refed)[39m]: [33mfalse[39m,
          [[32mSymbol(kHasPrimitive)[39m]: [33mfalse[39m,
          [[32mSymbol(asyncId)[39m]: [33m12886[39m,
          [[32mSymbol(triggerId)[39m]: [33m12868[39m,
          [[32mSymbol(kAsyncContextFrame)[39m]: [90mundefined[39m,
          [[32mSymbol(kResourceStore)[39m]: [90mundefined[39m,
          [[32mSymbol(kResourceStore)[39m]: [32m'Logging Integration Log Analytics Integration should get popular pages through controller'[39m
        },
        [[32mSymbol(kBuffer)[39m]: [1mnull[22m,
        [[32mSymbol(kBufferCb)[39m]: [1mnull[22m,
        [[32mSymbol(kBufferGen)[39m]: [1mnull[22m,
        [[32mSymbol(shapeMode)[39m]: [33mtrue[39m,
        [[32mSymbol(kCapture)[39m]: [33mfalse[39m,
        [[32mSymbol(kSetNoDelay)[39m]: [33mtrue[39m,
        [[32mSymbol(kSetKeepAlive)[39m]: [33mtrue[39m,
        [[32mSymbol(kSetKeepAliveInitialDelay)[39m]: [33m60[39m,
        [[32mSymbol(kBytesRead)[39m]: [33m372[39m,
        [[32mSymbol(kBytesWritten)[39m]: [33m655[39m
      },
      [[32mSymbol(kOutHeaders)[39m]: [Object: null prototype] {
        accept: [
          [32m'Accept'[39m,
          [32m'application/json, text/plain, */*'[39m
        ],
        [32m'content-type'[39m: [
          [32m'Content-Type'[39m,
          [32m'application/json'[39m
        ],
        authorization: [
          [32m'Authorization'[39m,
          [32m'Bearer '[39m
        ],
        [32m'user-agent'[39m: [
          [32m'User-Agent'[39m,
          [32m'axios/1.12.2'[39m
        ],
        [32m'content-length'[39m: [
          [32m'Content-Length'[39m,
          [32m'379'[39m
        ],
        [32m'accept-encoding'[39m: [
          [32m'Accept-Encoding'[39m,
          [32m'gzip, compress, deflate, br'[39m
        ],
        host: [
          [32m'Host'[39m,
          [32m'localhost:5080'[39m
        ]
      },
      [[32mSymbol(errored)[39m]: [1mnull[22m,
      [[32mSymbol(kHighWaterMark)[39m]: [33m16384[39m,
      [[32mSymbol(kRejectNonStandardBodyWrites)[39m]: [33mfalse[39m,
      [[32mSymbol(kUniqueHeaders)[39m]: [1mnull[22m
    },
    data: [32m'Not Supported'[39m
  },
  status: [33m403[39m
}
[31m[Nest] 14512  - [39m2025/10/09 15:44:16 [31m  ERROR[39m [38;5;3m[LogAnalyticsService] [39m[31mFailed to get conversion funnel[39m
AxiosError: Request failed with status code 403
    at settle (D:\onlinestore\backend\node_modules\axios\lib\core\settle.js:19:12)
    at BrotliDecompress.handleStreamEnd (D:\onlinestore\backend\node_modules\axios\lib\adapters\http.js:617:11)
    at BrotliDecompress.emit (node:events:531:35)
    at endReadableNT (node:internal/streams/readable:1698:12)
    at processTicksAndRejections (node:internal/process/task_queues:90:21)
    at Axios.request (D:\onlinestore\backend\node_modules\axios\lib\core\Axios.js:45:41)
    at processTicksAndRejections (node:internal/process/task_queues:105:5)
[31m[Nest] 14512  - [39m2025/10/09 15:44:16 [31m  ERROR[39m [38;5;3m[LoggingController] [39m[31mFailed to get conversion funnel[39m
AxiosError: Request failed with status code 403
    at settle (D:\onlinestore\backend\node_modules\axios\lib\core\settle.js:19:12)
    at BrotliDecompress.handleStreamEnd (D:\onlinestore\backend\node_modules\axios\lib\adapters\http.js:617:11)
    at BrotliDecompress.emit (node:events:531:35)
    at endReadableNT (node:internal/streams/readable:1698:12)
    at processTicksAndRejections (node:internal/process/task_queues:90:21)
    at Axios.request (D:\onlinestore\backend\node_modules\axios\lib\core\Axios.js:45:41)
    at processTicksAndRejections (node:internal/process/task_queues:105:5)
FAIL src/logging/logging.integration.spec.ts
  Logging Integration
    √ module should be defined (2 ms)
    √ services should be defined (2 ms)
    √ controller should be defined (1 ms)
    Business Logging Integration
      √ should log user action through controller (3 ms)
      √ should log order event through controller (2 ms)
      √ should log payment event through controller (2 ms)
      √ should log inventory event through controller (3 ms)
    User Behavior Tracking Integration
      √ should track page view through controller (2 ms)
      √ should track product view through controller (2 ms)
      √ should track search through controller (2 ms)
      √ should track cart operation through controller (2 ms)
      √ should track checkout through controller (2 ms)
      √ should track purchase through controller (1 ms)
    Log Analytics Integration
      × should get log stats through controller (252 ms)
      × should get user behavior analytics through controller (78 ms)
      × should detect anomalous patterns through controller (56 ms)
      × should get popular pages through controller (70 ms)
      × should get conversion funnel through controller (34 ms)
    Utility Functions Integration
      √ should flush logs through controller (18 ms)
    End-to-End Workflow
      √ should complete a full user journey logging workflow (17 ms)

  ● Logging Integration › Log Analytics Integration › should get log stats through controller

    AxiosError: Request failed with status code 403

      at settle (../node_modules/axios/lib/core/settle.js:19:12)
      at BrotliDecompress.handleStreamEnd (../node_modules/axios/lib/adapters/http.js:617:11)
      at Axios.request (../node_modules/axios/lib/core/Axios.js:45:41)

  ● Logging Integration › Log Analytics Integration › should get user behavior analytics through controller

    expect(received).toBe(expected) // Object.is equality

    Expected: true
    Received: false

    [0m [90m 301 |[39m       )[33m;[39m
     [90m 302 |[39m       
    [31m[1m>[22m[39m[90m 303 |[39m       expect(result[33m.[39msuccess)[33m.[39mtoBe([36mtrue[39m)[33m;[39m
     [90m     |[39m                              [31m[1m^[22m[39m
     [90m 304 |[39m       expect(result[33m.[39mdata)[33m.[39mtoBeDefined()[33m;[39m
     [90m 305 |[39m     })[33m;[39m
     [90m 306 |[39m[0m

      at Object.<anonymous> (logging/logging.integration.spec.ts:303:30)

  ● Logging Integration › Log Analytics Integration › should detect anomalous patterns through controller

    expect(received).toBe(expected) // Object.is equality

    Expected: true
    Received: false

    [0m [90m 324 |[39m       )[33m;[39m
     [90m 325 |[39m       
    [31m[1m>[22m[39m[90m 326 |[39m       expect(result[33m.[39msuccess)[33m.[39mtoBe([36mtrue[39m)[33m;[39m
     [90m     |[39m                              [31m[1m^[22m[39m
     [90m 327 |[39m       expect(result[33m.[39mdata)[33m.[39mtoBeDefined()[33m;[39m
     [90m 328 |[39m     })[33m;[39m
     [90m 329 |[39m[0m

      at Object.<anonymous> (logging/logging.integration.spec.ts:326:30)

  ● Logging Integration › Log Analytics Integration › should get popular pages through controller

    expect(received).toBe(expected) // Object.is equality

    Expected: true
    Received: false

    [0m [90m 350 |[39m       )[33m;[39m
     [90m 351 |[39m       
    [31m[1m>[22m[39m[90m 352 |[39m       expect(result[33m.[39msuccess)[33m.[39mtoBe([36mtrue[39m)[33m;[39m
     [90m     |[39m                              [31m[1m^[22m[39m
     [90m 353 |[39m       expect(result[33m.[39mdata)[33m.[39mtoBeDefined()[33m;[39m
     [90m 354 |[39m       expect([33mArray[39m[33m.[39misArray(result[33m.[39mdata))[33m.[39mtoBe([36mtrue[39m)[33m;[39m
     [90m 355 |[39m     })[33m;[39m[0m

      at Object.<anonymous> (logging/logging.integration.spec.ts:352:30)

  ● Logging Integration › Log Analytics Integration › should get conversion funnel through controller

    expect(received).toBe(expected) // Object.is equality

    Expected: true
    Received: false

    [0m [90m 378 |[39m       )[33m;[39m
     [90m 379 |[39m       
    [31m[1m>[22m[39m[90m 380 |[39m       expect(result[33m.[39msuccess)[33m.[39mtoBe([36mtrue[39m)[33m;[39m
     [90m     |[39m                              [31m[1m^[22m[39m
     [90m 381 |[39m       expect(result[33m.[39mdata)[33m.[39mtoBeDefined()[33m;[39m
     [90m 382 |[39m       expect([33mArray[39m[33m.[39misArray(result[33m.[39mdata))[33m.[39mtoBe([36mtrue[39m)[33m;[39m
     [90m 383 |[39m     })[33m;[39m[0m

      at Object.<anonymous> (logging/logging.integration.spec.ts:380:30)

[31m[Nest] 14512  - [39m2025/10/09 15:44:17 [31m  ERROR[39m [38;5;3m[PaymentService] [39m[31m创建支付失败: ORDER_123[39m
Error: Database error
    at Object.<anonymous> (D:\onlinestore\backend\src\payment\payment.service.spec.ts:224:69)
    at Promise.finally.completed (D:\onlinestore\backend\node_modules\jest-circus\build\jestAdapterInit.js:1557:28)
    at new Promise (<anonymous>)
    at callAsyncCircusFn (D:\onlinestore\backend\node_modules\jest-circus\build\jestAdapterInit.js:1497:10)
    at _callCircusTest (D:\onlinestore\backend\node_modules\jest-circus\build\jestAdapterInit.js:1007:40)
    at _runTest (D:\onlinestore\backend\node_modules\jest-circus\build\jestAdapterInit.js:947:3)
    at D:\onlinestore\backend\node_modules\jest-circus\build\jestAdapterInit.js:849:7
    at _runTestsForDescribeBlock (D:\onlinestore\backend\node_modules\jest-circus\build\jestAdapterInit.js:862:11)
    at _runTestsForDescribeBlock (D:\onlinestore\backend\node_modules\jest-circus\build\jestAdapterInit.js:857:11)
    at _runTestsForDescribeBlock (D:\onlinestore\backend\node_modules\jest-circus\build\jestAdapterInit.js:857:11)
    at run (D:\onlinestore\backend\node_modules\jest-circus\build\jestAdapterInit.js:761:3)
    at runAndTransformResultsToJestFormat (D:\onlinestore\backend\node_modules\jest-circus\build\jestAdapterInit.js:1918:21)
    at jestAdapter (D:\onlinestore\backend\node_modules\jest-circus\build\runner.js:101:19)
    at runTestInternal (D:\onlinestore\backend\node_modules\jest-runner\build\index.js:275:16)
    at runTest (D:\onlinestore\backend\node_modules\jest-runner\build\index.js:343:7)
[31m[Nest] 14512  - [39m2025/10/09 15:44:17 [31m  ERROR[39m [38;5;3m[PaymentService] [39m[31m创建支付失败: ORDER_123[39m
BadRequestException: 不支持的支付方式: invalid-method
    at PaymentService.getPaymentStrategy (D:\onlinestore\backend\src\payment\payment.service.ts:297:13)
    at PaymentService.createPayment (D:\onlinestore\backend\src\payment\payment.service.ts:94:29)
    at Object.<anonymous> (D:\onlinestore\backend\src\payment\payment.service.spec.ts:253:7)
[31m[Nest] 14512  - [39m2025/10/09 15:44:17 [31m  ERROR[39m [38;5;3m[PaymentService] [39m[31m创建支付失败: ORDER_123[39m
BadRequestException: 不支持的支付方式: invalid_method
    at PaymentService.getPaymentStrategy (D:\onlinestore\backend\src\payment\payment.service.ts:297:13)
    at PaymentService.createPayment (D:\onlinestore\backend\src\payment\payment.service.ts:94:29)
    at Object.<anonymous> (D:\onlinestore\backend\src\payment\payment.service.spec.ts:271:7)
FAIL src/payment/payment.service.spec.ts
  PaymentService
    基础功能测试
      √ should be defined (15 ms)
      √ should get payment status successfully (11 ms)
      × should throw error when payment not found (63 ms)
    支付创建测试
      √ should create payment successfully (20 ms)
      √ should rollback transaction on error (15 ms)
      × should validate payment amount (19 ms)
      × should validate payment method (27 ms)
      × should handle strategy creation failure (17 ms)
    支付回调处理测试
      √ should handle successful payment callback (10 ms)
      √ should handle callback for non-existent payment (15 ms)
    支付查询测试
      √ should query payment successfully (10 ms)
    退款功能测试
      √ should create refund successfully (11 ms)
      × should reject refund for unpaid payment (19 ms)
      × should reject refund amount exceeding payment amount (15 ms)
    批量查询测试
      √ should batch get payment status (11 ms)
      × should reject batch query with too many IDs (21 ms)
    订单支付记录查询测试
      √ should get order payments (14 ms)
    错误处理测试
      × should handle database connection errors (13 ms)
      × should handle strategy not found error (13 ms)

  ● PaymentService › 基础功能测试 › should throw error when payment not found

    expect(received).rejects.toThrow(expected)

    Expected message: "Bad Request"
    Received message: "支付记录不存在"

        [0m [90m 130 |[39m
         [90m 131 |[39m     [36mif[39m ([33m![39mpayment) {
        [31m[1m>[22m[39m[90m 132 |[39m       [36mthrow[39m [36mnew[39m [33mBadRequestException[39m([32m'支付记录不存在'[39m)[33m;[39m
         [90m     |[39m             [31m[1m^[22m[39m
         [90m 133 |[39m     }
         [90m 134 |[39m
         [90m 135 |[39m     [90m// 如果支付状态为处理中，尝试主动查询第三方状态[39m[0m

      at PaymentService.getPaymentStatus (payment/payment.service.ts:132:13)
      at Object.<anonymous> (payment/payment.service.spec.ts:156:7)
      at Object.toThrow (../node_modules/expect/build/index.js:2155:20)
      at Object.<anonymous> (payment/payment.service.spec.ts:156:70)

  ● PaymentService › 支付创建测试 › should validate payment amount

    expect(received).rejects.toThrow(expected)

    Expected message: "Bad Request"
    Received message: "支付金额必须大于0"

        [0m [90m 252 |[39m     }
         [90m 253 |[39m     [36mif[39m ([33m![39mdto[33m.[39mamount [33m||[39m dto[33m.[39mamount [33m<=[39m [35m0[39m) {
        [31m[1m>[22m[39m[90m 254 |[39m       [36mthrow[39m [36mnew[39m [33mBadRequestException[39m([32m'支付金额必须大于0'[39m)[33m;[39m
         [90m     |[39m             [31m[1m^[22m[39m
         [90m 255 |[39m     }
         [90m 256 |[39m     [36mif[39m ([33m![39mdto[33m.[39mmethod) {
         [90m 257 |[39m       [36mthrow[39m [36mnew[39m [33mBadRequestException[39m([32m'支付方式不能为空'[39m)[33m;[39m[0m

      at PaymentService.validateCreatePaymentDto (payment/payment.service.ts:254:13)
      at PaymentService.createPayment (payment/payment.service.ts:73:10)
      at Object.<anonymous> (payment/payment.service.spec.ts:244:28)
      at Object.toThrow (../node_modules/expect/build/index.js:2155:20)
      at Object.<anonymous> (payment/payment.service.spec.ts:244:69)

  ● PaymentService › 支付创建测试 › should validate payment method

    expect(received).rejects.toThrow(expected)

    Expected message: "Bad Request"
    Received message: "不支持的支付方式: invalid-method"

        [0m [90m 295 |[39m     [36mconst[39m strategy [33m=[39m [36mthis[39m[33m.[39mpaymentStrategies[33m.[39m[36mget[39m(method[33m.[39mtoString())[33m;[39m
         [90m 296 |[39m     [36mif[39m ([33m![39mstrategy) {
        [31m[1m>[22m[39m[90m 297 |[39m       [36mthrow[39m [36mnew[39m [33mBadRequestException[39m([32m`不支持的支付方式: ${method}`[39m)[33m;[39m
         [90m     |[39m             [31m[1m^[22m[39m
         [90m 298 |[39m     }
         [90m 299 |[39m     [36mreturn[39m strategy[33m;[39m
         [90m 300 |[39m   }[0m

      at PaymentService.getPaymentStrategy (payment/payment.service.ts:297:13)
      at PaymentService.createPayment (payment/payment.service.ts:94:29)
      at Object.<anonymous> (payment/payment.service.spec.ts:253:7)
      at Object.toThrow (../node_modules/expect/build/index.js:2155:20)
      at Object.<anonymous> (payment/payment.service.spec.ts:253:69)

  ● PaymentService › 支付创建测试 › should handle strategy creation failure

    expect(received).rejects.toThrow(expected)

    Expected message: "Bad Request"
    Received message: "不支持的支付方式: invalid_method"

        [0m [90m 295 |[39m     [36mconst[39m strategy [33m=[39m [36mthis[39m[33m.[39mpaymentStrategies[33m.[39m[36mget[39m(method[33m.[39mtoString())[33m;[39m
         [90m 296 |[39m     [36mif[39m ([33m![39mstrategy) {
        [31m[1m>[22m[39m[90m 297 |[39m       [36mthrow[39m [36mnew[39m [33mBadRequestException[39m([32m`不支持的支付方式: ${method}`[39m)[33m;[39m
         [90m     |[39m             [31m[1m^[22m[39m
         [90m 298 |[39m     }
         [90m 299 |[39m     [36mreturn[39m strategy[33m;[39m
         [90m 300 |[39m   }[0m

      at PaymentService.getPaymentStrategy (payment/payment.service.ts:297:13)
      at PaymentService.createPayment (payment/payment.service.ts:94:29)
      at Object.<anonymous> (payment/payment.service.spec.ts:271:7)
      at Object.toThrow (../node_modules/expect/build/index.js:2155:20)
      at Object.<anonymous> (payment/payment.service.spec.ts:271:69)

  ● PaymentService › 退款功能测试 › should reject refund for unpaid payment

    expect(received).rejects.toThrow(expected)

    Expected message: "Bad Request"
    Received message: "只有成功的支付才能退款"

        [0m [90m 417 |[39m   [36mprivate[39m validateRefundEligibility(payment[33m:[39m [33mPayment[39m[33m,[39m amount[33m:[39m number)[33m:[39m [36mvoid[39m {
         [90m 418 |[39m     [36mif[39m (payment[33m.[39mstatus [33m!==[39m [33mPaymentStatus[39m[33m.[39m[33mSUCCESS[39m) {
        [31m[1m>[22m[39m[90m 419 |[39m       [36mthrow[39m [36mnew[39m [33mBadRequestException[39m([32m'只有成功的支付才能退款'[39m)[33m;[39m
         [90m     |[39m             [31m[1m^[22m[39m
         [90m 420 |[39m     }
         [90m 421 |[39m
         [90m 422 |[39m     [36mconst[39m totalRefunded [33m=[39m payment[33m.[39mrefundedAmount [33m||[39m [35m0[39m[33m;[39m[0m

      at PaymentService.validateRefundEligibility (payment/payment.service.ts:419:13)
      at PaymentService.refundPayment (payment/payment.service.ts:185:10)
      at Object.<anonymous> (payment/payment.service.spec.ts:484:7)
      at Object.toThrow (../node_modules/expect/build/index.js:2155:20)
      at Object.<anonymous> (payment/payment.service.spec.ts:484:69)

  ● PaymentService › 退款功能测试 › should reject refund amount exceeding payment amount

    expect(received).rejects.toThrow(expected)

    Expected message: "Bad Request"
    Received message: "退款金额不能超过可退款金额"

        [0m [90m 422 |[39m     [36mconst[39m totalRefunded [33m=[39m payment[33m.[39mrefundedAmount [33m||[39m [35m0[39m[33m;[39m
         [90m 423 |[39m     [36mif[39m (amount [33m>[39m payment[33m.[39mamount [33m-[39m totalRefunded) {
        [31m[1m>[22m[39m[90m 424 |[39m       [36mthrow[39m [36mnew[39m [33mBadRequestException[39m([32m'退款金额不能超过可退款金额'[39m)[33m;[39m
         [90m     |[39m             [31m[1m^[22m[39m
         [90m 425 |[39m     }
         [90m 426 |[39m   }
         [90m 427 |[39m[0m

      at PaymentService.validateRefundEligibility (payment/payment.service.ts:424:13)
      at PaymentService.refundPayment (payment/payment.service.ts:185:10)
      at Object.<anonymous> (payment/payment.service.spec.ts:514:7)
      at Object.toThrow (../node_modules/expect/build/index.js:2155:20)
      at Object.<anonymous> (payment/payment.service.spec.ts:514:70)

  ● PaymentService › 批量查询测试 › should reject batch query with too many IDs

    expect(received).rejects.toThrow(expected)

    Expected message: "Bad Request"
    Received message: "批量查询数量不能超过100个"

        [0m [90m 216 |[39m
         [90m 217 |[39m     [36mif[39m (paymentIds[33m.[39mlength [33m>[39m [35m100[39m) {
        [31m[1m>[22m[39m[90m 218 |[39m       [36mthrow[39m [36mnew[39m [33mBadRequestException[39m([32m'批量查询数量不能超过100个'[39m)[33m;[39m
         [90m     |[39m             [31m[1m^[22m[39m
         [90m 219 |[39m     }
         [90m 220 |[39m
         [90m 221 |[39m     [36mconst[39m payments [33m=[39m [36mawait[39m [36mthis[39m[33m.[39mpaymentRepository[33m.[39mfind({[0m

      at PaymentService.batchGetPaymentStatus (payment/payment.service.ts:218:13)
      at Object.<anonymous> (payment/payment.service.spec.ts:557:28)
      at Object.toThrow (../node_modules/expect/build/index.js:2155:20)
      at Object.<anonymous> (payment/payment.service.spec.ts:557:71)

  ● PaymentService › 错误处理测试 › should handle database connection errors

    expect(received).rejects.toThrow(expected)

    Expected message: ""
    Received message: "Database connection failed"

        [0m [90m 598 |[39m   describe([32m'错误处理测试'[39m[33m,[39m () [33m=>[39m {
         [90m 599 |[39m     it([32m'should handle database connection errors'[39m[33m,[39m [36masync[39m () [33m=>[39m {
        [31m[1m>[22m[39m[90m 600 |[39m       mockPaymentRepository[33m.[39mfindOne[33m.[39mmockRejectedValue([36mnew[39m [33mError[39m([32m'Database connection failed'[39m))[33m;[39m
         [90m     |[39m                                                       [31m[1m^[22m[39m
         [90m 601 |[39m
         [90m 602 |[39m       [36mawait[39m expect(service[33m.[39mgetPaymentStatus([32m'PAY_123'[39m))[33m.[39mrejects[33m.[39mtoThrow([36mnew[39m [33mError[39m())[33m;[39m
         [90m 603 |[39m     })[33m;[39m[0m

      at Object.<anonymous> (payment/payment.service.spec.ts:600:55)
      at Object.toThrow (../node_modules/expect/build/index.js:2155:20)
      at Object.<anonymous> (payment/payment.service.spec.ts:602:65)

  ● PaymentService › 错误处理测试 › should handle strategy not found error

    expect(received).rejects.toThrow(expected)

    Expected message: ""
    Received message: "Cannot read properties of undefined (reading 'connect')"

        [0m [90m 614 |[39m       [90m// 模拟数据库连接错误[39m
         [90m 615 |[39m       mockDataSource[33m.[39mcreateQueryRunner[33m.[39mmockImplementation(() [33m=>[39m {
        [31m[1m>[22m[39m[90m 616 |[39m         [36mthrow[39m [36mnew[39m [33mError[39m([32m"Cannot read properties of undefined (reading 'connect')"[39m)[33m;[39m
         [90m     |[39m               [31m[1m^[22m[39m
         [90m 617 |[39m       })[33m;[39m
         [90m 618 |[39m
         [90m 619 |[39m       [36mawait[39m expect(service[33m.[39mcreatePayment(createPaymentDto))[33m.[39mrejects[33m.[39mtoThrow([36mnew[39m [33mError[39m())[33m;[39m[0m

      at Object.<anonymous> (payment/payment.service.spec.ts:616:15)
      at PaymentService.createPayment (payment/payment.service.ts:88:41)
      at Object.<anonymous> (payment/payment.service.spec.ts:619:28)
      at Object.toThrow (../node_modules/expect/build/index.js:2155:20)
      at Object.<anonymous> (payment/payment.service.spec.ts:619:69)

FAIL src/users/users.controller.spec.ts
  UsersController
    POST /users
      √ should create a new user successfully (13 ms)
      √ should throw error for duplicate email (24 ms)
      √ should handle database connection errors (6 ms)
      √ should handle concurrent user creation (6 ms)
    GET /users
      √ should return array of users (6 ms)
      √ should handle pagination (7 ms)
      √ should handle search functionality (6 ms)
      √ should return empty array when no users found (7 ms)
      √ should handle database connection errors (25 ms)
    GET /users/:id
      √ should return user by id (6 ms)
      √ should throw error for non-existent user (6 ms)
      √ should handle database connection errors (6 ms)
      √ should return inactive users (5 ms)
    PUT /users/:id
      √ should update user successfully (6 ms)
      √ should throw error for non-existent user (6 ms)
      √ should handle database connection errors during update (7 ms)
    DELETE /users/:id
      × should delete user successfully (7 ms)
      × should throw error for non-existent user (7 ms)
    GET /users/stats/overview
      √ should return user statistics (8 ms)
    Edge Cases and Error Handling
      √ should handle concurrent user updates (7 ms)
      √ should handle rate limiting on user management endpoints (7 ms)
      √ should handle timeout scenarios (7 ms)
      √ should handle user service unavailability (15 ms)

  ● UsersController › DELETE /users/:id › should delete user successfully

    expect(received).rejects.toThrow()

    Received promise resolved instead of rejected
    Resolved to value: undefined

    [0m [90m 440 |[39m     it([32m'should delete user successfully'[39m[33m,[39m [36masync[39m () [33m=>[39m {
     [90m 441 |[39m       [90m// Since deleteUser is not implemented, we expect it to throw an error[39m
    [31m[1m>[22m[39m[90m 442 |[39m       [36mawait[39m expect(controller[33m.[39mdeleteUser([32m'1'[39m))[33m.[39mrejects[33m.[39mtoThrow([32m'Not implemented'[39m)[33m;[39m
     [90m     |[39m             [31m[1m^[22m[39m
     [90m 443 |[39m     })[33m;[39m
     [90m 444 |[39m
     [90m 445 |[39m     it([32m'should throw error for non-existent user'[39m[33m,[39m [36masync[39m () [33m=>[39m {[0m

      at expect (../node_modules/expect/build/index.js:2116:15)
      at Object.<anonymous> (users/users.controller.spec.ts:442:13)

  ● UsersController › DELETE /users/:id › should throw error for non-existent user

    expect(received).rejects.toThrow()

    Received promise resolved instead of rejected
    Resolved to value: undefined

    [0m [90m 445 |[39m     it([32m'should throw error for non-existent user'[39m[33m,[39m [36masync[39m () [33m=>[39m {
     [90m 446 |[39m       [90m// Since deleteUser is not implemented, we expect it to throw an error[39m
    [31m[1m>[22m[39m[90m 447 |[39m       [36mawait[39m expect(controller[33m.[39mdeleteUser([32m'999'[39m))[33m.[39mrejects[33m.[39mtoThrow([32m'Not implemented'[39m)[33m;[39m
     [90m     |[39m             [31m[1m^[22m[39m
     [90m 448 |[39m     })[33m;[39m
     [90m 449 |[39m   })[33m;[39m
     [90m 450 |[39m[0m

      at expect (../node_modules/expect/build/index.js:2116:15)
      at Object.<anonymous> (users/users.controller.spec.ts:447:13)

FAIL src/users/users.service.spec.ts
  UsersService
    create
      √ should successfully create a new user (21 ms)
      × should throw ConflictException if email already exists (40 ms)
    findById
      √ should return a user by id (8 ms)
      √ should return null if user not found (7 ms)
    findOne
      √ should return a user by id (6 ms)
      × should throw NotFoundException if user not found (32 ms)
    findByEmail
      √ should return a user by email (10 ms)
      √ should return null if user not found (6 ms)
    findByUsername
      √ should return a user by username (7 ms)
      √ should return null if user not found (6 ms)
    findAll
      √ should return paginated users (10 ms)
      √ should return all users without search (10 ms)
    update
      √ should successfully update a user (8 ms)
      × should throw NotFoundException if user not found (10 ms)
      √ should hash password if provided (8 ms)
    delete
      √ should successfully delete a user (36 ms)
      × should throw NotFoundException if user not found (9 ms)
    remove
      √ should successfully remove a user (5 ms)
      × should throw NotFoundException if user not found (8 ms)
    updateLoginInfo
      √ should successfully update user login info (6 ms)
    isEmailExists
      √ should return true if email exists (5 ms)
      √ should return false if email does not exist (7 ms)
    isUsernameExists
      √ should return true if username exists (5 ms)
      √ should return false if username does not exist (5 ms)
    getStatistics
      √ should return user statistics (6 ms)
    getUserStats
      √ should return user stats (5 ms)
    validateUser
      √ should return user if validation succeeds (4 ms)
      √ should return null if user not found (4 ms)
      √ should return null if password is incorrect (5 ms)

  ● UsersService › create › should throw ConflictException if email already exists

    expect(received).rejects.toThrow(expected)

    Expected message: "Conflict"
    Received message: "邮箱已被注册"

        [0m [90m 32 |[39m
         [90m 33 |[39m     [36mif[39m (existingUser) {
        [31m[1m>[22m[39m[90m 34 |[39m       [36mthrow[39m [36mnew[39m [33mConflictException[39m([32m'邮箱已被注册'[39m)[33m;[39m
         [90m    |[39m             [31m[1m^[22m[39m
         [90m 35 |[39m     }
         [90m 36 |[39m
         [90m 37 |[39m     [90m// 加密密码[39m[0m

      at UsersService.create (users/users.service.ts:34:13)
      at Object.<anonymous> (users/users.service.spec.ts:103:7)
      at Object.toThrow (../node_modules/expect/build/index.js:2155:20)
      at Object.<anonymous> (users/users.service.spec.ts:103:59)

  ● UsersService › findOne › should throw NotFoundException if user not found

    expect(received).rejects.toThrow(expected)

    Expected message: "Not Found"
    Received message: "用户不存在"

        [0m [90m 63 |[39m     [36mconst[39m user [33m=[39m [36mawait[39m [36mthis[39m[33m.[39mfindById(id)[33m;[39m
         [90m 64 |[39m     [36mif[39m ([33m![39muser) {
        [31m[1m>[22m[39m[90m 65 |[39m       [36mthrow[39m [36mnew[39m [33mNotFoundException[39m([32m'用户不存在'[39m)[33m;[39m
         [90m    |[39m             [31m[1m^[22m[39m
         [90m 66 |[39m     }
         [90m 67 |[39m     [36mreturn[39m user[33m;[39m
         [90m 68 |[39m   }[0m

      at UsersService.findOne (users/users.service.ts:65:13)
      at Object.<anonymous> (users/users.service.spec.ts:143:7)
      at Object.toThrow (../node_modules/expect/build/index.js:2155:20)
      at Object.<anonymous> (users/users.service.spec.ts:143:50)

  ● UsersService › update › should throw NotFoundException if user not found

    expect(received).rejects.toThrow(expected)

    Expected message: "Not Found"
    Received message: "用户不存在"

        [0m [90m 140 |[39m     [36mconst[39m user [33m=[39m [36mawait[39m [36mthis[39m[33m.[39mfindById(id)[33m;[39m
         [90m 141 |[39m     [36mif[39m ([33m![39muser) {
        [31m[1m>[22m[39m[90m 142 |[39m       [36mthrow[39m [36mnew[39m [33mNotFoundException[39m([32m'用户不存在'[39m)[33m;[39m
         [90m     |[39m             [31m[1m^[22m[39m
         [90m 143 |[39m     }
         [90m 144 |[39m
         [90m 145 |[39m     [90m// 如果更新密码，需要加密[39m[0m

      at UsersService.update (users/users.service.ts:142:13)
      at Object.<anonymous> (users/users.service.spec.ts:283:7)
      at Object.toThrow (../node_modules/expect/build/index.js:2155:20)
      at Object.<anonymous> (users/users.service.spec.ts:283:64)

  ● UsersService › delete › should throw NotFoundException if user not found

    expect(received).rejects.toThrow(expected)

    Expected message: "Not Found"
    Received message: "用户不存在"

        [0m [90m 158 |[39m     [36mconst[39m user [33m=[39m [36mawait[39m [36mthis[39m[33m.[39mfindById(id)[33m;[39m
         [90m 159 |[39m     [36mif[39m ([33m![39muser) {
        [31m[1m>[22m[39m[90m 160 |[39m       [36mthrow[39m [36mnew[39m [33mNotFoundException[39m([32m'用户不存在'[39m)[33m;[39m
         [90m     |[39m             [31m[1m^[22m[39m
         [90m 161 |[39m     }
         [90m 162 |[39m
         [90m 163 |[39m     [36mawait[39m [36mthis[39m[33m.[39muserRepository[33m.[39m[36mdelete[39m(id)[33m;[39m[0m

      at UsersService.delete (users/users.service.ts:160:13)
      at Object.<anonymous> (users/users.service.spec.ts:318:7)
      at Object.toThrow (../node_modules/expect/build/index.js:2155:20)
      at Object.<anonymous> (users/users.service.spec.ts:318:49)

  ● UsersService › remove › should throw NotFoundException if user not found

    expect(received).rejects.toThrow(expected)

    Expected message: "Not Found"
    Received message: "用户不存在"

        [0m [90m 63 |[39m     [36mconst[39m user [33m=[39m [36mawait[39m [36mthis[39m[33m.[39mfindById(id)[33m;[39m
         [90m 64 |[39m     [36mif[39m ([33m![39muser) {
        [31m[1m>[22m[39m[90m 65 |[39m       [36mthrow[39m [36mnew[39m [33mNotFoundException[39m([32m'用户不存在'[39m)[33m;[39m
         [90m    |[39m             [31m[1m^[22m[39m
         [90m 66 |[39m     }
         [90m 67 |[39m     [36mreturn[39m user[33m;[39m
         [90m 68 |[39m   }[0m

      at UsersService.findOne (users/users.service.ts:65:13)
      at UsersService.remove (users/users.service.ts:170:18)
      at Object.<anonymous> (users/users.service.spec.ts:335:7)
      at Object.toThrow (../node_modules/expect/build/index.js:2155:20)
      at Object.<anonymous> (users/users.service.spec.ts:335:49)

[31m[Nest] 14512  - [39m2025/10/09 15:44:20 [31m  ERROR[39m [38;5;3m[RedisHealthService] [39m[31mFailed to get Redis info[39m
[31m[Nest] 14512  - [39m2025/10/09 15:44:20 [31m  ERROR[39m [38;5;3m[RedisHealthService] [39mError: Info command failed
    at Object.<anonymous> [90m(D:\onlinestore\backend\[39msrc\redis\redis-health.service.spec.ts:236:40[90m)[39m
    at Promise.finally.completed [90m(D:\onlinestore\backend\[39mnode_modules\[4mjest-circus[24m\build\jestAdapterInit.js:1557:28[90m)[39m
    at new Promise (<anonymous>)
    at callAsyncCircusFn [90m(D:\onlinestore\backend\[39mnode_modules\[4mjest-circus[24m\build\jestAdapterInit.js:1497:10[90m)[39m
    at _callCircusTest [90m(D:\onlinestore\backend\[39mnode_modules\[4mjest-circus[24m\build\jestAdapterInit.js:1007:40[90m)[39m
    at _runTest [90m(D:\onlinestore\backend\[39mnode_modules\[4mjest-circus[24m\build\jestAdapterInit.js:947:3[90m)[39m
    at [90mD:\onlinestore\backend\[39mnode_modules\[4mjest-circus[24m\build\jestAdapterInit.js:849:7
    at _runTestsForDescribeBlock [90m(D:\onlinestore\backend\[39mnode_modules\[4mjest-circus[24m\build\jestAdapterInit.js:862:11[90m)[39m
    at _runTestsForDescribeBlock [90m(D:\onlinestore\backend\[39mnode_modules\[4mjest-circus[24m\build\jestAdapterInit.js:857:11[90m)[39m
    at _runTestsForDescribeBlock [90m(D:\onlinestore\backend\[39mnode_modules\[4mjest-circus[24m\build\jestAdapterInit.js:857:11[90m)[39m
    at run [90m(D:\onlinestore\backend\[39mnode_modules\[4mjest-circus[24m\build\jestAdapterInit.js:761:3[90m)[39m
    at runAndTransformResultsToJestFormat [90m(D:\onlinestore\backend\[39mnode_modules\[4mjest-circus[24m\build\jestAdapterInit.js:1918:21[90m)[39m
    at jestAdapter [90m(D:\onlinestore\backend\[39mnode_modules\[4mjest-circus[24m\build\runner.js:101:19[90m)[39m
    at runTestInternal [90m(D:\onlinestore\backend\[39mnode_modules\[4mjest-runner[24m\build\index.js:275:16[90m)[39m
    at runTest [90m(D:\onlinestore\backend\[39mnode_modules\[4mjest-runner[24m\build\index.js:343:7[90m)[39m
[31m[Nest] 14512  - [39m2025/10/09 15:44:21 [31m  ERROR[39m [38;5;3m[RedisHealthService] [39m[31mCache operation test failed[39m
[31m[Nest] 14512  - [39m2025/10/09 15:44:21 [31m  ERROR[39m [38;5;3m[RedisHealthService] [39mError: Set failed
    at Object.<anonymous> [90m(D:\onlinestore\backend\[39msrc\redis\redis-health.service.spec.ts:291:39[90m)[39m
    at Promise.finally.completed [90m(D:\onlinestore\backend\[39mnode_modules\[4mjest-circus[24m\build\jestAdapterInit.js:1557:28[90m)[39m
    at new Promise (<anonymous>)
    at callAsyncCircusFn [90m(D:\onlinestore\backend\[39mnode_modules\[4mjest-circus[24m\build\jestAdapterInit.js:1497:10[90m)[39m
    at _callCircusTest [90m(D:\onlinestore\backend\[39mnode_modules\[4mjest-circus[24m\build\jestAdapterInit.js:1007:40[90m)[39m
    at _runTest [90m(D:\onlinestore\backend\[39mnode_modules\[4mjest-circus[24m\build\jestAdapterInit.js:947:3[90m)[39m
    at [90mD:\onlinestore\backend\[39mnode_modules\[4mjest-circus[24m\build\jestAdapterInit.js:849:7
    at _runTestsForDescribeBlock [90m(D:\onlinestore\backend\[39mnode_modules\[4mjest-circus[24m\build\jestAdapterInit.js:862:11[90m)[39m
    at _runTestsForDescribeBlock [90m(D:\onlinestore\backend\[39mnode_modules\[4mjest-circus[24m\build\jestAdapterInit.js:857:11[90m)[39m
    at _runTestsForDescribeBlock [90m(D:\onlinestore\backend\[39mnode_modules\[4mjest-circus[24m\build\jestAdapterInit.js:857:11[90m)[39m
    at run [90m(D:\onlinestore\backend\[39mnode_modules\[4mjest-circus[24m\build\jestAdapterInit.js:761:3[90m)[39m
    at runAndTransformResultsToJestFormat [90m(D:\onlinestore\backend\[39mnode_modules\[4mjest-circus[24m\build\jestAdapterInit.js:1918:21[90m)[39m
    at jestAdapter [90m(D:\onlinestore\backend\[39mnode_modules\[4mjest-circus[24m\build\runner.js:101:19[90m)[39m
    at runTestInternal [90m(D:\onlinestore\backend\[39mnode_modules\[4mjest-runner[24m\build\index.js:275:16[90m)[39m
    at runTest [90m(D:\onlinestore\backend\[39mnode_modules\[4mjest-runner[24m\build\index.js:343:7[90m)[39m
[31m[Nest] 14512  - [39m2025/10/09 15:44:21 [31m  ERROR[39m [38;5;3m[RedisHealthService] [39m[31mCache operation test failed[39m
[31m[Nest] 14512  - [39m2025/10/09 15:44:21 [31m  ERROR[39m [38;5;3m[RedisHealthService] [39mError: Get failed
    at Object.<anonymous> [90m(D:\onlinestore\backend\[39msrc\redis\redis-health.service.spec.ts:300:39[90m)[39m
    at Promise.finally.completed [90m(D:\onlinestore\backend\[39mnode_modules\[4mjest-circus[24m\build\jestAdapterInit.js:1557:28[90m)[39m
    at new Promise (<anonymous>)
    at callAsyncCircusFn [90m(D:\onlinestore\backend\[39mnode_modules\[4mjest-circus[24m\build\jestAdapterInit.js:1497:10[90m)[39m
    at _callCircusTest [90m(D:\onlinestore\backend\[39mnode_modules\[4mjest-circus[24m\build\jestAdapterInit.js:1007:40[90m)[39m
    at _runTest [90m(D:\onlinestore\backend\[39mnode_modules\[4mjest-circus[24m\build\jestAdapterInit.js:947:3[90m)[39m
    at [90mD:\onlinestore\backend\[39mnode_modules\[4mjest-circus[24m\build\jestAdapterInit.js:849:7
    at _runTestsForDescribeBlock [90m(D:\onlinestore\backend\[39mnode_modules\[4mjest-circus[24m\build\jestAdapterInit.js:862:11[90m)[39m
    at _runTestsForDescribeBlock [90m(D:\onlinestore\backend\[39mnode_modules\[4mjest-circus[24m\build\jestAdapterInit.js:857:11[90m)[39m
    at _runTestsForDescribeBlock [90m(D:\onlinestore\backend\[39mnode_modules\[4mjest-circus[24m\build\jestAdapterInit.js:857:11[90m)[39m
    at run [90m(D:\onlinestore\backend\[39mnode_modules\[4mjest-circus[24m\build\jestAdapterInit.js:761:3[90m)[39m
    at runAndTransformResultsToJestFormat [90m(D:\onlinestore\backend\[39mnode_modules\[4mjest-circus[24m\build\jestAdapterInit.js:1918:21[90m)[39m
    at jestAdapter [90m(D:\onlinestore\backend\[39mnode_modules\[4mjest-circus[24m\build\runner.js:101:19[90m)[39m
    at runTestInternal [90m(D:\onlinestore\backend\[39mnode_modules\[4mjest-runner[24m\build\index.js:275:16[90m)[39m
    at runTest [90m(D:\onlinestore\backend\[39mnode_modules\[4mjest-runner[24m\build\index.js:343:7[90m)[39m
[31m[Nest] 14512  - [39m2025/10/09 15:44:21 [31m  ERROR[39m [38;5;3m[RedisHealthService] [39m[31mFailed to get Redis info[39m
[31m[Nest] 14512  - [39m2025/10/09 15:44:21 [31m  ERROR[39m [38;5;3m[RedisHealthService] [39mError: Info failed
    at Object.<anonymous> [90m(D:\onlinestore\backend\[39msrc\redis\redis-health.service.spec.ts:486:40[90m)[39m
    at Promise.finally.completed [90m(D:\onlinestore\backend\[39mnode_modules\[4mjest-circus[24m\build\jestAdapterInit.js:1557:28[90m)[39m
    at new Promise (<anonymous>)
    at callAsyncCircusFn [90m(D:\onlinestore\backend\[39mnode_modules\[4mjest-circus[24m\build\jestAdapterInit.js:1497:10[90m)[39m
    at _callCircusTest [90m(D:\onlinestore\backend\[39mnode_modules\[4mjest-circus[24m\build\jestAdapterInit.js:1007:40[90m)[39m
    at _runTest [90m(D:\onlinestore\backend\[39mnode_modules\[4mjest-circus[24m\build\jestAdapterInit.js:947:3[90m)[39m
    at [90mD:\onlinestore\backend\[39mnode_modules\[4mjest-circus[24m\build\jestAdapterInit.js:849:7
    at _runTestsForDescribeBlock [90m(D:\onlinestore\backend\[39mnode_modules\[4mjest-circus[24m\build\jestAdapterInit.js:862:11[90m)[39m
    at _runTestsForDescribeBlock [90m(D:\onlinestore\backend\[39mnode_modules\[4mjest-circus[24m\build\jestAdapterInit.js:857:11[90m)[39m
    at _runTestsForDescribeBlock [90m(D:\onlinestore\backend\[39mnode_modules\[4mjest-circus[24m\build\jestAdapterInit.js:857:11[90m)[39m
    at run [90m(D:\onlinestore\backend\[39mnode_modules\[4mjest-circus[24m\build\jestAdapterInit.js:761:3[90m)[39m
    at runAndTransformResultsToJestFormat [90m(D:\onlinestore\backend\[39mnode_modules\[4mjest-circus[24m\build\jestAdapterInit.js:1918:21[90m)[39m
    at jestAdapter [90m(D:\onlinestore\backend\[39mnode_modules\[4mjest-circus[24m\build\runner.js:101:19[90m)[39m
    at runTestInternal [90m(D:\onlinestore\backend\[39mnode_modules\[4mjest-runner[24m\build\index.js:275:16[90m)[39m
    at runTest [90m(D:\onlinestore\backend\[39mnode_modules\[4mjest-runner[24m\build\index.js:343:7[90m)[39m
[31m[Nest] 14512  - [39m2025/10/09 15:44:21 [31m  ERROR[39m [38;5;3m[RedisHealthService] [39m[31mCache operation test failed[39m
[31m[Nest] 14512  - [39m2025/10/09 15:44:21 [31m  ERROR[39m [38;5;3m[RedisHealthService] [39mError: Set failed
    at Object.<anonymous> [90m(D:\onlinestore\backend\[39msrc\redis\redis-health.service.spec.ts:487:39[90m)[39m
    at Promise.finally.completed [90m(D:\onlinestore\backend\[39mnode_modules\[4mjest-circus[24m\build\jestAdapterInit.js:1557:28[90m)[39m
    at new Promise (<anonymous>)
    at callAsyncCircusFn [90m(D:\onlinestore\backend\[39mnode_modules\[4mjest-circus[24m\build\jestAdapterInit.js:1497:10[90m)[39m
    at _callCircusTest [90m(D:\onlinestore\backend\[39mnode_modules\[4mjest-circus[24m\build\jestAdapterInit.js:1007:40[90m)[39m
    at _runTest [90m(D:\onlinestore\backend\[39mnode_modules\[4mjest-circus[24m\build\jestAdapterInit.js:947:3[90m)[39m
    at [90mD:\onlinestore\backend\[39mnode_modules\[4mjest-circus[24m\build\jestAdapterInit.js:849:7
    at _runTestsForDescribeBlock [90m(D:\onlinestore\backend\[39mnode_modules\[4mjest-circus[24m\build\jestAdapterInit.js:862:11[90m)[39m
    at _runTestsForDescribeBlock [90m(D:\onlinestore\backend\[39mnode_modules\[4mjest-circus[24m\build\jestAdapterInit.js:857:11[90m)[39m
    at _runTestsForDescribeBlock [90m(D:\onlinestore\backend\[39mnode_modules\[4mjest-circus[24m\build\jestAdapterInit.js:857:11[90m)[39m
    at run [90m(D:\onlinestore\backend\[39mnode_modules\[4mjest-circus[24m\build\jestAdapterInit.js:761:3[90m)[39m
    at runAndTransformResultsToJestFormat [90m(D:\onlinestore\backend\[39mnode_modules\[4mjest-circus[24m\build\jestAdapterInit.js:1918:21[90m)[39m
    at jestAdapter [90m(D:\onlinestore\backend\[39mnode_modules\[4mjest-circus[24m\build\runner.js:101:19[90m)[39m
    at runTestInternal [90m(D:\onlinestore\backend\[39mnode_modules\[4mjest-runner[24m\build\index.js:275:16[90m)[39m
    at runTest [90m(D:\onlinestore\backend\[39mnode_modules\[4mjest-runner[24m\build\index.js:343:7[90m)[39m
FAIL src/redis/redis-health.service.spec.ts
  RedisHealthService
    Service Initialization
      √ should be defined (5 ms)
      × should disable Redis client in development environment (5 ms)
      × should initialize Redis client in production environment (8 ms)
      √ should handle initialization errors gracefully (3 ms)
    Event Listeners Setup
      √ should set up all required event listeners when valid Redis client is provided (4 ms)
      √ should have correct number of event listeners (3 ms)
      √ should not set up event listeners when Redis client is undefined (3 ms)
      √ should not set up event listeners when Redis client has no on method (3 ms)
    Health Check
      √ should return healthy status when Redis is responding (8 ms)
      √ should return unhealthy status when Redis ping fails (3 ms)
      √ should return unhealthy status when Redis client is disabled (3 ms)
      √ should measure latency correctly (120 ms)
    Redis Info
      √ should return parsed Redis info when successful (4 ms)
      √ should return null when Redis client is disabled (3 ms)
      √ should return null when Redis info fails (5 ms)
      √ should handle incomplete Redis info gracefully (4 ms)
    Cache Operation Test
      √ should return true when cache operations work correctly (7 ms)
      √ should return false when cache set fails (4 ms)
      √ should return false when cache get fails (3 ms)
      √ should return false when retrieved value does not match (2 ms)
      √ should return false when Redis client is disabled (2 ms)
    Disconnect
      √ should quit Redis client when connected (2 ms)
      √ should not attempt to quit when Redis client is disabled (2 ms)
      √ should handle quit errors gracefully (3 ms)
    Get Client
      √ should return Redis client in production (2 ms)
      × should return undefined in development (3 ms)
      √ should return provided Redis client in test environment (2 ms)
    Retry Strategy
      √ should implement exponential backoff with maximum delay (3 ms)
    Reconnect on Error
      √ should reconnect on specific errors (3 ms)
    Integration Scenarios
      √ should handle complete health check workflow (3 ms)
      √ should handle failure scenarios gracefully (9 ms)

  ● RedisHealthService › Service Initialization › should disable Redis client in development environment

    expect(jest.fn()).not.toHaveBeenCalled()

    Expected number of calls: 0
    Received number of calls: 1

    1: {"commandTimeout": 2000, "connectTimeout": 3000, "db": undefined, "enableOfflineQueue": true, "host": undefined, "lazyConnect": false, "password": undefined, "port": undefined, "reconnectOnError": [Function reconnectOnError], "retryStrategy": [Function retryStrategy]}

    [0m [90m 68 |[39m       service [33m=[39m [36mnew[39m [33mRedisHealthService[39m()[33m;[39m
     [90m 69 |[39m
    [31m[1m>[22m[39m[90m 70 |[39m       expect([33mRedis[39m)[33m.[39mnot[33m.[39mtoHaveBeenCalled()[33m;[39m
     [90m    |[39m                         [31m[1m^[22m[39m
     [90m 71 |[39m       expect(service[33m.[39mgetClient())[33m.[39mtoBeUndefined()[33m;[39m
     [90m 72 |[39m     })[33m;[39m
     [90m 73 |[39m[0m

      at Object.<anonymous> (redis/redis-health.service.spec.ts:70:25)

  ● RedisHealthService › Service Initialization › should initialize Redis client in production environment

    expect(jest.fn()).toHaveBeenCalledWith(...expected)

    - Expected
    + Received

      Object {
        "commandTimeout": 2000,
        "connectTimeout": 3000,
    -   "db": 15,
    +   "db": undefined,
        "enableOfflineQueue": true,
    -   "host": "localhost",
    +   "host": undefined,
        "lazyConnect": false,
        "password": undefined,
    -   "port": 6379,
    -   "reconnectOnError": Any<Function>,
    -   "retryStrategy": Any<Function>,
    +   "port": undefined,
    +   "reconnectOnError": [Function reconnectOnError],
    +   "retryStrategy": [Function retryStrategy],
      },

    Number of calls: 1

    [0m [90m 76 |[39m       service [33m=[39m [36mnew[39m [33mRedisHealthService[39m()[33m;[39m
     [90m 77 |[39m
    [31m[1m>[22m[39m[90m 78 |[39m       expect([33mRedis[39m)[33m.[39mtoHaveBeenCalledWith({
     [90m    |[39m                     [31m[1m^[22m[39m
     [90m 79 |[39m         host[33m:[39m masterConfig[33m.[39mredis[33m.[39mhost[33m,[39m
     [90m 80 |[39m         port[33m:[39m masterConfig[33m.[39mredis[33m.[39mport[33m,[39m
     [90m 81 |[39m         password[33m:[39m masterConfig[33m.[39mredis[33m.[39mpassword[33m,[39m[0m

      at Object.<anonymous> (redis/redis-health.service.spec.ts:78:21)

  ● RedisHealthService › Get Client › should return undefined in development

    expect(received).toBeUndefined()

    Received: {}

    [0m [90m 378 |[39m
     [90m 379 |[39m       [90m// In development, getClient() returns undefined[39m
    [31m[1m>[22m[39m[90m 380 |[39m       expect(client)[33m.[39mtoBeUndefined()[33m;[39m
     [90m     |[39m                      [31m[1m^[22m[39m
     [90m 381 |[39m     })[33m;[39m
     [90m 382 |[39m
     [90m 383 |[39m     it([32m'should return provided Redis client in test environment'[39m[33m,[39m () [33m=>[39m {[0m

      at Object.<anonymous> (redis/redis-health.service.spec.ts:380:22)

FAIL src/monitoring/monitoring.controller.spec.ts
  MonitoringController
    √ should be defined (16 ms)
    healthCheck
      √ should return health status with 200 when status is ok (5 ms)
      √ should return health status with 200 when status is degraded (5 ms)
      √ should return health status with 503 when status is critical (5 ms)
    getMetrics
      √ should return current metrics (5 ms)
    getMetricsSummary
      √ should return metrics summary (5 ms)
    getMetricsByCategory
      √ should return metrics for http category (4 ms)
      √ should return metrics for database category (5 ms)
      √ should return metrics for cache category (5 ms)
      √ should return metrics for connections category (5 ms)
    getMetricsHistory
      √ should return metrics history for day period by default (11 ms)
      √ should return metrics history for hour period (5 ms)
      √ should return metrics history for week period (5 ms)
    generatePerformanceReport
      √ should generate performance report (5 ms)
    getApplicationStatus
      √ should return application status (5 ms)
    getSystemInfo
      √ should return system info (4 ms)
    getAuditLogs
      √ should return audit logs (4 ms)
    getSecurityEvents
      √ should return security events (4 ms)
    getPrometheusMetrics
      × should return Prometheus format metrics (4 ms)

  ● MonitoringController › getPrometheusMetrics › should return Prometheus format metrics

    TypeError: res.send is not a function

    [0m [90m 158 |[39m     
     [90m 159 |[39m     res[33m.[39m[36mset[39m([32m'Content-Type'[39m[33m,[39m [32m'text/plain'[39m)[33m;[39m
    [31m[1m>[22m[39m[90m 160 |[39m     res[33m.[39msend(prometheusMetrics)[33m;[39m
     [90m     |[39m         [31m[1m^[22m[39m
     [90m 161 |[39m   }
     [90m 162 |[39m }
     [90m 163 |[39m[0m

      at MonitoringController.getPrometheusMetrics (monitoring/monitoring.controller.ts:160:9)
      at Object.<anonymous> (monitoring/monitoring.controller.spec.ts:498:18)

[31m[Nest] 14512  - [39m2025/10/09 15:44:22 [31m  ERROR[39m [38;5;3m[RedisHealthService] [39m[31mFailed to initialize Redis client[39m
[31m[Nest] 14512  - [39m2025/10/09 15:44:22 [31m  ERROR[39m [38;5;3m[RedisHealthService] [39mError: Redis connection failed
    at mockConstructor.<anonymous> [90m(D:\onlinestore\backend\[39msrc\redis\redis-health.service.standalone.spec.ts:199:15[90m)[39m
    at [90mD:\onlinestore\backend\[39mnode_modules\[4mjest-mock[24m\build\index.js:295:43
    at mockConstructor.<anonymous> [90m(D:\onlinestore\backend\[39mnode_modules\[4mjest-mock[24m\build\index.js:312:13[90m)[39m
    at new mockConstructor [90m(D:\onlinestore\backend\[39mnode_modules\[4mjest-mock[24m\build\index.js:102:19[90m)[39m
    at RedisHealthService.initializeRedisClient [90m(D:\onlinestore\backend\[39msrc\redis\redis-health.service.ts:81:26[90m)[39m
    at new RedisHealthService [90m(D:\onlinestore\backend\[39msrc\redis\redis-health.service.ts:49:14[90m)[39m
    at Object.<anonymous> [90m(D:\onlinestore\backend\[39msrc\redis\redis-health.service.standalone.spec.ts:202:17[90m)[39m
    at Promise.finally.completed [90m(D:\onlinestore\backend\[39mnode_modules\[4mjest-circus[24m\build\jestAdapterInit.js:1557:28[90m)[39m
    at new Promise (<anonymous>)
    at callAsyncCircusFn [90m(D:\onlinestore\backend\[39mnode_modules\[4mjest-circus[24m\build\jestAdapterInit.js:1497:10[90m)[39m
    at _callCircusTest [90m(D:\onlinestore\backend\[39mnode_modules\[4mjest-circus[24m\build\jestAdapterInit.js:1007:40[90m)[39m
    at _runTest [90m(D:\onlinestore\backend\[39mnode_modules\[4mjest-circus[24m\build\jestAdapterInit.js:947:3[90m)[39m
    at [90mD:\onlinestore\backend\[39mnode_modules\[4mjest-circus[24m\build\jestAdapterInit.js:849:7
    at _runTestsForDescribeBlock [90m(D:\onlinestore\backend\[39mnode_modules\[4mjest-circus[24m\build\jestAdapterInit.js:862:11[90m)[39m
    at _runTestsForDescribeBlock [90m(D:\onlinestore\backend\[39mnode_modules\[4mjest-circus[24m\build\jestAdapterInit.js:857:11[90m)[39m
    at _runTestsForDescribeBlock [90m(D:\onlinestore\backend\[39mnode_modules\[4mjest-circus[24m\build\jestAdapterInit.js:857:11[90m)[39m
    at run [90m(D:\onlinestore\backend\[39mnode_modules\[4mjest-circus[24m\build\jestAdapterInit.js:761:3[90m)[39m
    at runAndTransformResultsToJestFormat [90m(D:\onlinestore\backend\[39mnode_modules\[4mjest-circus[24m\build\jestAdapterInit.js:1918:21[90m)[39m
    at jestAdapter [90m(D:\onlinestore\backend\[39mnode_modules\[4mjest-circus[24m\build\runner.js:101:19[90m)[39m
    at runTestInternal [90m(D:\onlinestore\backend\[39mnode_modules\[4mjest-runner[24m\build\index.js:275:16[90m)[39m
    at runTest [90m(D:\onlinestore\backend\[39mnode_modules\[4mjest-runner[24m\build\index.js:343:7[90m)[39m
[31m[Nest] 14512  - [39m2025/10/09 15:44:22 [31m  ERROR[39m [38;5;3m[RedisHealthService] [39m[31mFailed to get Redis info[39m
[31m[Nest] 14512  - [39m2025/10/09 15:44:22 [31m  ERROR[39m [38;5;3m[RedisHealthService] [39mError: Info command failed
    at Object.<anonymous> [90m(D:\onlinestore\backend\[39msrc\redis\redis-health.service.standalone.spec.ts:545:43[90m)[39m
    at Promise.finally.completed [90m(D:\onlinestore\backend\[39mnode_modules\[4mjest-circus[24m\build\jestAdapterInit.js:1557:28[90m)[39m
    at new Promise (<anonymous>)
    at callAsyncCircusFn [90m(D:\onlinestore\backend\[39mnode_modules\[4mjest-circus[24m\build\jestAdapterInit.js:1497:10[90m)[39m
    at _callCircusTest [90m(D:\onlinestore\backend\[39mnode_modules\[4mjest-circus[24m\build\jestAdapterInit.js:1007:40[90m)[39m
    at _runTest [90m(D:\onlinestore\backend\[39mnode_modules\[4mjest-circus[24m\build\jestAdapterInit.js:947:3[90m)[39m
    at [90mD:\onlinestore\backend\[39mnode_modules\[4mjest-circus[24m\build\jestAdapterInit.js:849:7
    at _runTestsForDescribeBlock [90m(D:\onlinestore\backend\[39mnode_modules\[4mjest-circus[24m\build\jestAdapterInit.js:862:11[90m)[39m
    at _runTestsForDescribeBlock [90m(D:\onlinestore\backend\[39mnode_modules\[4mjest-circus[24m\build\jestAdapterInit.js:857:11[90m)[39m
    at _runTestsForDescribeBlock [90m(D:\onlinestore\backend\[39mnode_modules\[4mjest-circus[24m\build\jestAdapterInit.js:857:11[90m)[39m
    at run [90m(D:\onlinestore\backend\[39mnode_modules\[4mjest-circus[24m\build\jestAdapterInit.js:761:3[90m)[39m
    at runAndTransformResultsToJestFormat [90m(D:\onlinestore\backend\[39mnode_modules\[4mjest-circus[24m\build\jestAdapterInit.js:1918:21[90m)[39m
    at jestAdapter [90m(D:\onlinestore\backend\[39mnode_modules\[4mjest-circus[24m\build\runner.js:101:19[90m)[39m
    at runTestInternal [90m(D:\onlinestore\backend\[39mnode_modules\[4mjest-runner[24m\build\index.js:275:16[90m)[39m
    at runTest [90m(D:\onlinestore\backend\[39mnode_modules\[4mjest-runner[24m\build\index.js:343:7[90m)[39m
[31m[Nest] 14512  - [39m2025/10/09 15:44:22 [31m  ERROR[39m [38;5;3m[RedisHealthService] [39m[31mCache operation test failed[39m
[31m[Nest] 14512  - [39m2025/10/09 15:44:22 [31m  ERROR[39m [38;5;3m[RedisHealthService] [39mError: Set operation failed
    at Object.<anonymous> [90m(D:\onlinestore\backend\[39msrc\redis\redis-health.service.standalone.spec.ts:546:42[90m)[39m
    at Promise.finally.completed [90m(D:\onlinestore\backend\[39mnode_modules\[4mjest-circus[24m\build\jestAdapterInit.js:1557:28[90m)[39m
    at new Promise (<anonymous>)
    at callAsyncCircusFn [90m(D:\onlinestore\backend\[39mnode_modules\[4mjest-circus[24m\build\jestAdapterInit.js:1497:10[90m)[39m
    at _callCircusTest [90m(D:\onlinestore\backend\[39mnode_modules\[4mjest-circus[24m\build\jestAdapterInit.js:1007:40[90m)[39m
    at _runTest [90m(D:\onlinestore\backend\[39mnode_modules\[4mjest-circus[24m\build\jestAdapterInit.js:947:3[90m)[39m
    at [90mD:\onlinestore\backend\[39mnode_modules\[4mjest-circus[24m\build\jestAdapterInit.js:849:7
    at _runTestsForDescribeBlock [90m(D:\onlinestore\backend\[39mnode_modules\[4mjest-circus[24m\build\jestAdapterInit.js:862:11[90m)[39m
    at _runTestsForDescribeBlock [90m(D:\onlinestore\backend\[39mnode_modules\[4mjest-circus[24m\build\jestAdapterInit.js:857:11[90m)[39m
    at _runTestsForDescribeBlock [90m(D:\onlinestore\backend\[39mnode_modules\[4mjest-circus[24m\build\jestAdapterInit.js:857:11[90m)[39m
    at run [90m(D:\onlinestore\backend\[39mnode_modules\[4mjest-circus[24m\build\jestAdapterInit.js:761:3[90m)[39m
    at runAndTransformResultsToJestFormat [90m(D:\onlinestore\backend\[39mnode_modules\[4mjest-circus[24m\build\jestAdapterInit.js:1918:21[90m)[39m
    at jestAdapter [90m(D:\onlinestore\backend\[39mnode_modules\[4mjest-circus[24m\build\runner.js:101:19[90m)[39m
    at runTestInternal [90m(D:\onlinestore\backend\[39mnode_modules\[4mjest-runner[24m\build\index.js:275:16[90m)[39m
    at runTest [90m(D:\onlinestore\backend\[39mnode_modules\[4mjest-runner[24m\build\index.js:343:7[90m)[39m
FAIL src/redis/redis-health.service.standalone.spec.ts
  RedisHealthService
    Service Initialization
      √ should be defined (3 ms)
      × should disable Redis client in development environment (2 ms)
      × should disable Redis client in test environment (2 ms)
      √ should initialize Redis client in production environment (10 ms)
      √ should handle initialization errors gracefully (9 ms)
    Event Listeners Setup
      √ should set up all required event listeners (7 ms)
    Health Check
      √ should return healthy status when Redis is responsive (3 ms)
      √ should return unhealthy status when Redis is not responsive (3 ms)
      √ should return unhealthy status when Redis client is disabled (2 ms)
      √ should measure latency correctly (3 ms)
    Redis Info
      √ should return parsed Redis info when successful (2 ms)
      √ should return null when Redis info command fails (2 ms)
      √ should return null when Redis client is disabled (1 ms)
    Cache Operations
      √ should successfully set and get cache values (2 ms)
      √ should handle cache operation errors gracefully (2 ms)
    Client Access
      √ should return Redis client when available (2 ms)
      √ should return undefined when Redis client is disabled (2 ms)
    Retry Strategy
      √ should implement exponential backoff retry strategy (2 ms)
    Reconnection
      √ should reconnect on specific errors (2 ms)
    Integration Scenarios
      √ should handle complete health check workflow (3 ms)
      √ should handle failure scenarios gracefully (5 ms)

  ● RedisHealthService › Service Initialization › should disable Redis client in development environment

    expect(received).toBeUndefined()

    Received: {"del": [Function del], "get": [Function get], "info": [Function info], "on": [Function on], "ping": [Function ping], "quit": [Function quit], "set": [Function set]}

    [0m [90m 168 |[39m       service [33m=[39m [36mnew[39m [33mRedisHealthService[39m()[33m;[39m
     [90m 169 |[39m
    [31m[1m>[22m[39m[90m 170 |[39m       expect(service[33m.[39mgetClient())[33m.[39mtoBeUndefined()[33m;[39m
     [90m     |[39m                                   [31m[1m^[22m[39m
     [90m 171 |[39m     })[33m;[39m
     [90m 172 |[39m
     [90m 173 |[39m     it([32m'should disable Redis client in test environment'[39m[33m,[39m () [33m=>[39m {[0m

      at Object.<anonymous> (redis/redis-health.service.standalone.spec.ts:170:35)

  ● RedisHealthService › Service Initialization › should disable Redis client in test environment

    expect(received).toBeUndefined()

    Received: {"del": [Function del], "get": [Function get], "info": [Function info], "on": [Function on], "ping": [Function ping], "quit": [Function quit], "set": [Function set]}

    [0m [90m 177 |[39m       service [33m=[39m [36mnew[39m [33mRedisHealthService[39m()[33m;[39m
     [90m 178 |[39m
    [31m[1m>[22m[39m[90m 179 |[39m       expect(service[33m.[39mgetClient())[33m.[39mtoBeUndefined()[33m;[39m
     [90m     |[39m                                   [31m[1m^[22m[39m
     [90m 180 |[39m     })[33m;[39m
     [90m 181 |[39m
     [90m 182 |[39m     it([32m'should initialize Redis client in production environment'[39m[33m,[39m () [33m=>[39m {[0m

      at Object.<anonymous> (redis/redis-health.service.standalone.spec.ts:179:35)

FAIL src/logging/user-behavior-tracker.service.spec.ts
  UserBehaviorTracker
    × should be defined (9 ms)
    trackPageView
      × should track page view correctly (5 ms)
      × should track page view without userId (12 ms)
    trackProductView
      × should track product view correctly (5 ms)
    trackSearch
      × should track search correctly (4 ms)
    trackCartOperation
      × should track cart add correctly (4 ms)
      × should track cart remove correctly (5 ms)
    trackCheckout
      × should track checkout correctly (4 ms)
    trackPurchase
      × should track purchase correctly (4 ms)
    trackCustomEvent
      × should track custom event correctly (4 ms)
    flush
      × should flush logs without errors (3 ms)
    extractDeviceInfo
      × should extract device info correctly (4 ms)
      × should handle missing request (4 ms)
    getClientIp
      × should get client IP from x-forwarded-for header (4 ms)
      × should get client IP from x-real-ip header (13 ms)
      × should return unknown when no IP headers are present (4 ms)

  ● UserBehaviorTracker › should be defined

    Nest can't resolve dependencies of the UserBehaviorTracker (OPENOBSERVE_CONFIG, ?). Please make sure that the argument "USER_BEHAVIOR_TRANSPORT" at index [1] is available in the RootTestModule context.

    Potential solutions:
    - Is RootTestModule a valid NestJS module?
    - If "USER_BEHAVIOR_TRANSPORT" is a provider, is it part of the current RootTestModule?
    - If "USER_BEHAVIOR_TRANSPORT" is exported from a separate @Module, is that module imported within RootTestModule?
      @Module({
        imports: [ /* the Module containing "USER_BEHAVIOR_TRANSPORT" */ ]
      })

    [0m [90m 58 |[39m     } [36mas[39m [33mPartial[39m[33m<[39m[33mRequest[39m[33m>[39m[33m;[39m
     [90m 59 |[39m
    [31m[1m>[22m[39m[90m 60 |[39m     [36mconst[39m module[33m:[39m [33mTestingModule[39m [33m=[39m [36mawait[39m [33mTest[39m[33m.[39mcreateTestingModule({
     [90m    |[39m                                   [31m[1m^[22m[39m
     [90m 61 |[39m       imports[33m:[39m [[33mHttpModule[39m][33m,[39m
     [90m 62 |[39m       providers[33m:[39m [
     [90m 63 |[39m         [33mUserBehaviorTracker[39m[33m,[39m[0m

      at TestingInjector.lookupComponentInParentModules (../node_modules/@nestjs/core/injector/injector.js:286:19)
      at TestingInjector.resolveComponentWrapper (../node_modules/@nestjs/testing/testing-injector.js:19:45)
      at resolveParam (../node_modules/@nestjs/core/injector/injector.js:141:38)
          at async Promise.all (index 1)
      at TestingInjector.resolveConstructorParams (../node_modules/@nestjs/core/injector/injector.js:169:27)
      at TestingInjector.loadInstance (../node_modules/@nestjs/core/injector/injector.js:75:13)
      at TestingInjector.loadProvider (../node_modules/@nestjs/core/injector/injector.js:103:9)
      at ../node_modules/@nestjs/core/injector/instance-loader.js:56:13
          at async Promise.all (index 3)
      at TestingInstanceLoader.createInstancesOfProviders (../node_modules/@nestjs/core/injector/instance-loader.js:55:9)
      at ../node_modules/@nestjs/core/injector/instance-loader.js:40:13
          at async Promise.all (index 1)
      at TestingInstanceLoader.createInstances (../node_modules/@nestjs/core/injector/instance-loader.js:39:9)
      at TestingInstanceLoader.createInstancesOfDependencies (../node_modules/@nestjs/core/injector/instance-loader.js:22:13)
      at TestingInstanceLoader.createInstancesOfDependencies (../node_modules/@nestjs/testing/testing-instance-loader.js:9:9)
      at TestingModuleBuilder.createInstancesOfDependencies (../node_modules/@nestjs/testing/testing-module.builder.js:118:9)
      at TestingModuleBuilder.compile (../node_modules/@nestjs/testing/testing-module.builder.js:74:9)
      at Object.<anonymous> (logging/user-behavior-tracker.service.spec.ts:60:35)

  ● UserBehaviorTracker › trackPageView › should track page view correctly

    Nest can't resolve dependencies of the UserBehaviorTracker (OPENOBSERVE_CONFIG, ?). Please make sure that the argument "USER_BEHAVIOR_TRANSPORT" at index [1] is available in the RootTestModule context.

    Potential solutions:
    - Is RootTestModule a valid NestJS module?
    - If "USER_BEHAVIOR_TRANSPORT" is a provider, is it part of the current RootTestModule?
    - If "USER_BEHAVIOR_TRANSPORT" is exported from a separate @Module, is that module imported within RootTestModule?
      @Module({
        imports: [ /* the Module containing "USER_BEHAVIOR_TRANSPORT" */ ]
      })

    [0m [90m 58 |[39m     } [36mas[39m [33mPartial[39m[33m<[39m[33mRequest[39m[33m>[39m[33m;[39m
     [90m 59 |[39m
    [31m[1m>[22m[39m[90m 60 |[39m     [36mconst[39m module[33m:[39m [33mTestingModule[39m [33m=[39m [36mawait[39m [33mTest[39m[33m.[39mcreateTestingModule({
     [90m    |[39m                                   [31m[1m^[22m[39m
     [90m 61 |[39m       imports[33m:[39m [[33mHttpModule[39m][33m,[39m
     [90m 62 |[39m       providers[33m:[39m [
     [90m 63 |[39m         [33mUserBehaviorTracker[39m[33m,[39m[0m

      at TestingInjector.lookupComponentInParentModules (../node_modules/@nestjs/core/injector/injector.js:286:19)
      at TestingInjector.resolveComponentWrapper (../node_modules/@nestjs/testing/testing-injector.js:19:45)
      at resolveParam (../node_modules/@nestjs/core/injector/injector.js:141:38)
          at async Promise.all (index 1)
      at TestingInjector.resolveConstructorParams (../node_modules/@nestjs/core/injector/injector.js:169:27)
      at TestingInjector.loadInstance (../node_modules/@nestjs/core/injector/injector.js:75:13)
      at TestingInjector.loadProvider (../node_modules/@nestjs/core/injector/injector.js:103:9)
      at ../node_modules/@nestjs/core/injector/instance-loader.js:56:13
          at async Promise.all (index 3)
      at TestingInstanceLoader.createInstancesOfProviders (../node_modules/@nestjs/core/injector/instance-loader.js:55:9)
      at ../node_modules/@nestjs/core/injector/instance-loader.js:40:13
          at async Promise.all (index 1)
      at TestingInstanceLoader.createInstances (../node_modules/@nestjs/core/injector/instance-loader.js:39:9)
      at TestingInstanceLoader.createInstancesOfDependencies (../node_modules/@nestjs/core/injector/instance-loader.js:22:13)
      at TestingInstanceLoader.createInstancesOfDependencies (../node_modules/@nestjs/testing/testing-instance-loader.js:9:9)
      at TestingModuleBuilder.createInstancesOfDependencies (../node_modules/@nestjs/testing/testing-module.builder.js:118:9)
      at TestingModuleBuilder.compile (../node_modules/@nestjs/testing/testing-module.builder.js:74:9)
      at Object.<anonymous> (logging/user-behavior-tracker.service.spec.ts:60:35)

  ● UserBehaviorTracker › trackPageView › should track page view without userId

    Nest can't resolve dependencies of the UserBehaviorTracker (OPENOBSERVE_CONFIG, ?). Please make sure that the argument "USER_BEHAVIOR_TRANSPORT" at index [1] is available in the RootTestModule context.

    Potential solutions:
    - Is RootTestModule a valid NestJS module?
    - If "USER_BEHAVIOR_TRANSPORT" is a provider, is it part of the current RootTestModule?
    - If "USER_BEHAVIOR_TRANSPORT" is exported from a separate @Module, is that module imported within RootTestModule?
      @Module({
        imports: [ /* the Module containing "USER_BEHAVIOR_TRANSPORT" */ ]
      })

    [0m [90m 58 |[39m     } [36mas[39m [33mPartial[39m[33m<[39m[33mRequest[39m[33m>[39m[33m;[39m
     [90m 59 |[39m
    [31m[1m>[22m[39m[90m 60 |[39m     [36mconst[39m module[33m:[39m [33mTestingModule[39m [33m=[39m [36mawait[39m [33mTest[39m[33m.[39mcreateTestingModule({
     [90m    |[39m                                   [31m[1m^[22m[39m
     [90m 61 |[39m       imports[33m:[39m [[33mHttpModule[39m][33m,[39m
     [90m 62 |[39m       providers[33m:[39m [
     [90m 63 |[39m         [33mUserBehaviorTracker[39m[33m,[39m[0m

      at TestingInjector.lookupComponentInParentModules (../node_modules/@nestjs/core/injector/injector.js:286:19)
      at TestingInjector.resolveComponentWrapper (../node_modules/@nestjs/testing/testing-injector.js:19:45)
      at resolveParam (../node_modules/@nestjs/core/injector/injector.js:141:38)
          at async Promise.all (index 1)
      at TestingInjector.resolveConstructorParams (../node_modules/@nestjs/core/injector/injector.js:169:27)
      at TestingInjector.loadInstance (../node_modules/@nestjs/core/injector/injector.js:75:13)
      at TestingInjector.loadProvider (../node_modules/@nestjs/core/injector/injector.js:103:9)
      at ../node_modules/@nestjs/core/injector/instance-loader.js:56:13
          at async Promise.all (index 3)
      at TestingInstanceLoader.createInstancesOfProviders (../node_modules/@nestjs/core/injector/instance-loader.js:55:9)
      at ../node_modules/@nestjs/core/injector/instance-loader.js:40:13
          at async Promise.all (index 1)
      at TestingInstanceLoader.createInstances (../node_modules/@nestjs/core/injector/instance-loader.js:39:9)
      at TestingInstanceLoader.createInstancesOfDependencies (../node_modules/@nestjs/core/injector/instance-loader.js:22:13)
      at TestingInstanceLoader.createInstancesOfDependencies (../node_modules/@nestjs/testing/testing-instance-loader.js:9:9)
      at TestingModuleBuilder.createInstancesOfDependencies (../node_modules/@nestjs/testing/testing-module.builder.js:118:9)
      at TestingModuleBuilder.compile (../node_modules/@nestjs/testing/testing-module.builder.js:74:9)
      at Object.<anonymous> (logging/user-behavior-tracker.service.spec.ts:60:35)

  ● UserBehaviorTracker › trackProductView › should track product view correctly

    Nest can't resolve dependencies of the UserBehaviorTracker (OPENOBSERVE_CONFIG, ?). Please make sure that the argument "USER_BEHAVIOR_TRANSPORT" at index [1] is available in the RootTestModule context.

    Potential solutions:
    - Is RootTestModule a valid NestJS module?
    - If "USER_BEHAVIOR_TRANSPORT" is a provider, is it part of the current RootTestModule?
    - If "USER_BEHAVIOR_TRANSPORT" is exported from a separate @Module, is that module imported within RootTestModule?
      @Module({
        imports: [ /* the Module containing "USER_BEHAVIOR_TRANSPORT" */ ]
      })

    [0m [90m 58 |[39m     } [36mas[39m [33mPartial[39m[33m<[39m[33mRequest[39m[33m>[39m[33m;[39m
     [90m 59 |[39m
    [31m[1m>[22m[39m[90m 60 |[39m     [36mconst[39m module[33m:[39m [33mTestingModule[39m [33m=[39m [36mawait[39m [33mTest[39m[33m.[39mcreateTestingModule({
     [90m    |[39m                                   [31m[1m^[22m[39m
     [90m 61 |[39m       imports[33m:[39m [[33mHttpModule[39m][33m,[39m
     [90m 62 |[39m       providers[33m:[39m [
     [90m 63 |[39m         [33mUserBehaviorTracker[39m[33m,[39m[0m

      at TestingInjector.lookupComponentInParentModules (../node_modules/@nestjs/core/injector/injector.js:286:19)
      at TestingInjector.resolveComponentWrapper (../node_modules/@nestjs/testing/testing-injector.js:19:45)
      at resolveParam (../node_modules/@nestjs/core/injector/injector.js:141:38)
          at async Promise.all (index 1)
      at TestingInjector.resolveConstructorParams (../node_modules/@nestjs/core/injector/injector.js:169:27)
      at TestingInjector.loadInstance (../node_modules/@nestjs/core/injector/injector.js:75:13)
      at TestingInjector.loadProvider (../node_modules/@nestjs/core/injector/injector.js:103:9)
      at ../node_modules/@nestjs/core/injector/instance-loader.js:56:13
          at async Promise.all (index 3)
      at TestingInstanceLoader.createInstancesOfProviders (../node_modules/@nestjs/core/injector/instance-loader.js:55:9)
      at ../node_modules/@nestjs/core/injector/instance-loader.js:40:13
          at async Promise.all (index 1)
      at TestingInstanceLoader.createInstances (../node_modules/@nestjs/core/injector/instance-loader.js:39:9)
      at TestingInstanceLoader.createInstancesOfDependencies (../node_modules/@nestjs/core/injector/instance-loader.js:22:13)
      at TestingInstanceLoader.createInstancesOfDependencies (../node_modules/@nestjs/testing/testing-instance-loader.js:9:9)
      at TestingModuleBuilder.createInstancesOfDependencies (../node_modules/@nestjs/testing/testing-module.builder.js:118:9)
      at TestingModuleBuilder.compile (../node_modules/@nestjs/testing/testing-module.builder.js:74:9)
      at Object.<anonymous> (logging/user-behavior-tracker.service.spec.ts:60:35)

  ● UserBehaviorTracker › trackSearch › should track search correctly

    Nest can't resolve dependencies of the UserBehaviorTracker (OPENOBSERVE_CONFIG, ?). Please make sure that the argument "USER_BEHAVIOR_TRANSPORT" at index [1] is available in the RootTestModule context.

    Potential solutions:
    - Is RootTestModule a valid NestJS module?
    - If "USER_BEHAVIOR_TRANSPORT" is a provider, is it part of the current RootTestModule?
    - If "USER_BEHAVIOR_TRANSPORT" is exported from a separate @Module, is that module imported within RootTestModule?
      @Module({
        imports: [ /* the Module containing "USER_BEHAVIOR_TRANSPORT" */ ]
      })

    [0m [90m 58 |[39m     } [36mas[39m [33mPartial[39m[33m<[39m[33mRequest[39m[33m>[39m[33m;[39m
     [90m 59 |[39m
    [31m[1m>[22m[39m[90m 60 |[39m     [36mconst[39m module[33m:[39m [33mTestingModule[39m [33m=[39m [36mawait[39m [33mTest[39m[33m.[39mcreateTestingModule({
     [90m    |[39m                                   [31m[1m^[22m[39m
     [90m 61 |[39m       imports[33m:[39m [[33mHttpModule[39m][33m,[39m
     [90m 62 |[39m       providers[33m:[39m [
     [90m 63 |[39m         [33mUserBehaviorTracker[39m[33m,[39m[0m

      at TestingInjector.lookupComponentInParentModules (../node_modules/@nestjs/core/injector/injector.js:286:19)
      at TestingInjector.resolveComponentWrapper (../node_modules/@nestjs/testing/testing-injector.js:19:45)
      at resolveParam (../node_modules/@nestjs/core/injector/injector.js:141:38)
          at async Promise.all (index 1)
      at TestingInjector.resolveConstructorParams (../node_modules/@nestjs/core/injector/injector.js:169:27)
      at TestingInjector.loadInstance (../node_modules/@nestjs/core/injector/injector.js:75:13)
      at TestingInjector.loadProvider (../node_modules/@nestjs/core/injector/injector.js:103:9)
      at ../node_modules/@nestjs/core/injector/instance-loader.js:56:13
          at async Promise.all (index 3)
      at TestingInstanceLoader.createInstancesOfProviders (../node_modules/@nestjs/core/injector/instance-loader.js:55:9)
      at ../node_modules/@nestjs/core/injector/instance-loader.js:40:13
          at async Promise.all (index 1)
      at TestingInstanceLoader.createInstances (../node_modules/@nestjs/core/injector/instance-loader.js:39:9)
      at TestingInstanceLoader.createInstancesOfDependencies (../node_modules/@nestjs/core/injector/instance-loader.js:22:13)
      at TestingInstanceLoader.createInstancesOfDependencies (../node_modules/@nestjs/testing/testing-instance-loader.js:9:9)
      at TestingModuleBuilder.createInstancesOfDependencies (../node_modules/@nestjs/testing/testing-module.builder.js:118:9)
      at TestingModuleBuilder.compile (../node_modules/@nestjs/testing/testing-module.builder.js:74:9)
      at Object.<anonymous> (logging/user-behavior-tracker.service.spec.ts:60:35)

  ● UserBehaviorTracker › trackCartOperation › should track cart add correctly

    Nest can't resolve dependencies of the UserBehaviorTracker (OPENOBSERVE_CONFIG, ?). Please make sure that the argument "USER_BEHAVIOR_TRANSPORT" at index [1] is available in the RootTestModule context.

    Potential solutions:
    - Is RootTestModule a valid NestJS module?
    - If "USER_BEHAVIOR_TRANSPORT" is a provider, is it part of the current RootTestModule?
    - If "USER_BEHAVIOR_TRANSPORT" is exported from a separate @Module, is that module imported within RootTestModule?
      @Module({
        imports: [ /* the Module containing "USER_BEHAVIOR_TRANSPORT" */ ]
      })

    [0m [90m 58 |[39m     } [36mas[39m [33mPartial[39m[33m<[39m[33mRequest[39m[33m>[39m[33m;[39m
     [90m 59 |[39m
    [31m[1m>[22m[39m[90m 60 |[39m     [36mconst[39m module[33m:[39m [33mTestingModule[39m [33m=[39m [36mawait[39m [33mTest[39m[33m.[39mcreateTestingModule({
     [90m    |[39m                                   [31m[1m^[22m[39m
     [90m 61 |[39m       imports[33m:[39m [[33mHttpModule[39m][33m,[39m
     [90m 62 |[39m       providers[33m:[39m [
     [90m 63 |[39m         [33mUserBehaviorTracker[39m[33m,[39m[0m

      at TestingInjector.lookupComponentInParentModules (../node_modules/@nestjs/core/injector/injector.js:286:19)
      at TestingInjector.resolveComponentWrapper (../node_modules/@nestjs/testing/testing-injector.js:19:45)
      at resolveParam (../node_modules/@nestjs/core/injector/injector.js:141:38)
          at async Promise.all (index 1)
      at TestingInjector.resolveConstructorParams (../node_modules/@nestjs/core/injector/injector.js:169:27)
      at TestingInjector.loadInstance (../node_modules/@nestjs/core/injector/injector.js:75:13)
      at TestingInjector.loadProvider (../node_modules/@nestjs/core/injector/injector.js:103:9)
      at ../node_modules/@nestjs/core/injector/instance-loader.js:56:13
          at async Promise.all (index 3)
      at TestingInstanceLoader.createInstancesOfProviders (../node_modules/@nestjs/core/injector/instance-loader.js:55:9)
      at ../node_modules/@nestjs/core/injector/instance-loader.js:40:13
          at async Promise.all (index 1)
      at TestingInstanceLoader.createInstances (../node_modules/@nestjs/core/injector/instance-loader.js:39:9)
      at TestingInstanceLoader.createInstancesOfDependencies (../node_modules/@nestjs/core/injector/instance-loader.js:22:13)
      at TestingInstanceLoader.createInstancesOfDependencies (../node_modules/@nestjs/testing/testing-instance-loader.js:9:9)
      at TestingModuleBuilder.createInstancesOfDependencies (../node_modules/@nestjs/testing/testing-module.builder.js:118:9)
      at TestingModuleBuilder.compile (../node_modules/@nestjs/testing/testing-module.builder.js:74:9)
      at Object.<anonymous> (logging/user-behavior-tracker.service.spec.ts:60:35)

  ● UserBehaviorTracker › trackCartOperation › should track cart remove correctly

    Nest can't resolve dependencies of the UserBehaviorTracker (OPENOBSERVE_CONFIG, ?). Please make sure that the argument "USER_BEHAVIOR_TRANSPORT" at index [1] is available in the RootTestModule context.

    Potential solutions:
    - Is RootTestModule a valid NestJS module?
    - If "USER_BEHAVIOR_TRANSPORT" is a provider, is it part of the current RootTestModule?
    - If "USER_BEHAVIOR_TRANSPORT" is exported from a separate @Module, is that module imported within RootTestModule?
      @Module({
        imports: [ /* the Module containing "USER_BEHAVIOR_TRANSPORT" */ ]
      })

    [0m [90m 58 |[39m     } [36mas[39m [33mPartial[39m[33m<[39m[33mRequest[39m[33m>[39m[33m;[39m
     [90m 59 |[39m
    [31m[1m>[22m[39m[90m 60 |[39m     [36mconst[39m module[33m:[39m [33mTestingModule[39m [33m=[39m [36mawait[39m [33mTest[39m[33m.[39mcreateTestingModule({
     [90m    |[39m                                   [31m[1m^[22m[39m
     [90m 61 |[39m       imports[33m:[39m [[33mHttpModule[39m][33m,[39m
     [90m 62 |[39m       providers[33m:[39m [
     [90m 63 |[39m         [33mUserBehaviorTracker[39m[33m,[39m[0m

      at TestingInjector.lookupComponentInParentModules (../node_modules/@nestjs/core/injector/injector.js:286:19)
      at TestingInjector.resolveComponentWrapper (../node_modules/@nestjs/testing/testing-injector.js:19:45)
      at resolveParam (../node_modules/@nestjs/core/injector/injector.js:141:38)
          at async Promise.all (index 1)
      at TestingInjector.resolveConstructorParams (../node_modules/@nestjs/core/injector/injector.js:169:27)
      at TestingInjector.loadInstance (../node_modules/@nestjs/core/injector/injector.js:75:13)
      at TestingInjector.loadProvider (../node_modules/@nestjs/core/injector/injector.js:103:9)
      at ../node_modules/@nestjs/core/injector/instance-loader.js:56:13
          at async Promise.all (index 3)
      at TestingInstanceLoader.createInstancesOfProviders (../node_modules/@nestjs/core/injector/instance-loader.js:55:9)
      at ../node_modules/@nestjs/core/injector/instance-loader.js:40:13
          at async Promise.all (index 1)
      at TestingInstanceLoader.createInstances (../node_modules/@nestjs/core/injector/instance-loader.js:39:9)
      at TestingInstanceLoader.createInstancesOfDependencies (../node_modules/@nestjs/core/injector/instance-loader.js:22:13)
      at TestingInstanceLoader.createInstancesOfDependencies (../node_modules/@nestjs/testing/testing-instance-loader.js:9:9)
      at TestingModuleBuilder.createInstancesOfDependencies (../node_modules/@nestjs/testing/testing-module.builder.js:118:9)
      at TestingModuleBuilder.compile (../node_modules/@nestjs/testing/testing-module.builder.js:74:9)
      at Object.<anonymous> (logging/user-behavior-tracker.service.spec.ts:60:35)

  ● UserBehaviorTracker › trackCheckout › should track checkout correctly

    Nest can't resolve dependencies of the UserBehaviorTracker (OPENOBSERVE_CONFIG, ?). Please make sure that the argument "USER_BEHAVIOR_TRANSPORT" at index [1] is available in the RootTestModule context.

    Potential solutions:
    - Is RootTestModule a valid NestJS module?
    - If "USER_BEHAVIOR_TRANSPORT" is a provider, is it part of the current RootTestModule?
    - If "USER_BEHAVIOR_TRANSPORT" is exported from a separate @Module, is that module imported within RootTestModule?
      @Module({
        imports: [ /* the Module containing "USER_BEHAVIOR_TRANSPORT" */ ]
      })

    [0m [90m 58 |[39m     } [36mas[39m [33mPartial[39m[33m<[39m[33mRequest[39m[33m>[39m[33m;[39m
     [90m 59 |[39m
    [31m[1m>[22m[39m[90m 60 |[39m     [36mconst[39m module[33m:[39m [33mTestingModule[39m [33m=[39m [36mawait[39m [33mTest[39m[33m.[39mcreateTestingModule({
     [90m    |[39m                                   [31m[1m^[22m[39m
     [90m 61 |[39m       imports[33m:[39m [[33mHttpModule[39m][33m,[39m
     [90m 62 |[39m       providers[33m:[39m [
     [90m 63 |[39m         [33mUserBehaviorTracker[39m[33m,[39m[0m

      at TestingInjector.lookupComponentInParentModules (../node_modules/@nestjs/core/injector/injector.js:286:19)
      at TestingInjector.resolveComponentWrapper (../node_modules/@nestjs/testing/testing-injector.js:19:45)
      at resolveParam (../node_modules/@nestjs/core/injector/injector.js:141:38)
          at async Promise.all (index 1)
      at TestingInjector.resolveConstructorParams (../node_modules/@nestjs/core/injector/injector.js:169:27)
      at TestingInjector.loadInstance (../node_modules/@nestjs/core/injector/injector.js:75:13)
      at TestingInjector.loadProvider (../node_modules/@nestjs/core/injector/injector.js:103:9)
      at ../node_modules/@nestjs/core/injector/instance-loader.js:56:13
          at async Promise.all (index 3)
      at TestingInstanceLoader.createInstancesOfProviders (../node_modules/@nestjs/core/injector/instance-loader.js:55:9)
      at ../node_modules/@nestjs/core/injector/instance-loader.js:40:13
          at async Promise.all (index 1)
      at TestingInstanceLoader.createInstances (../node_modules/@nestjs/core/injector/instance-loader.js:39:9)
      at TestingInstanceLoader.createInstancesOfDependencies (../node_modules/@nestjs/core/injector/instance-loader.js:22:13)
      at TestingInstanceLoader.createInstancesOfDependencies (../node_modules/@nestjs/testing/testing-instance-loader.js:9:9)
      at TestingModuleBuilder.createInstancesOfDependencies (../node_modules/@nestjs/testing/testing-module.builder.js:118:9)
      at TestingModuleBuilder.compile (../node_modules/@nestjs/testing/testing-module.builder.js:74:9)
      at Object.<anonymous> (logging/user-behavior-tracker.service.spec.ts:60:35)

  ● UserBehaviorTracker › trackPurchase › should track purchase correctly

    Nest can't resolve dependencies of the UserBehaviorTracker (OPENOBSERVE_CONFIG, ?). Please make sure that the argument "USER_BEHAVIOR_TRANSPORT" at index [1] is available in the RootTestModule context.

    Potential solutions:
    - Is RootTestModule a valid NestJS module?
    - If "USER_BEHAVIOR_TRANSPORT" is a provider, is it part of the current RootTestModule?
    - If "USER_BEHAVIOR_TRANSPORT" is exported from a separate @Module, is that module imported within RootTestModule?
      @Module({
        imports: [ /* the Module containing "USER_BEHAVIOR_TRANSPORT" */ ]
      })

    [0m [90m 58 |[39m     } [36mas[39m [33mPartial[39m[33m<[39m[33mRequest[39m[33m>[39m[33m;[39m
     [90m 59 |[39m
    [31m[1m>[22m[39m[90m 60 |[39m     [36mconst[39m module[33m:[39m [33mTestingModule[39m [33m=[39m [36mawait[39m [33mTest[39m[33m.[39mcreateTestingModule({
     [90m    |[39m                                   [31m[1m^[22m[39m
     [90m 61 |[39m       imports[33m:[39m [[33mHttpModule[39m][33m,[39m
     [90m 62 |[39m       providers[33m:[39m [
     [90m 63 |[39m         [33mUserBehaviorTracker[39m[33m,[39m[0m

      at TestingInjector.lookupComponentInParentModules (../node_modules/@nestjs/core/injector/injector.js:286:19)
      at TestingInjector.resolveComponentWrapper (../node_modules/@nestjs/testing/testing-injector.js:19:45)
      at resolveParam (../node_modules/@nestjs/core/injector/injector.js:141:38)
          at async Promise.all (index 1)
      at TestingInjector.resolveConstructorParams (../node_modules/@nestjs/core/injector/injector.js:169:27)
      at TestingInjector.loadInstance (../node_modules/@nestjs/core/injector/injector.js:75:13)
      at TestingInjector.loadProvider (../node_modules/@nestjs/core/injector/injector.js:103:9)
      at ../node_modules/@nestjs/core/injector/instance-loader.js:56:13
          at async Promise.all (index 3)
      at TestingInstanceLoader.createInstancesOfProviders (../node_modules/@nestjs/core/injector/instance-loader.js:55:9)
      at ../node_modules/@nestjs/core/injector/instance-loader.js:40:13
          at async Promise.all (index 1)
      at TestingInstanceLoader.createInstances (../node_modules/@nestjs/core/injector/instance-loader.js:39:9)
      at TestingInstanceLoader.createInstancesOfDependencies (../node_modules/@nestjs/core/injector/instance-loader.js:22:13)
      at TestingInstanceLoader.createInstancesOfDependencies (../node_modules/@nestjs/testing/testing-instance-loader.js:9:9)
      at TestingModuleBuilder.createInstancesOfDependencies (../node_modules/@nestjs/testing/testing-module.builder.js:118:9)
      at TestingModuleBuilder.compile (../node_modules/@nestjs/testing/testing-module.builder.js:74:9)
      at Object.<anonymous> (logging/user-behavior-tracker.service.spec.ts:60:35)

  ● UserBehaviorTracker › trackCustomEvent › should track custom event correctly

    Nest can't resolve dependencies of the UserBehaviorTracker (OPENOBSERVE_CONFIG, ?). Please make sure that the argument "USER_BEHAVIOR_TRANSPORT" at index [1] is available in the RootTestModule context.

    Potential solutions:
    - Is RootTestModule a valid NestJS module?
    - If "USER_BEHAVIOR_TRANSPORT" is a provider, is it part of the current RootTestModule?
    - If "USER_BEHAVIOR_TRANSPORT" is exported from a separate @Module, is that module imported within RootTestModule?
      @Module({
        imports: [ /* the Module containing "USER_BEHAVIOR_TRANSPORT" */ ]
      })

    [0m [90m 58 |[39m     } [36mas[39m [33mPartial[39m[33m<[39m[33mRequest[39m[33m>[39m[33m;[39m
     [90m 59 |[39m
    [31m[1m>[22m[39m[90m 60 |[39m     [36mconst[39m module[33m:[39m [33mTestingModule[39m [33m=[39m [36mawait[39m [33mTest[39m[33m.[39mcreateTestingModule({
     [90m    |[39m                                   [31m[1m^[22m[39m
     [90m 61 |[39m       imports[33m:[39m [[33mHttpModule[39m][33m,[39m
     [90m 62 |[39m       providers[33m:[39m [
     [90m 63 |[39m         [33mUserBehaviorTracker[39m[33m,[39m[0m

      at TestingInjector.lookupComponentInParentModules (../node_modules/@nestjs/core/injector/injector.js:286:19)
      at TestingInjector.resolveComponentWrapper (../node_modules/@nestjs/testing/testing-injector.js:19:45)
      at resolveParam (../node_modules/@nestjs/core/injector/injector.js:141:38)
          at async Promise.all (index 1)
      at TestingInjector.resolveConstructorParams (../node_modules/@nestjs/core/injector/injector.js:169:27)
      at TestingInjector.loadInstance (../node_modules/@nestjs/core/injector/injector.js:75:13)
      at TestingInjector.loadProvider (../node_modules/@nestjs/core/injector/injector.js:103:9)
      at ../node_modules/@nestjs/core/injector/instance-loader.js:56:13
          at async Promise.all (index 3)
      at TestingInstanceLoader.createInstancesOfProviders (../node_modules/@nestjs/core/injector/instance-loader.js:55:9)
      at ../node_modules/@nestjs/core/injector/instance-loader.js:40:13
          at async Promise.all (index 1)
      at TestingInstanceLoader.createInstances (../node_modules/@nestjs/core/injector/instance-loader.js:39:9)
      at TestingInstanceLoader.createInstancesOfDependencies (../node_modules/@nestjs/core/injector/instance-loader.js:22:13)
      at TestingInstanceLoader.createInstancesOfDependencies (../node_modules/@nestjs/testing/testing-instance-loader.js:9:9)
      at TestingModuleBuilder.createInstancesOfDependencies (../node_modules/@nestjs/testing/testing-module.builder.js:118:9)
      at TestingModuleBuilder.compile (../node_modules/@nestjs/testing/testing-module.builder.js:74:9)
      at Object.<anonymous> (logging/user-behavior-tracker.service.spec.ts:60:35)

  ● UserBehaviorTracker › flush › should flush logs without errors

    Nest can't resolve dependencies of the UserBehaviorTracker (OPENOBSERVE_CONFIG, ?). Please make sure that the argument "USER_BEHAVIOR_TRANSPORT" at index [1] is available in the RootTestModule context.

    Potential solutions:
    - Is RootTestModule a valid NestJS module?
    - If "USER_BEHAVIOR_TRANSPORT" is a provider, is it part of the current RootTestModule?
    - If "USER_BEHAVIOR_TRANSPORT" is exported from a separate @Module, is that module imported within RootTestModule?
      @Module({
        imports: [ /* the Module containing "USER_BEHAVIOR_TRANSPORT" */ ]
      })

    [0m [90m 58 |[39m     } [36mas[39m [33mPartial[39m[33m<[39m[33mRequest[39m[33m>[39m[33m;[39m
     [90m 59 |[39m
    [31m[1m>[22m[39m[90m 60 |[39m     [36mconst[39m module[33m:[39m [33mTestingModule[39m [33m=[39m [36mawait[39m [33mTest[39m[33m.[39mcreateTestingModule({
     [90m    |[39m                                   [31m[1m^[22m[39m
     [90m 61 |[39m       imports[33m:[39m [[33mHttpModule[39m][33m,[39m
     [90m 62 |[39m       providers[33m:[39m [
     [90m 63 |[39m         [33mUserBehaviorTracker[39m[33m,[39m[0m

      at TestingInjector.lookupComponentInParentModules (../node_modules/@nestjs/core/injector/injector.js:286:19)
      at TestingInjector.resolveComponentWrapper (../node_modules/@nestjs/testing/testing-injector.js:19:45)
      at resolveParam (../node_modules/@nestjs/core/injector/injector.js:141:38)
          at async Promise.all (index 1)
      at TestingInjector.resolveConstructorParams (../node_modules/@nestjs/core/injector/injector.js:169:27)
      at TestingInjector.loadInstance (../node_modules/@nestjs/core/injector/injector.js:75:13)
      at TestingInjector.loadProvider (../node_modules/@nestjs/core/injector/injector.js:103:9)
      at ../node_modules/@nestjs/core/injector/instance-loader.js:56:13
          at async Promise.all (index 3)
      at TestingInstanceLoader.createInstancesOfProviders (../node_modules/@nestjs/core/injector/instance-loader.js:55:9)
      at ../node_modules/@nestjs/core/injector/instance-loader.js:40:13
          at async Promise.all (index 1)
      at TestingInstanceLoader.createInstances (../node_modules/@nestjs/core/injector/instance-loader.js:39:9)
      at TestingInstanceLoader.createInstancesOfDependencies (../node_modules/@nestjs/core/injector/instance-loader.js:22:13)
      at TestingInstanceLoader.createInstancesOfDependencies (../node_modules/@nestjs/testing/testing-instance-loader.js:9:9)
      at TestingModuleBuilder.createInstancesOfDependencies (../node_modules/@nestjs/testing/testing-module.builder.js:118:9)
      at TestingModuleBuilder.compile (../node_modules/@nestjs/testing/testing-module.builder.js:74:9)
      at Object.<anonymous> (logging/user-behavior-tracker.service.spec.ts:60:35)

  ● UserBehaviorTracker › extractDeviceInfo › should extract device info correctly

    Nest can't resolve dependencies of the UserBehaviorTracker (OPENOBSERVE_CONFIG, ?). Please make sure that the argument "USER_BEHAVIOR_TRANSPORT" at index [1] is available in the RootTestModule context.

    Potential solutions:
    - Is RootTestModule a valid NestJS module?
    - If "USER_BEHAVIOR_TRANSPORT" is a provider, is it part of the current RootTestModule?
    - If "USER_BEHAVIOR_TRANSPORT" is exported from a separate @Module, is that module imported within RootTestModule?
      @Module({
        imports: [ /* the Module containing "USER_BEHAVIOR_TRANSPORT" */ ]
      })

    [0m [90m 58 |[39m     } [36mas[39m [33mPartial[39m[33m<[39m[33mRequest[39m[33m>[39m[33m;[39m
     [90m 59 |[39m
    [31m[1m>[22m[39m[90m 60 |[39m     [36mconst[39m module[33m:[39m [33mTestingModule[39m [33m=[39m [36mawait[39m [33mTest[39m[33m.[39mcreateTestingModule({
     [90m    |[39m                                   [31m[1m^[22m[39m
     [90m 61 |[39m       imports[33m:[39m [[33mHttpModule[39m][33m,[39m
     [90m 62 |[39m       providers[33m:[39m [
     [90m 63 |[39m         [33mUserBehaviorTracker[39m[33m,[39m[0m

      at TestingInjector.lookupComponentInParentModules (../node_modules/@nestjs/core/injector/injector.js:286:19)
      at TestingInjector.resolveComponentWrapper (../node_modules/@nestjs/testing/testing-injector.js:19:45)
      at resolveParam (../node_modules/@nestjs/core/injector/injector.js:141:38)
          at async Promise.all (index 1)
      at TestingInjector.resolveConstructorParams (../node_modules/@nestjs/core/injector/injector.js:169:27)
      at TestingInjector.loadInstance (../node_modules/@nestjs/core/injector/injector.js:75:13)
      at TestingInjector.loadProvider (../node_modules/@nestjs/core/injector/injector.js:103:9)
      at ../node_modules/@nestjs/core/injector/instance-loader.js:56:13
          at async Promise.all (index 3)
      at TestingInstanceLoader.createInstancesOfProviders (../node_modules/@nestjs/core/injector/instance-loader.js:55:9)
      at ../node_modules/@nestjs/core/injector/instance-loader.js:40:13
          at async Promise.all (index 1)
      at TestingInstanceLoader.createInstances (../node_modules/@nestjs/core/injector/instance-loader.js:39:9)
      at TestingInstanceLoader.createInstancesOfDependencies (../node_modules/@nestjs/core/injector/instance-loader.js:22:13)
      at TestingInstanceLoader.createInstancesOfDependencies (../node_modules/@nestjs/testing/testing-instance-loader.js:9:9)
      at TestingModuleBuilder.createInstancesOfDependencies (../node_modules/@nestjs/testing/testing-module.builder.js:118:9)
      at TestingModuleBuilder.compile (../node_modules/@nestjs/testing/testing-module.builder.js:74:9)
      at Object.<anonymous> (logging/user-behavior-tracker.service.spec.ts:60:35)

  ● UserBehaviorTracker › extractDeviceInfo › should handle missing request

    Nest can't resolve dependencies of the UserBehaviorTracker (OPENOBSERVE_CONFIG, ?). Please make sure that the argument "USER_BEHAVIOR_TRANSPORT" at index [1] is available in the RootTestModule context.

    Potential solutions:
    - Is RootTestModule a valid NestJS module?
    - If "USER_BEHAVIOR_TRANSPORT" is a provider, is it part of the current RootTestModule?
    - If "USER_BEHAVIOR_TRANSPORT" is exported from a separate @Module, is that module imported within RootTestModule?
      @Module({
        imports: [ /* the Module containing "USER_BEHAVIOR_TRANSPORT" */ ]
      })

    [0m [90m 58 |[39m     } [36mas[39m [33mPartial[39m[33m<[39m[33mRequest[39m[33m>[39m[33m;[39m
     [90m 59 |[39m
    [31m[1m>[22m[39m[90m 60 |[39m     [36mconst[39m module[33m:[39m [33mTestingModule[39m [33m=[39m [36mawait[39m [33mTest[39m[33m.[39mcreateTestingModule({
     [90m    |[39m                                   [31m[1m^[22m[39m
     [90m 61 |[39m       imports[33m:[39m [[33mHttpModule[39m][33m,[39m
     [90m 62 |[39m       providers[33m:[39m [
     [90m 63 |[39m         [33mUserBehaviorTracker[39m[33m,[39m[0m

      at TestingInjector.lookupComponentInParentModules (../node_modules/@nestjs/core/injector/injector.js:286:19)
      at TestingInjector.resolveComponentWrapper (../node_modules/@nestjs/testing/testing-injector.js:19:45)
      at resolveParam (../node_modules/@nestjs/core/injector/injector.js:141:38)
          at async Promise.all (index 1)
      at TestingInjector.resolveConstructorParams (../node_modules/@nestjs/core/injector/injector.js:169:27)
      at TestingInjector.loadInstance (../node_modules/@nestjs/core/injector/injector.js:75:13)
      at TestingInjector.loadProvider (../node_modules/@nestjs/core/injector/injector.js:103:9)
      at ../node_modules/@nestjs/core/injector/instance-loader.js:56:13
          at async Promise.all (index 3)
      at TestingInstanceLoader.createInstancesOfProviders (../node_modules/@nestjs/core/injector/instance-loader.js:55:9)
      at ../node_modules/@nestjs/core/injector/instance-loader.js:40:13
          at async Promise.all (index 1)
      at TestingInstanceLoader.createInstances (../node_modules/@nestjs/core/injector/instance-loader.js:39:9)
      at TestingInstanceLoader.createInstancesOfDependencies (../node_modules/@nestjs/core/injector/instance-loader.js:22:13)
      at TestingInstanceLoader.createInstancesOfDependencies (../node_modules/@nestjs/testing/testing-instance-loader.js:9:9)
      at TestingModuleBuilder.createInstancesOfDependencies (../node_modules/@nestjs/testing/testing-module.builder.js:118:9)
      at TestingModuleBuilder.compile (../node_modules/@nestjs/testing/testing-module.builder.js:74:9)
      at Object.<anonymous> (logging/user-behavior-tracker.service.spec.ts:60:35)

  ● UserBehaviorTracker › getClientIp › should get client IP from x-forwarded-for header

    Nest can't resolve dependencies of the UserBehaviorTracker (OPENOBSERVE_CONFIG, ?). Please make sure that the argument "USER_BEHAVIOR_TRANSPORT" at index [1] is available in the RootTestModule context.

    Potential solutions:
    - Is RootTestModule a valid NestJS module?
    - If "USER_BEHAVIOR_TRANSPORT" is a provider, is it part of the current RootTestModule?
    - If "USER_BEHAVIOR_TRANSPORT" is exported from a separate @Module, is that module imported within RootTestModule?
      @Module({
        imports: [ /* the Module containing "USER_BEHAVIOR_TRANSPORT" */ ]
      })

    [0m [90m 58 |[39m     } [36mas[39m [33mPartial[39m[33m<[39m[33mRequest[39m[33m>[39m[33m;[39m
     [90m 59 |[39m
    [31m[1m>[22m[39m[90m 60 |[39m     [36mconst[39m module[33m:[39m [33mTestingModule[39m [33m=[39m [36mawait[39m [33mTest[39m[33m.[39mcreateTestingModule({
     [90m    |[39m                                   [31m[1m^[22m[39m
     [90m 61 |[39m       imports[33m:[39m [[33mHttpModule[39m][33m,[39m
     [90m 62 |[39m       providers[33m:[39m [
     [90m 63 |[39m         [33mUserBehaviorTracker[39m[33m,[39m[0m

      at TestingInjector.lookupComponentInParentModules (../node_modules/@nestjs/core/injector/injector.js:286:19)
      at TestingInjector.resolveComponentWrapper (../node_modules/@nestjs/testing/testing-injector.js:19:45)
      at resolveParam (../node_modules/@nestjs/core/injector/injector.js:141:38)
          at async Promise.all (index 1)
      at TestingInjector.resolveConstructorParams (../node_modules/@nestjs/core/injector/injector.js:169:27)
      at TestingInjector.loadInstance (../node_modules/@nestjs/core/injector/injector.js:75:13)
      at TestingInjector.loadProvider (../node_modules/@nestjs/core/injector/injector.js:103:9)
      at ../node_modules/@nestjs/core/injector/instance-loader.js:56:13
          at async Promise.all (index 3)
      at TestingInstanceLoader.createInstancesOfProviders (../node_modules/@nestjs/core/injector/instance-loader.js:55:9)
      at ../node_modules/@nestjs/core/injector/instance-loader.js:40:13
          at async Promise.all (index 1)
      at TestingInstanceLoader.createInstances (../node_modules/@nestjs/core/injector/instance-loader.js:39:9)
      at TestingInstanceLoader.createInstancesOfDependencies (../node_modules/@nestjs/core/injector/instance-loader.js:22:13)
      at TestingInstanceLoader.createInstancesOfDependencies (../node_modules/@nestjs/testing/testing-instance-loader.js:9:9)
      at TestingModuleBuilder.createInstancesOfDependencies (../node_modules/@nestjs/testing/testing-module.builder.js:118:9)
      at TestingModuleBuilder.compile (../node_modules/@nestjs/testing/testing-module.builder.js:74:9)
      at Object.<anonymous> (logging/user-behavior-tracker.service.spec.ts:60:35)

  ● UserBehaviorTracker › getClientIp › should get client IP from x-real-ip header

    Nest can't resolve dependencies of the UserBehaviorTracker (OPENOBSERVE_CONFIG, ?). Please make sure that the argument "USER_BEHAVIOR_TRANSPORT" at index [1] is available in the RootTestModule context.

    Potential solutions:
    - Is RootTestModule a valid NestJS module?
    - If "USER_BEHAVIOR_TRANSPORT" is a provider, is it part of the current RootTestModule?
    - If "USER_BEHAVIOR_TRANSPORT" is exported from a separate @Module, is that module imported within RootTestModule?
      @Module({
        imports: [ /* the Module containing "USER_BEHAVIOR_TRANSPORT" */ ]
      })

    [0m [90m 58 |[39m     } [36mas[39m [33mPartial[39m[33m<[39m[33mRequest[39m[33m>[39m[33m;[39m
     [90m 59 |[39m
    [31m[1m>[22m[39m[90m 60 |[39m     [36mconst[39m module[33m:[39m [33mTestingModule[39m [33m=[39m [36mawait[39m [33mTest[39m[33m.[39mcreateTestingModule({
     [90m    |[39m                                   [31m[1m^[22m[39m
     [90m 61 |[39m       imports[33m:[39m [[33mHttpModule[39m][33m,[39m
     [90m 62 |[39m       providers[33m:[39m [
     [90m 63 |[39m         [33mUserBehaviorTracker[39m[33m,[39m[0m

      at TestingInjector.lookupComponentInParentModules (../node_modules/@nestjs/core/injector/injector.js:286:19)
      at TestingInjector.resolveComponentWrapper (../node_modules/@nestjs/testing/testing-injector.js:19:45)
      at resolveParam (../node_modules/@nestjs/core/injector/injector.js:141:38)
          at async Promise.all (index 1)
      at TestingInjector.resolveConstructorParams (../node_modules/@nestjs/core/injector/injector.js:169:27)
      at TestingInjector.loadInstance (../node_modules/@nestjs/core/injector/injector.js:75:13)
      at TestingInjector.loadProvider (../node_modules/@nestjs/core/injector/injector.js:103:9)
      at ../node_modules/@nestjs/core/injector/instance-loader.js:56:13
          at async Promise.all (index 3)
      at TestingInstanceLoader.createInstancesOfProviders (../node_modules/@nestjs/core/injector/instance-loader.js:55:9)
      at ../node_modules/@nestjs/core/injector/instance-loader.js:40:13
          at async Promise.all (index 1)
      at TestingInstanceLoader.createInstances (../node_modules/@nestjs/core/injector/instance-loader.js:39:9)
      at TestingInstanceLoader.createInstancesOfDependencies (../node_modules/@nestjs/core/injector/instance-loader.js:22:13)
      at TestingInstanceLoader.createInstancesOfDependencies (../node_modules/@nestjs/testing/testing-instance-loader.js:9:9)
      at TestingModuleBuilder.createInstancesOfDependencies (../node_modules/@nestjs/testing/testing-module.builder.js:118:9)
      at TestingModuleBuilder.compile (../node_modules/@nestjs/testing/testing-module.builder.js:74:9)
      at Object.<anonymous> (logging/user-behavior-tracker.service.spec.ts:60:35)

  ● UserBehaviorTracker › getClientIp › should return unknown when no IP headers are present

    Nest can't resolve dependencies of the UserBehaviorTracker (OPENOBSERVE_CONFIG, ?). Please make sure that the argument "USER_BEHAVIOR_TRANSPORT" at index [1] is available in the RootTestModule context.

    Potential solutions:
    - Is RootTestModule a valid NestJS module?
    - If "USER_BEHAVIOR_TRANSPORT" is a provider, is it part of the current RootTestModule?
    - If "USER_BEHAVIOR_TRANSPORT" is exported from a separate @Module, is that module imported within RootTestModule?
      @Module({
        imports: [ /* the Module containing "USER_BEHAVIOR_TRANSPORT" */ ]
      })

    [0m [90m 58 |[39m     } [36mas[39m [33mPartial[39m[33m<[39m[33mRequest[39m[33m>[39m[33m;[39m
     [90m 59 |[39m
    [31m[1m>[22m[39m[90m 60 |[39m     [36mconst[39m module[33m:[39m [33mTestingModule[39m [33m=[39m [36mawait[39m [33mTest[39m[33m.[39mcreateTestingModule({
     [90m    |[39m                                   [31m[1m^[22m[39m
     [90m 61 |[39m       imports[33m:[39m [[33mHttpModule[39m][33m,[39m
     [90m 62 |[39m       providers[33m:[39m [
     [90m 63 |[39m         [33mUserBehaviorTracker[39m[33m,[39m[0m

      at TestingInjector.lookupComponentInParentModules (../node_modules/@nestjs/core/injector/injector.js:286:19)
      at TestingInjector.resolveComponentWrapper (../node_modules/@nestjs/testing/testing-injector.js:19:45)
      at resolveParam (../node_modules/@nestjs/core/injector/injector.js:141:38)
          at async Promise.all (index 1)
      at TestingInjector.resolveConstructorParams (../node_modules/@nestjs/core/injector/injector.js:169:27)
      at TestingInjector.loadInstance (../node_modules/@nestjs/core/injector/injector.js:75:13)
      at TestingInjector.loadProvider (../node_modules/@nestjs/core/injector/injector.js:103:9)
      at ../node_modules/@nestjs/core/injector/instance-loader.js:56:13
          at async Promise.all (index 3)
      at TestingInstanceLoader.createInstancesOfProviders (../node_modules/@nestjs/core/injector/instance-loader.js:55:9)
      at ../node_modules/@nestjs/core/injector/instance-loader.js:40:13
          at async Promise.all (index 1)
      at TestingInstanceLoader.createInstances (../node_modules/@nestjs/core/injector/instance-loader.js:39:9)
      at TestingInstanceLoader.createInstancesOfDependencies (../node_modules/@nestjs/core/injector/instance-loader.js:22:13)
      at TestingInstanceLoader.createInstancesOfDependencies (../node_modules/@nestjs/testing/testing-instance-loader.js:9:9)
      at TestingModuleBuilder.createInstancesOfDependencies (../node_modules/@nestjs/testing/testing-module.builder.js:118:9)
      at TestingModuleBuilder.compile (../node_modules/@nestjs/testing/testing-module.builder.js:74:9)
      at Object.<anonymous> (logging/user-behavior-tracker.service.spec.ts:60:35)

FAIL src/monitoring/monitoring.service.spec.ts
  MonitoringService
    √ should be defined (12 ms)
    recordApiCall
      √ should record API call metrics (7 ms)
      √ should log slow requests (15 ms)
    getMetrics
      √ should return current metrics (9 ms)
      √ should calculate average response time correctly (6 ms)
      √ should calculate error rate correctly (6 ms)
    healthCheck
      √ should return healthy status when metrics are good (6 ms)
      √ should return degraded status when error rate is high (5 ms)
      √ should return critical status when memory usage is high (5 ms)
      √ should return critical status when CPU load is high (6 ms)
    observeDbQuery
      √ should record database query metrics (5 ms)
    recordCacheHit
      √ should record cache hit (5 ms)
    recordCacheMiss
      √ should record cache miss (13 ms)
    incrementActiveConnections
      × should increment active connections (5 ms)
    decrementActiveConnections
      × should decrement active connections (5 ms)
    generatePerformanceReport
      × should generate performance report (5 ms)
      √ should return no_data status when no metrics are available (5 ms)
    getMetricsHistory
      √ should get metrics history for day period by default (5 ms)
      √ should get metrics history for hour period (5 ms)
      √ should get metrics history for week period (5 ms)
    getApplicationStatus
      √ should return application status (6 ms)
    logAuditLog
      √ should log audit event (6 ms)
    logSecurityEvent
      √ should log security event (6 ms)

  ● MonitoringService › incrementActiveConnections › should increment active connections

    TypeError: Cannot read properties of undefined (reading 'activeConnections')

    [0m [90m 166 |[39m   incrementActiveConnections() {
     [90m 167 |[39m     [36mthis[39m[33m.[39mmetricsService[33m.[39mupdateActiveConnections(
    [31m[1m>[22m[39m[90m 168 |[39m       [36mthis[39m[33m.[39mmetricsService[[32m'metrics'[39m][33m.[39mactiveConnections [33m+[39m [35m1[39m[33m,[39m
     [90m     |[39m                                      [31m[1m^[22m[39m
     [90m 169 |[39m     )[33m;[39m
     [90m 170 |[39m   }
     [90m 171 |[39m[0m

      at MonitoringService.incrementActiveConnections (monitoring/monitoring.service.ts:168:38)
      at Object.<anonymous> (monitoring/monitoring.service.spec.ts:235:15)

  ● MonitoringService › decrementActiveConnections › should decrement active connections

    TypeError: Cannot read properties of undefined (reading 'activeConnections')

    [0m [90m 172 |[39m   decrementActiveConnections() {
     [90m 173 |[39m     [36mthis[39m[33m.[39mmetricsService[33m.[39mupdateActiveConnections(
    [31m[1m>[22m[39m[90m 174 |[39m       [33mMath[39m[33m.[39mmax([35m0[39m[33m,[39m [36mthis[39m[33m.[39mmetricsService[[32m'metrics'[39m][33m.[39mactiveConnections [33m-[39m [35m1[39m)[33m,[39m
     [90m     |[39m                                                  [31m[1m^[22m[39m
     [90m 175 |[39m     )[33m;[39m
     [90m 176 |[39m   }
     [90m 177 |[39m[0m

      at MonitoringService.decrementActiveConnections (monitoring/monitoring.service.ts:174:50)
      at Object.<anonymous> (monitoring/monitoring.service.spec.ts:243:15)

  ● MonitoringService › generatePerformanceReport › should generate performance report

    expect(received).toHaveProperty(path)

    Expected path: "period"
    Received path: []

    Received value: {"message": "No metrics data available for the selected period", "status": "no_data"}

    [0m [90m 252 |[39m
     [90m 253 |[39m       expect(report)[33m.[39mtoBeDefined()[33m;[39m
    [31m[1m>[22m[39m[90m 254 |[39m       expect(report)[33m.[39mtoHaveProperty([32m'period'[39m)[33m;[39m
     [90m     |[39m                      [31m[1m^[22m[39m
     [90m 255 |[39m       expect(report)[33m.[39mtoHaveProperty([32m'generatedAt'[39m)[33m;[39m
     [90m 256 |[39m       expect(report)[33m.[39mtoHaveProperty([32m'daily'[39m)[33m;[39m
     [90m 257 |[39m       expect(report)[33m.[39mtoHaveProperty([32m'weekly'[39m)[33m;[39m[0m

      at Object.<anonymous> (monitoring/monitoring.service.spec.ts:254:22)

FAIL src/logging/business-logger.service.spec.ts
  BusinessLoggerService
    × should be defined (11 ms)
    logUserAction
      × should log user action correctly (17 ms)
    logOrderEvent
      × should log order event correctly (9 ms)
    logPaymentEvent
      × should log payment event correctly (11 ms)
    logInventoryEvent
      × should log inventory event correctly (6 ms)
    logSystemEvent
      × should log system event correctly (6 ms)
    logError
      × should log error correctly (7 ms)
    flush
      × should flush logs without errors (6 ms)

  ● BusinessLoggerService › should be defined

    Nest can't resolve dependencies of the BusinessLoggerService (OPENOBSERVE_CONFIG, ?). Please make sure that the argument "OPENOBSERVE_TRANSPORT" at index [1] is available in the RootTestModule context.

    Potential solutions:
    - Is RootTestModule a valid NestJS module?
    - If "OPENOBSERVE_TRANSPORT" is a provider, is it part of the current RootTestModule?
    - If "OPENOBSERVE_TRANSPORT" is exported from a separate @Module, is that module imported within RootTestModule?
      @Module({
        imports: [ /* the Module containing "OPENOBSERVE_TRANSPORT" */ ]
      })

    [0m [90m 46 |[39m     }[33m;[39m
     [90m 47 |[39m
    [31m[1m>[22m[39m[90m 48 |[39m     [36mconst[39m module[33m:[39m [33mTestingModule[39m [33m=[39m [36mawait[39m [33mTest[39m[33m.[39mcreateTestingModule({
     [90m    |[39m                                   [31m[1m^[22m[39m
     [90m 49 |[39m       imports[33m:[39m [[33mHttpModule[39m][33m,[39m
     [90m 50 |[39m       providers[33m:[39m [
     [90m 51 |[39m         [33mBusinessLoggerService[39m[33m,[39m[0m

      at TestingInjector.lookupComponentInParentModules (../node_modules/@nestjs/core/injector/injector.js:286:19)
      at TestingInjector.resolveComponentWrapper (../node_modules/@nestjs/testing/testing-injector.js:19:45)
      at resolveParam (../node_modules/@nestjs/core/injector/injector.js:141:38)
          at async Promise.all (index 1)
      at TestingInjector.resolveConstructorParams (../node_modules/@nestjs/core/injector/injector.js:169:27)
      at TestingInjector.loadInstance (../node_modules/@nestjs/core/injector/injector.js:75:13)
      at TestingInjector.loadProvider (../node_modules/@nestjs/core/injector/injector.js:103:9)
      at ../node_modules/@nestjs/core/injector/instance-loader.js:56:13
          at async Promise.all (index 3)
      at TestingInstanceLoader.createInstancesOfProviders (../node_modules/@nestjs/core/injector/instance-loader.js:55:9)
      at ../node_modules/@nestjs/core/injector/instance-loader.js:40:13
          at async Promise.all (index 1)
      at TestingInstanceLoader.createInstances (../node_modules/@nestjs/core/injector/instance-loader.js:39:9)
      at TestingInstanceLoader.createInstancesOfDependencies (../node_modules/@nestjs/core/injector/instance-loader.js:22:13)
      at TestingInstanceLoader.createInstancesOfDependencies (../node_modules/@nestjs/testing/testing-instance-loader.js:9:9)
      at TestingModuleBuilder.createInstancesOfDependencies (../node_modules/@nestjs/testing/testing-module.builder.js:118:9)
      at TestingModuleBuilder.compile (../node_modules/@nestjs/testing/testing-module.builder.js:74:9)
      at Object.<anonymous> (logging/business-logger.service.spec.ts:48:35)

  ● BusinessLoggerService › logUserAction › should log user action correctly

    Nest can't resolve dependencies of the BusinessLoggerService (OPENOBSERVE_CONFIG, ?). Please make sure that the argument "OPENOBSERVE_TRANSPORT" at index [1] is available in the RootTestModule context.

    Potential solutions:
    - Is RootTestModule a valid NestJS module?
    - If "OPENOBSERVE_TRANSPORT" is a provider, is it part of the current RootTestModule?
    - If "OPENOBSERVE_TRANSPORT" is exported from a separate @Module, is that module imported within RootTestModule?
      @Module({
        imports: [ /* the Module containing "OPENOBSERVE_TRANSPORT" */ ]
      })

    [0m [90m 46 |[39m     }[33m;[39m
     [90m 47 |[39m
    [31m[1m>[22m[39m[90m 48 |[39m     [36mconst[39m module[33m:[39m [33mTestingModule[39m [33m=[39m [36mawait[39m [33mTest[39m[33m.[39mcreateTestingModule({
     [90m    |[39m                                   [31m[1m^[22m[39m
     [90m 49 |[39m       imports[33m:[39m [[33mHttpModule[39m][33m,[39m
     [90m 50 |[39m       providers[33m:[39m [
     [90m 51 |[39m         [33mBusinessLoggerService[39m[33m,[39m[0m

      at TestingInjector.lookupComponentInParentModules (../node_modules/@nestjs/core/injector/injector.js:286:19)
      at TestingInjector.resolveComponentWrapper (../node_modules/@nestjs/testing/testing-injector.js:19:45)
      at resolveParam (../node_modules/@nestjs/core/injector/injector.js:141:38)
          at async Promise.all (index 1)
      at TestingInjector.resolveConstructorParams (../node_modules/@nestjs/core/injector/injector.js:169:27)
      at TestingInjector.loadInstance (../node_modules/@nestjs/core/injector/injector.js:75:13)
      at TestingInjector.loadProvider (../node_modules/@nestjs/core/injector/injector.js:103:9)
      at ../node_modules/@nestjs/core/injector/instance-loader.js:56:13
          at async Promise.all (index 3)
      at TestingInstanceLoader.createInstancesOfProviders (../node_modules/@nestjs/core/injector/instance-loader.js:55:9)
      at ../node_modules/@nestjs/core/injector/instance-loader.js:40:13
          at async Promise.all (index 1)
      at TestingInstanceLoader.createInstances (../node_modules/@nestjs/core/injector/instance-loader.js:39:9)
      at TestingInstanceLoader.createInstancesOfDependencies (../node_modules/@nestjs/core/injector/instance-loader.js:22:13)
      at TestingInstanceLoader.createInstancesOfDependencies (../node_modules/@nestjs/testing/testing-instance-loader.js:9:9)
      at TestingModuleBuilder.createInstancesOfDependencies (../node_modules/@nestjs/testing/testing-module.builder.js:118:9)
      at TestingModuleBuilder.compile (../node_modules/@nestjs/testing/testing-module.builder.js:74:9)
      at Object.<anonymous> (logging/business-logger.service.spec.ts:48:35)

  ● BusinessLoggerService › logOrderEvent › should log order event correctly

    Nest can't resolve dependencies of the BusinessLoggerService (OPENOBSERVE_CONFIG, ?). Please make sure that the argument "OPENOBSERVE_TRANSPORT" at index [1] is available in the RootTestModule context.

    Potential solutions:
    - Is RootTestModule a valid NestJS module?
    - If "OPENOBSERVE_TRANSPORT" is a provider, is it part of the current RootTestModule?
    - If "OPENOBSERVE_TRANSPORT" is exported from a separate @Module, is that module imported within RootTestModule?
      @Module({
        imports: [ /* the Module containing "OPENOBSERVE_TRANSPORT" */ ]
      })

    [0m [90m 46 |[39m     }[33m;[39m
     [90m 47 |[39m
    [31m[1m>[22m[39m[90m 48 |[39m     [36mconst[39m module[33m:[39m [33mTestingModule[39m [33m=[39m [36mawait[39m [33mTest[39m[33m.[39mcreateTestingModule({
     [90m    |[39m                                   [31m[1m^[22m[39m
     [90m 49 |[39m       imports[33m:[39m [[33mHttpModule[39m][33m,[39m
     [90m 50 |[39m       providers[33m:[39m [
     [90m 51 |[39m         [33mBusinessLoggerService[39m[33m,[39m[0m

      at TestingInjector.lookupComponentInParentModules (../node_modules/@nestjs/core/injector/injector.js:286:19)
      at TestingInjector.resolveComponentWrapper (../node_modules/@nestjs/testing/testing-injector.js:19:45)
      at resolveParam (../node_modules/@nestjs/core/injector/injector.js:141:38)
          at async Promise.all (index 1)
      at TestingInjector.resolveConstructorParams (../node_modules/@nestjs/core/injector/injector.js:169:27)
      at TestingInjector.loadInstance (../node_modules/@nestjs/core/injector/injector.js:75:13)
      at TestingInjector.loadProvider (../node_modules/@nestjs/core/injector/injector.js:103:9)
      at ../node_modules/@nestjs/core/injector/instance-loader.js:56:13
          at async Promise.all (index 3)
      at TestingInstanceLoader.createInstancesOfProviders (../node_modules/@nestjs/core/injector/instance-loader.js:55:9)
      at ../node_modules/@nestjs/core/injector/instance-loader.js:40:13
          at async Promise.all (index 1)
      at TestingInstanceLoader.createInstances (../node_modules/@nestjs/core/injector/instance-loader.js:39:9)
      at TestingInstanceLoader.createInstancesOfDependencies (../node_modules/@nestjs/core/injector/instance-loader.js:22:13)
      at TestingInstanceLoader.createInstancesOfDependencies (../node_modules/@nestjs/testing/testing-instance-loader.js:9:9)
      at TestingModuleBuilder.createInstancesOfDependencies (../node_modules/@nestjs/testing/testing-module.builder.js:118:9)
      at TestingModuleBuilder.compile (../node_modules/@nestjs/testing/testing-module.builder.js:74:9)
      at Object.<anonymous> (logging/business-logger.service.spec.ts:48:35)

  ● BusinessLoggerService › logPaymentEvent › should log payment event correctly

    Nest can't resolve dependencies of the BusinessLoggerService (OPENOBSERVE_CONFIG, ?). Please make sure that the argument "OPENOBSERVE_TRANSPORT" at index [1] is available in the RootTestModule context.

    Potential solutions:
    - Is RootTestModule a valid NestJS module?
    - If "OPENOBSERVE_TRANSPORT" is a provider, is it part of the current RootTestModule?
    - If "OPENOBSERVE_TRANSPORT" is exported from a separate @Module, is that module imported within RootTestModule?
      @Module({
        imports: [ /* the Module containing "OPENOBSERVE_TRANSPORT" */ ]
      })

    [0m [90m 46 |[39m     }[33m;[39m
     [90m 47 |[39m
    [31m[1m>[22m[39m[90m 48 |[39m     [36mconst[39m module[33m:[39m [33mTestingModule[39m [33m=[39m [36mawait[39m [33mTest[39m[33m.[39mcreateTestingModule({
     [90m    |[39m                                   [31m[1m^[22m[39m
     [90m 49 |[39m       imports[33m:[39m [[33mHttpModule[39m][33m,[39m
     [90m 50 |[39m       providers[33m:[39m [
     [90m 51 |[39m         [33mBusinessLoggerService[39m[33m,[39m[0m

      at TestingInjector.lookupComponentInParentModules (../node_modules/@nestjs/core/injector/injector.js:286:19)
      at TestingInjector.resolveComponentWrapper (../node_modules/@nestjs/testing/testing-injector.js:19:45)
      at resolveParam (../node_modules/@nestjs/core/injector/injector.js:141:38)
          at async Promise.all (index 1)
      at TestingInjector.resolveConstructorParams (../node_modules/@nestjs/core/injector/injector.js:169:27)
      at TestingInjector.loadInstance (../node_modules/@nestjs/core/injector/injector.js:75:13)
      at TestingInjector.loadProvider (../node_modules/@nestjs/core/injector/injector.js:103:9)
      at ../node_modules/@nestjs/core/injector/instance-loader.js:56:13
          at async Promise.all (index 3)
      at TestingInstanceLoader.createInstancesOfProviders (../node_modules/@nestjs/core/injector/instance-loader.js:55:9)
      at ../node_modules/@nestjs/core/injector/instance-loader.js:40:13
          at async Promise.all (index 1)
      at TestingInstanceLoader.createInstances (../node_modules/@nestjs/core/injector/instance-loader.js:39:9)
      at TestingInstanceLoader.createInstancesOfDependencies (../node_modules/@nestjs/core/injector/instance-loader.js:22:13)
      at TestingInstanceLoader.createInstancesOfDependencies (../node_modules/@nestjs/testing/testing-instance-loader.js:9:9)
      at TestingModuleBuilder.createInstancesOfDependencies (../node_modules/@nestjs/testing/testing-module.builder.js:118:9)
      at TestingModuleBuilder.compile (../node_modules/@nestjs/testing/testing-module.builder.js:74:9)
      at Object.<anonymous> (logging/business-logger.service.spec.ts:48:35)

  ● BusinessLoggerService › logInventoryEvent › should log inventory event correctly

    Nest can't resolve dependencies of the BusinessLoggerService (OPENOBSERVE_CONFIG, ?). Please make sure that the argument "OPENOBSERVE_TRANSPORT" at index [1] is available in the RootTestModule context.

    Potential solutions:
    - Is RootTestModule a valid NestJS module?
    - If "OPENOBSERVE_TRANSPORT" is a provider, is it part of the current RootTestModule?
    - If "OPENOBSERVE_TRANSPORT" is exported from a separate @Module, is that module imported within RootTestModule?
      @Module({
        imports: [ /* the Module containing "OPENOBSERVE_TRANSPORT" */ ]
      })

    [0m [90m 46 |[39m     }[33m;[39m
     [90m 47 |[39m
    [31m[1m>[22m[39m[90m 48 |[39m     [36mconst[39m module[33m:[39m [33mTestingModule[39m [33m=[39m [36mawait[39m [33mTest[39m[33m.[39mcreateTestingModule({
     [90m    |[39m                                   [31m[1m^[22m[39m
     [90m 49 |[39m       imports[33m:[39m [[33mHttpModule[39m][33m,[39m
     [90m 50 |[39m       providers[33m:[39m [
     [90m 51 |[39m         [33mBusinessLoggerService[39m[33m,[39m[0m

      at TestingInjector.lookupComponentInParentModules (../node_modules/@nestjs/core/injector/injector.js:286:19)
      at TestingInjector.resolveComponentWrapper (../node_modules/@nestjs/testing/testing-injector.js:19:45)
      at resolveParam (../node_modules/@nestjs/core/injector/injector.js:141:38)
          at async Promise.all (index 1)
      at TestingInjector.resolveConstructorParams (../node_modules/@nestjs/core/injector/injector.js:169:27)
      at TestingInjector.loadInstance (../node_modules/@nestjs/core/injector/injector.js:75:13)
      at TestingInjector.loadProvider (../node_modules/@nestjs/core/injector/injector.js:103:9)
      at ../node_modules/@nestjs/core/injector/instance-loader.js:56:13
          at async Promise.all (index 3)
      at TestingInstanceLoader.createInstancesOfProviders (../node_modules/@nestjs/core/injector/instance-loader.js:55:9)
      at ../node_modules/@nestjs/core/injector/instance-loader.js:40:13
          at async Promise.all (index 1)
      at TestingInstanceLoader.createInstances (../node_modules/@nestjs/core/injector/instance-loader.js:39:9)
      at TestingInstanceLoader.createInstancesOfDependencies (../node_modules/@nestjs/core/injector/instance-loader.js:22:13)
      at TestingInstanceLoader.createInstancesOfDependencies (../node_modules/@nestjs/testing/testing-instance-loader.js:9:9)
      at TestingModuleBuilder.createInstancesOfDependencies (../node_modules/@nestjs/testing/testing-module.builder.js:118:9)
      at TestingModuleBuilder.compile (../node_modules/@nestjs/testing/testing-module.builder.js:74:9)
      at Object.<anonymous> (logging/business-logger.service.spec.ts:48:35)

  ● BusinessLoggerService › logSystemEvent › should log system event correctly

    Nest can't resolve dependencies of the BusinessLoggerService (OPENOBSERVE_CONFIG, ?). Please make sure that the argument "OPENOBSERVE_TRANSPORT" at index [1] is available in the RootTestModule context.

    Potential solutions:
    - Is RootTestModule a valid NestJS module?
    - If "OPENOBSERVE_TRANSPORT" is a provider, is it part of the current RootTestModule?
    - If "OPENOBSERVE_TRANSPORT" is exported from a separate @Module, is that module imported within RootTestModule?
      @Module({
        imports: [ /* the Module containing "OPENOBSERVE_TRANSPORT" */ ]
      })

    [0m [90m 46 |[39m     }[33m;[39m
     [90m 47 |[39m
    [31m[1m>[22m[39m[90m 48 |[39m     [36mconst[39m module[33m:[39m [33mTestingModule[39m [33m=[39m [36mawait[39m [33mTest[39m[33m.[39mcreateTestingModule({
     [90m    |[39m                                   [31m[1m^[22m[39m
     [90m 49 |[39m       imports[33m:[39m [[33mHttpModule[39m][33m,[39m
     [90m 50 |[39m       providers[33m:[39m [
     [90m 51 |[39m         [33mBusinessLoggerService[39m[33m,[39m[0m

      at TestingInjector.lookupComponentInParentModules (../node_modules/@nestjs/core/injector/injector.js:286:19)
      at TestingInjector.resolveComponentWrapper (../node_modules/@nestjs/testing/testing-injector.js:19:45)
      at resolveParam (../node_modules/@nestjs/core/injector/injector.js:141:38)
          at async Promise.all (index 1)
      at TestingInjector.resolveConstructorParams (../node_modules/@nestjs/core/injector/injector.js:169:27)
      at TestingInjector.loadInstance (../node_modules/@nestjs/core/injector/injector.js:75:13)
      at TestingInjector.loadProvider (../node_modules/@nestjs/core/injector/injector.js:103:9)
      at ../node_modules/@nestjs/core/injector/instance-loader.js:56:13
          at async Promise.all (index 3)
      at TestingInstanceLoader.createInstancesOfProviders (../node_modules/@nestjs/core/injector/instance-loader.js:55:9)
      at ../node_modules/@nestjs/core/injector/instance-loader.js:40:13
          at async Promise.all (index 1)
      at TestingInstanceLoader.createInstances (../node_modules/@nestjs/core/injector/instance-loader.js:39:9)
      at TestingInstanceLoader.createInstancesOfDependencies (../node_modules/@nestjs/core/injector/instance-loader.js:22:13)
      at TestingInstanceLoader.createInstancesOfDependencies (../node_modules/@nestjs/testing/testing-instance-loader.js:9:9)
      at TestingModuleBuilder.createInstancesOfDependencies (../node_modules/@nestjs/testing/testing-module.builder.js:118:9)
      at TestingModuleBuilder.compile (../node_modules/@nestjs/testing/testing-module.builder.js:74:9)
      at Object.<anonymous> (logging/business-logger.service.spec.ts:48:35)

  ● BusinessLoggerService › logError › should log error correctly

    Nest can't resolve dependencies of the BusinessLoggerService (OPENOBSERVE_CONFIG, ?). Please make sure that the argument "OPENOBSERVE_TRANSPORT" at index [1] is available in the RootTestModule context.

    Potential solutions:
    - Is RootTestModule a valid NestJS module?
    - If "OPENOBSERVE_TRANSPORT" is a provider, is it part of the current RootTestModule?
    - If "OPENOBSERVE_TRANSPORT" is exported from a separate @Module, is that module imported within RootTestModule?
      @Module({
        imports: [ /* the Module containing "OPENOBSERVE_TRANSPORT" */ ]
      })

    [0m [90m 46 |[39m     }[33m;[39m
     [90m 47 |[39m
    [31m[1m>[22m[39m[90m 48 |[39m     [36mconst[39m module[33m:[39m [33mTestingModule[39m [33m=[39m [36mawait[39m [33mTest[39m[33m.[39mcreateTestingModule({
     [90m    |[39m                                   [31m[1m^[22m[39m
     [90m 49 |[39m       imports[33m:[39m [[33mHttpModule[39m][33m,[39m
     [90m 50 |[39m       providers[33m:[39m [
     [90m 51 |[39m         [33mBusinessLoggerService[39m[33m,[39m[0m

      at TestingInjector.lookupComponentInParentModules (../node_modules/@nestjs/core/injector/injector.js:286:19)
      at TestingInjector.resolveComponentWrapper (../node_modules/@nestjs/testing/testing-injector.js:19:45)
      at resolveParam (../node_modules/@nestjs/core/injector/injector.js:141:38)
          at async Promise.all (index 1)
      at TestingInjector.resolveConstructorParams (../node_modules/@nestjs/core/injector/injector.js:169:27)
      at TestingInjector.loadInstance (../node_modules/@nestjs/core/injector/injector.js:75:13)
      at TestingInjector.loadProvider (../node_modules/@nestjs/core/injector/injector.js:103:9)
      at ../node_modules/@nestjs/core/injector/instance-loader.js:56:13
          at async Promise.all (index 3)
      at TestingInstanceLoader.createInstancesOfProviders (../node_modules/@nestjs/core/injector/instance-loader.js:55:9)
      at ../node_modules/@nestjs/core/injector/instance-loader.js:40:13
          at async Promise.all (index 1)
      at TestingInstanceLoader.createInstances (../node_modules/@nestjs/core/injector/instance-loader.js:39:9)
      at TestingInstanceLoader.createInstancesOfDependencies (../node_modules/@nestjs/core/injector/instance-loader.js:22:13)
      at TestingInstanceLoader.createInstancesOfDependencies (../node_modules/@nestjs/testing/testing-instance-loader.js:9:9)
      at TestingModuleBuilder.createInstancesOfDependencies (../node_modules/@nestjs/testing/testing-module.builder.js:118:9)
      at TestingModuleBuilder.compile (../node_modules/@nestjs/testing/testing-module.builder.js:74:9)
      at Object.<anonymous> (logging/business-logger.service.spec.ts:48:35)

  ● BusinessLoggerService › flush › should flush logs without errors

    Nest can't resolve dependencies of the BusinessLoggerService (OPENOBSERVE_CONFIG, ?). Please make sure that the argument "OPENOBSERVE_TRANSPORT" at index [1] is available in the RootTestModule context.

    Potential solutions:
    - Is RootTestModule a valid NestJS module?
    - If "OPENOBSERVE_TRANSPORT" is a provider, is it part of the current RootTestModule?
    - If "OPENOBSERVE_TRANSPORT" is exported from a separate @Module, is that module imported within RootTestModule?
      @Module({
        imports: [ /* the Module containing "OPENOBSERVE_TRANSPORT" */ ]
      })

    [0m [90m 46 |[39m     }[33m;[39m
     [90m 47 |[39m
    [31m[1m>[22m[39m[90m 48 |[39m     [36mconst[39m module[33m:[39m [33mTestingModule[39m [33m=[39m [36mawait[39m [33mTest[39m[33m.[39mcreateTestingModule({
     [90m    |[39m                                   [31m[1m^[22m[39m
     [90m 49 |[39m       imports[33m:[39m [[33mHttpModule[39m][33m,[39m
     [90m 50 |[39m       providers[33m:[39m [
     [90m 51 |[39m         [33mBusinessLoggerService[39m[33m,[39m[0m

      at TestingInjector.lookupComponentInParentModules (../node_modules/@nestjs/core/injector/injector.js:286:19)
      at TestingInjector.resolveComponentWrapper (../node_modules/@nestjs/testing/testing-injector.js:19:45)
      at resolveParam (../node_modules/@nestjs/core/injector/injector.js:141:38)
          at async Promise.all (index 1)
      at TestingInjector.resolveConstructorParams (../node_modules/@nestjs/core/injector/injector.js:169:27)
      at TestingInjector.loadInstance (../node_modules/@nestjs/core/injector/injector.js:75:13)
      at TestingInjector.loadProvider (../node_modules/@nestjs/core/injector/injector.js:103:9)
      at ../node_modules/@nestjs/core/injector/instance-loader.js:56:13
          at async Promise.all (index 3)
      at TestingInstanceLoader.createInstancesOfProviders (../node_modules/@nestjs/core/injector/instance-loader.js:55:9)
      at ../node_modules/@nestjs/core/injector/instance-loader.js:40:13
          at async Promise.all (index 1)
      at TestingInstanceLoader.createInstances (../node_modules/@nestjs/core/injector/instance-loader.js:39:9)
      at TestingInstanceLoader.createInstancesOfDependencies (../node_modules/@nestjs/core/injector/instance-loader.js:22:13)
      at TestingInstanceLoader.createInstancesOfDependencies (../node_modules/@nestjs/testing/testing-instance-loader.js:9:9)
      at TestingModuleBuilder.createInstancesOfDependencies (../node_modules/@nestjs/testing/testing-module.builder.js:118:9)
      at TestingModuleBuilder.compile (../node_modules/@nestjs/testing/testing-module.builder.js:74:9)
      at Object.<anonymous> (logging/business-logger.service.spec.ts:48:35)

[31m[Nest] 14512  - [39m2025/10/09 15:44:24 [31m  ERROR[39m [38;5;3m[LogAnalyticsService] [39m[31mFailed to get log stats[39m
TypeError: Cannot read properties of null (reading 'hits')
    at LogAnalyticsService.formatStatsResult (D:\onlinestore\backend\src\logging\log-analytics.service.ts:274:19)
    at LogAnalyticsService.getLogStats (D:\onlinestore\backend\src\logging\log-analytics.service.ts:44:19)
    at Object.<anonymous> (D:\onlinestore\backend\src\logging\log-analytics.service.spec.ts:160:7)
FAIL src/logging/log-analytics.service.spec.ts
  LogAnalyticsService
    √ should be defined (10 ms)
    getLogStats
      × should return log stats successfully (9 ms)
      × should throw error when request fails (16 ms)
    getUserBehaviorAnalytics
      × should return user behavior analytics successfully (12 ms)
    detectAnomalousPatterns
      × should return anomaly detection results successfully (9 ms)
    getPopularPages
      × should return popular pages successfully (6 ms)
    getConversionFunnel
      × should return conversion funnel successfully (6 ms)
    calculateSeverity
      √ should return low severity for percentage < 0.1 (5 ms)
      √ should return medium severity for percentage < 0.2 (6 ms)
      √ should return high severity for percentage < 0.5 (9 ms)
      √ should return critical severity for percentage >= 0.5 (7 ms)

  ● LogAnalyticsService › getLogStats › should return log stats successfully

    expect(jest.fn()).toHaveBeenCalledWith(...expected)

    - Expected
    + Received

      "http://localhost:5080/api/test-org/_search",
      {"query": "
          SELECT 
            level,
            category,
            COUNT(*) as count,
            COUNT(DISTINCT userId) as unique_users
          FROM business-events 
          WHERE timestamp >= '2023-01-01T00:00:00Z' AND timestamp <= '2023-01-02T00:00:00Z' AND level = 'INFO'
          GROUP BY level, category
          ORDER BY count DESC
        "},
      Object {
        "headers": Object {
          "Authorization": "Bearer test-token",
          "Content-Type": "application/json",
        },
    +   "timeout": 30000,
      },

    Number of calls: 1

    [0m [90m 129 |[39m       })[33m;[39m
     [90m 130 |[39m
    [31m[1m>[22m[39m[90m 131 |[39m       expect(mockHttpService[33m.[39mpost)[33m.[39mtoHaveBeenCalledWith(
     [90m     |[39m                                    [31m[1m^[22m[39m
     [90m 132 |[39m         [32m`${mockConfig.url}/api/${mockConfig.organization}/_search`[39m[33m,[39m
     [90m 133 |[39m         {
     [90m 134 |[39m           query[33m:[39m [32m`[39m[0m

      at Object.<anonymous> (logging/log-analytics.service.spec.ts:131:36)

  ● LogAnalyticsService › getLogStats › should throw error when request fails

    expect(received).rejects.toThrow(expected)

    Expected substring: "No response received from OpenObserve"
    Received message:   "Cannot read properties of null (reading 'hits')"

        [0m [90m 272 |[39m   [36mprivate[39m formatStatsResult(data[33m:[39m any)[33m:[39m [33mLogStatsResult[39m {
         [90m 273 |[39m     [36mreturn[39m {
        [31m[1m>[22m[39m[90m 274 |[39m       total[33m:[39m data[33m.[39mhits[33m?[39m[33m.[39mtotal[33m?[39m[33m.[39mvalue [33m||[39m [35m0[39m[33m,[39m
         [90m     |[39m                   [31m[1m^[22m[39m
         [90m 275 |[39m       stats[33m:[39m data[33m.[39mhits[33m?[39m[33m.[39mhits[33m?[39m[33m.[39mmap((hit[33m:[39m any) [33m=>[39m hit[33m.[39m_source) [33m||[39m [][33m,[39m
         [90m 276 |[39m       aggregations[33m:[39m data[33m.[39maggregations [33m||[39m {}[33m,[39m
         [90m 277 |[39m     }[33m;[39m[0m

      at LogAnalyticsService.formatStatsResult (logging/log-analytics.service.ts:274:19)
      at LogAnalyticsService.getLogStats (logging/log-analytics.service.ts:44:19)
      at Object.<anonymous> (logging/log-analytics.service.spec.ts:160:7)
      at Object.toThrow (../node_modules/expect/build/index.js:2155:20)
      at Object.<anonymous> (logging/log-analytics.service.spec.ts:160:60)

  ● LogAnalyticsService › getUserBehaviorAnalytics › should return user behavior analytics successfully

    expect(jest.fn()).toHaveBeenCalledWith(...expected)

    - Expected
    + Received

      "http://localhost:5080/api/test-org/_search",
      {"query": "
          SELECT 
            eventType,
            COUNT(*) as count,
            COUNT(DISTINCT sessionId) as unique_sessions,
            COUNT(DISTINCT userId) as unique_users
          FROM user-behavior 
          WHERE timestamp >= '2023-01-01T00:00:00Z' AND timestamp <= '2023-01-02T00:00:00Z' AND userId = 'user123'
          GROUP BY eventType
          ORDER BY count DESC
        "},
      Object {
        "headers": Object {
          "Authorization": "Bearer test-token",
          "Content-Type": "application/json",
        },
    +   "timeout": 30000,
      },

    Number of calls: 1

    [0m [90m 217 |[39m       })[33m;[39m
     [90m 218 |[39m
    [31m[1m>[22m[39m[90m 219 |[39m       expect(mockHttpService[33m.[39mpost)[33m.[39mtoHaveBeenCalledWith(
     [90m     |[39m                                    [31m[1m^[22m[39m
     [90m 220 |[39m         [32m`${mockConfig.url}/api/${mockConfig.organization}/_search`[39m[33m,[39m
     [90m 221 |[39m         {
     [90m 222 |[39m           query[33m:[39m [32m`[39m[0m

      at Object.<anonymous> (logging/log-analytics.service.spec.ts:219:36)

  ● LogAnalyticsService › detectAnomalousPatterns › should return anomaly detection results successfully

    expect(jest.fn()).toHaveBeenCalledWith(...expected)

    - Expected
    + Received

      "http://localhost:5080/api/test-org/_search",
      {"query": "
          SELECT 
            level,
            category,
            action,
            COUNT(*) as count,
            COUNT(*) / (SELECT COUNT(*) FROM business-events WHERE timestamp >= '2023-01-01T00:00:00Z' AND timestamp <= '2023-01-02T00:00:00Z') as percentage
          FROM business-events 
          WHERE timestamp >= '2023-01-01T00:00:00Z' AND timestamp <= '2023-01-02T00:00:00Z' AND level = 'ERROR'
          GROUP BY level, category, action
          HAVING percentage > 0.05  -- 超过5%的错误率视为异常
          ORDER BY percentage DESC
        "},
      Object {
        "headers": Object {
          "Authorization": "Bearer test-token",
          "Content-Type": "application/json",
        },
    +   "timeout": 30000,
      },

    Number of calls: 1

    [0m [90m 300 |[39m       })[33m;[39m
     [90m 301 |[39m
    [31m[1m>[22m[39m[90m 302 |[39m       expect(mockHttpService[33m.[39mpost)[33m.[39mtoHaveBeenCalledWith(
     [90m     |[39m                                    [31m[1m^[22m[39m
     [90m 303 |[39m         [32m`${mockConfig.url}/api/${mockConfig.organization}/_search`[39m[33m,[39m
     [90m 304 |[39m         {
     [90m 305 |[39m           query[33m:[39m [32m`[39m[0m

      at Object.<anonymous> (logging/log-analytics.service.spec.ts:302:36)

  ● LogAnalyticsService › getPopularPages › should return popular pages successfully

    expect(jest.fn()).toHaveBeenCalledWith(...expected)

    - Expected
    + Received

      "http://localhost:5080/api/test-org/_search",
      {"query": "
          SELECT eventData.page as page,
                 COUNT(*) as view_count,
                 COUNT(DISTINCT userId) as unique_users
          FROM user-behavior
          WHERE eventType = 'PAGE_VIEW' 
            AND timestamp >= '2023-01-01T00:00:00Z' 
            AND timestamp <= '2023-01-02T00:00:00Z'
          GROUP BY page
          ORDER BY view_count DESC
          LIMIT 5
        "},
      Object {
        "headers": Object {
          "Authorization": "Bearer test-token",
          "Content-Type": "application/json",
        },
    +   "timeout": 30000,
      },

    Number of calls: 1

    [0m [90m 372 |[39m       ])[33m;[39m
     [90m 373 |[39m
    [31m[1m>[22m[39m[90m 374 |[39m       expect(mockHttpService[33m.[39mpost)[33m.[39mtoHaveBeenCalledWith(
     [90m     |[39m                                    [31m[1m^[22m[39m
     [90m 375 |[39m         [32m`${mockConfig.url}/api/${mockConfig.organization}/_search`[39m[33m,[39m
     [90m 376 |[39m         {
     [90m 377 |[39m           query[33m:[39m [32m`[39m[0m

      at Object.<anonymous> (logging/log-analytics.service.spec.ts:374:36)

  ● LogAnalyticsService › getConversionFunnel › should return conversion funnel successfully

    expect(jest.fn()).toHaveBeenCalledWith(...expected)

    - Expected
    + Received

      "http://localhost:5080/api/test-org/_search",
      {"query": "
          SELECT eventType,
                 COUNT(DISTINCT userId) as user_count
          FROM user-behavior
          WHERE eventType IN ('PRODUCT_VIEW', 'CART_ADD', 'CHECKOUT', 'PURCHASE')
            AND timestamp >= '2023-01-01T00:00:00Z' 
            AND timestamp <= '2023-01-02T00:00:00Z'
          GROUP BY eventType
          ORDER BY 
            CASE eventType 
              WHEN 'PRODUCT_VIEW' THEN 1
              WHEN 'CART_ADD' THEN 2
              WHEN 'CHECKOUT' THEN 3
              WHEN 'PURCHASE' THEN 4
            END
        "},
      Object {
        "headers": Object {
          "Authorization": "Bearer test-token",
          "Content-Type": "application/json",
        },
    +   "timeout": 30000,
      },

    Number of calls: 1

    [0m [90m 458 |[39m       ])[33m;[39m
     [90m 459 |[39m
    [31m[1m>[22m[39m[90m 460 |[39m       expect(mockHttpService[33m.[39mpost)[33m.[39mtoHaveBeenCalledWith(
     [90m     |[39m                                    [31m[1m^[22m[39m
     [90m 461 |[39m         [32m`${mockConfig.url}/api/${mockConfig.organization}/_search`[39m[33m,[39m
     [90m 462 |[39m         {
     [90m 463 |[39m           query[33m:[39m [32m`[39m[0m

      at Object.<anonymous> (logging/log-analytics.service.spec.ts:460:36)

[31m[Nest] 14512  - [39m2021/01/01 08:00:00 [31m  ERROR[39m [38;5;3m[GlobalExceptionFilter] [39m[31mGET /test - 50008001[39m
[31m[Nest] 14512  - [39m2021/01/01 08:00:00 [31m  ERROR[39m [38;5;3m[GlobalExceptionFilter] [39mObject(8) {
  errorCode: [32m'50008001'[39m,
  category: [32m'system'[39m,
  message: [32m'服务器内部错误'[39m,
  details: [90mundefined[39m,
  context: {
    requestId: [90mundefined[39m,
    traceId: [90mundefined[39m,
    timestamp: [32m'2021-01-01T00:00:00.000Z'[39m,
    path: [32m'/test'[39m,
    method: [32m'GET'[39m,
    userAgent: [90mundefined[39m,
    ip: [32m'127.0.0.1'[39m,
    userId: [32m'user-123'[39m
  },
  retryable: [33mtrue[39m,
  stack: [32m'EnhancedBusinessException: 服务器内部错误\n    at GlobalExceptionFilter.catch (D:\\onlinestore\\backend\\src\\common\\filters\\global-exception.filter.ts:83:33)\n    at Object.<anonymous> (D:\\onlinestore\\backend\\src\\common\\filters\\global-exception.filter.spec.ts:114:19)\n    at Promise.finally.completed (D:\\onlinestore\\backend\\node_modules\\jest-circus\\build\\jestAdapterInit.js:1557:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (D:\\onlinestore\\backend\\node_modules\\jest-circus\\build\\jestAdapterInit.js:1497:10)\n    at _callCircusTest (D:\\onlinestore\\backend\\node_modules\\jest-circus\\build\\jestAdapterInit.js:1007:40)\n    at _runTest (D:\\onlinestore\\backend\\node_modules\\jest-circus\\build\\jestAdapterInit.js:947:3)\n    at D:\\onlinestore\\backend\\node_modules\\jest-circus\\build\\jestAdapterInit.js:849:7\n    at _runTestsForDescribeBlock (D:\\onlinestore\\backend\\node_modules\\jest-circus\\build\\jestAdapterInit.js:862:11)\n    at _runTestsForDescribeBlock (D:\\onlinestore\\backend\\node_modules\\jest-circus\\build\\jestAdapterInit.js:857:11)\n    at _runTestsForDescribeBlock (D:\\onlinestore\\backend\\node_modules\\jest-circus\\build\\jestAdapterInit.js:857:11)\n    at run (D:\\onlinestore\\backend\\node_modules\\jest-circus\\build\\jestAdapterInit.js:761:3)\n    at runAndTransformResultsToJestFormat (D:\\onlinestore\\backend\\node_modules\\jest-circus\\build\\jestAdapterInit.js:1918:21)\n    at jestAdapter (D:\\onlinestore\\backend\\node_modules\\jest-circus\\build\\runner.js:101:19)\n    at runTestInternal (D:\\onlinestore\\backend\\node_modules\\jest-runner\\build\\index.js:275:16)\n    at runTest (D:\\onlinestore\\backend\\node_modules\\jest-runner\\build\\index.js:343:7)'[39m,
  cause: [32m'Unknown error'[39m
}
[31m[Nest] 14512  - [39m2021/01/01 08:00:00 [31m  ERROR[39m [38;5;3m[GlobalExceptionFilter] [39m[31mGET /test - HTTP 500[39m
[31m[Nest] 14512  - [39m2021/01/01 08:00:00 [31m  ERROR[39m [38;5;3m[GlobalExceptionFilter] [39mObject(5) {
  statusCode: [33m500[39m,
  message: [32m'Test error'[39m,
  response: [32m'Test error'[39m,
  context: {
    requestId: [90mundefined[39m,
    traceId: [90mundefined[39m,
    timestamp: [32m'2021-01-01T00:00:00.000Z'[39m,
    path: [32m'/test'[39m,
    method: [32m'GET'[39m,
    userAgent: [90mundefined[39m,
    ip: [32m'127.0.0.1'[39m,
    userId: [32m'user-123'[39m
  },
  stack: [32m'HttpException: Test error\n    at D:\\onlinestore\\backend\\src\\common\\filters\\global-exception.filter.spec.ts:142:27\n    at Array.forEach (<anonymous>)\n    at Object.<anonymous> (D:\\onlinestore\\backend\\src\\common\\filters\\global-exception.filter.spec.ts:141:17)\n    at Promise.finally.completed (D:\\onlinestore\\backend\\node_modules\\jest-circus\\build\\jestAdapterInit.js:1557:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (D:\\onlinestore\\backend\\node_modules\\jest-circus\\build\\jestAdapterInit.js:1497:10)\n    at _callCircusTest (D:\\onlinestore\\backend\\node_modules\\jest-circus\\build\\jestAdapterInit.js:1007:40)\n    at _runTest (D:\\onlinestore\\backend\\node_modules\\jest-circus\\build\\jestAdapterInit.js:947:3)\n    at D:\\onlinestore\\backend\\node_modules\\jest-circus\\build\\jestAdapterInit.js:849:7\n    at _runTestsForDescribeBlock (D:\\onlinestore\\backend\\node_modules\\jest-circus\\build\\jestAdapterInit.js:862:11)\n    at _runTestsForDescribeBlock (D:\\onlinestore\\backend\\node_modules\\jest-circus\\build\\jestAdapterInit.js:857:11)\n    at _runTestsForDescribeBlock (D:\\onlinestore\\backend\\node_modules\\jest-circus\\build\\jestAdapterInit.js:857:11)\n    at run (D:\\onlinestore\\backend\\node_modules\\jest-circus\\build\\jestAdapterInit.js:761:3)\n    at runAndTransformResultsToJestFormat (D:\\onlinestore\\backend\\node_modules\\jest-circus\\build\\jestAdapterInit.js:1918:21)\n    at jestAdapter (D:\\onlinestore\\backend\\node_modules\\jest-circus\\build\\runner.js:101:19)\n    at runTestInternal (D:\\onlinestore\\backend\\node_modules\\jest-runner\\build\\index.js:275:16)\n    at runTest (D:\\onlinestore\\backend\\node_modules\\jest-runner\\build\\index.js:343:7)'[39m
}
[31m[Nest] 14512  - [39m2021/01/01 08:00:00 [31m  ERROR[39m [38;5;3m[GlobalExceptionFilter] [39m[31mGET /test - HTTP 502[39m
[31m[Nest] 14512  - [39m2021/01/01 08:00:00 [31m  ERROR[39m [38;5;3m[GlobalExceptionFilter] [39mObject(5) {
  statusCode: [33m502[39m,
  message: [32m'Test error'[39m,
  response: [32m'Test error'[39m,
  context: {
    requestId: [90mundefined[39m,
    traceId: [90mundefined[39m,
    timestamp: [32m'2021-01-01T00:00:00.000Z'[39m,
    path: [32m'/test'[39m,
    method: [32m'GET'[39m,
    userAgent: [90mundefined[39m,
    ip: [32m'127.0.0.1'[39m,
    userId: [32m'user-123'[39m
  },
  stack: [32m'HttpException: Test error\n    at D:\\onlinestore\\backend\\src\\common\\filters\\global-exception.filter.spec.ts:142:27\n    at Array.forEach (<anonymous>)\n    at Object.<anonymous> (D:\\onlinestore\\backend\\src\\common\\filters\\global-exception.filter.spec.ts:141:17)\n    at Promise.finally.completed (D:\\onlinestore\\backend\\node_modules\\jest-circus\\build\\jestAdapterInit.js:1557:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (D:\\onlinestore\\backend\\node_modules\\jest-circus\\build\\jestAdapterInit.js:1497:10)\n    at _callCircusTest (D:\\onlinestore\\backend\\node_modules\\jest-circus\\build\\jestAdapterInit.js:1007:40)\n    at _runTest (D:\\onlinestore\\backend\\node_modules\\jest-circus\\build\\jestAdapterInit.js:947:3)\n    at D:\\onlinestore\\backend\\node_modules\\jest-circus\\build\\jestAdapterInit.js:849:7\n    at _runTestsForDescribeBlock (D:\\onlinestore\\backend\\node_modules\\jest-circus\\build\\jestAdapterInit.js:862:11)\n    at _runTestsForDescribeBlock (D:\\onlinestore\\backend\\node_modules\\jest-circus\\build\\jestAdapterInit.js:857:11)\n    at _runTestsForDescribeBlock (D:\\onlinestore\\backend\\node_modules\\jest-circus\\build\\jestAdapterInit.js:857:11)\n    at run (D:\\onlinestore\\backend\\node_modules\\jest-circus\\build\\jestAdapterInit.js:761:3)\n    at runAndTransformResultsToJestFormat (D:\\onlinestore\\backend\\node_modules\\jest-circus\\build\\jestAdapterInit.js:1918:21)\n    at jestAdapter (D:\\onlinestore\\backend\\node_modules\\jest-circus\\build\\runner.js:101:19)\n    at runTestInternal (D:\\onlinestore\\backend\\node_modules\\jest-runner\\build\\index.js:275:16)\n    at runTest (D:\\onlinestore\\backend\\node_modules\\jest-runner\\build\\index.js:343:7)'[39m
}
[31m[Nest] 14512  - [39m2021/01/01 08:00:00 [31m  ERROR[39m [38;5;3m[GlobalExceptionFilter] [39m[31mGET /test - HTTP 503[39m
[31m[Nest] 14512  - [39m2021/01/01 08:00:00 [31m  ERROR[39m [38;5;3m[GlobalExceptionFilter] [39mObject(5) {
  statusCode: [33m503[39m,
  message: [32m'Test error'[39m,
  response: [32m'Test error'[39m,
  context: {
    requestId: [90mundefined[39m,
    traceId: [90mundefined[39m,
    timestamp: [32m'2021-01-01T00:00:00.000Z'[39m,
    path: [32m'/test'[39m,
    method: [32m'GET'[39m,
    userAgent: [90mundefined[39m,
    ip: [32m'127.0.0.1'[39m,
    userId: [32m'user-123'[39m
  },
  stack: [32m'HttpException: Test error\n    at D:\\onlinestore\\backend\\src\\common\\filters\\global-exception.filter.spec.ts:142:27\n    at Array.forEach (<anonymous>)\n    at Object.<anonymous> (D:\\onlinestore\\backend\\src\\common\\filters\\global-exception.filter.spec.ts:141:17)\n    at Promise.finally.completed (D:\\onlinestore\\backend\\node_modules\\jest-circus\\build\\jestAdapterInit.js:1557:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (D:\\onlinestore\\backend\\node_modules\\jest-circus\\build\\jestAdapterInit.js:1497:10)\n    at _callCircusTest (D:\\onlinestore\\backend\\node_modules\\jest-circus\\build\\jestAdapterInit.js:1007:40)\n    at _runTest (D:\\onlinestore\\backend\\node_modules\\jest-circus\\build\\jestAdapterInit.js:947:3)\n    at D:\\onlinestore\\backend\\node_modules\\jest-circus\\build\\jestAdapterInit.js:849:7\n    at _runTestsForDescribeBlock (D:\\onlinestore\\backend\\node_modules\\jest-circus\\build\\jestAdapterInit.js:862:11)\n    at _runTestsForDescribeBlock (D:\\onlinestore\\backend\\node_modules\\jest-circus\\build\\jestAdapterInit.js:857:11)\n    at _runTestsForDescribeBlock (D:\\onlinestore\\backend\\node_modules\\jest-circus\\build\\jestAdapterInit.js:857:11)\n    at run (D:\\onlinestore\\backend\\node_modules\\jest-circus\\build\\jestAdapterInit.js:761:3)\n    at runAndTransformResultsToJestFormat (D:\\onlinestore\\backend\\node_modules\\jest-circus\\build\\jestAdapterInit.js:1918:21)\n    at jestAdapter (D:\\onlinestore\\backend\\node_modules\\jest-circus\\build\\runner.js:101:19)\n    at runTestInternal (D:\\onlinestore\\backend\\node_modules\\jest-runner\\build\\index.js:275:16)\n    at runTest (D:\\onlinestore\\backend\\node_modules\\jest-runner\\build\\index.js:343:7)'[39m
}
[31m[Nest] 14512  - [39m2021/01/01 08:00:00 [31m  ERROR[39m [38;5;3m[GlobalExceptionFilter] [39m[31mGET /test - HTTP 504[39m
[31m[Nest] 14512  - [39m2021/01/01 08:00:00 [31m  ERROR[39m [38;5;3m[GlobalExceptionFilter] [39mObject(5) {
  statusCode: [33m504[39m,
  message: [32m'Test error'[39m,
  response: [32m'Test error'[39m,
  context: {
    requestId: [90mundefined[39m,
    traceId: [90mundefined[39m,
    timestamp: [32m'2021-01-01T00:00:00.000Z'[39m,
    path: [32m'/test'[39m,
    method: [32m'GET'[39m,
    userAgent: [90mundefined[39m,
    ip: [32m'127.0.0.1'[39m,
    userId: [32m'user-123'[39m
  },
  stack: [32m'HttpException: Test error\n    at D:\\onlinestore\\backend\\src\\common\\filters\\global-exception.filter.spec.ts:142:27\n    at Array.forEach (<anonymous>)\n    at Object.<anonymous> (D:\\onlinestore\\backend\\src\\common\\filters\\global-exception.filter.spec.ts:141:17)\n    at Promise.finally.completed (D:\\onlinestore\\backend\\node_modules\\jest-circus\\build\\jestAdapterInit.js:1557:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (D:\\onlinestore\\backend\\node_modules\\jest-circus\\build\\jestAdapterInit.js:1497:10)\n    at _callCircusTest (D:\\onlinestore\\backend\\node_modules\\jest-circus\\build\\jestAdapterInit.js:1007:40)\n    at _runTest (D:\\onlinestore\\backend\\node_modules\\jest-circus\\build\\jestAdapterInit.js:947:3)\n    at D:\\onlinestore\\backend\\node_modules\\jest-circus\\build\\jestAdapterInit.js:849:7\n    at _runTestsForDescribeBlock (D:\\onlinestore\\backend\\node_modules\\jest-circus\\build\\jestAdapterInit.js:862:11)\n    at _runTestsForDescribeBlock (D:\\onlinestore\\backend\\node_modules\\jest-circus\\build\\jestAdapterInit.js:857:11)\n    at _runTestsForDescribeBlock (D:\\onlinestore\\backend\\node_modules\\jest-circus\\build\\jestAdapterInit.js:857:11)\n    at run (D:\\onlinestore\\backend\\node_modules\\jest-circus\\build\\jestAdapterInit.js:761:3)\n    at runAndTransformResultsToJestFormat (D:\\onlinestore\\backend\\node_modules\\jest-circus\\build\\jestAdapterInit.js:1918:21)\n    at jestAdapter (D:\\onlinestore\\backend\\node_modules\\jest-circus\\build\\runner.js:101:19)\n    at runTestInternal (D:\\onlinestore\\backend\\node_modules\\jest-runner\\build\\index.js:275:16)\n    at runTest (D:\\onlinestore\\backend\\node_modules\\jest-runner\\build\\index.js:343:7)'[39m
}
FAIL src/common/filters/global-exception.filter.spec.ts
  GlobalExceptionFilter
    √ should be defined (9 ms)
    catch
      √ should handle EnhancedBusinessException (15 ms)
      √ should handle HttpException with object response (6 ms)
      √ should handle HttpException with string response (6 ms)
      √ should handle unknown exceptions (17 ms)
      √ should map HTTP status codes to error codes correctly (16 ms)
      × should categorize errors correctly (6 ms)

  ● GlobalExceptionFilter › catch › should categorize errors correctly

    expect(jest.fn()).toHaveBeenCalledWith(...expected)

    Expected: ObjectContaining {"category": "business"}
    Received: {"category": "validation", "errorCode": "40401001", "message": "Test error", "requestId": undefined, "success": false, "timestamp": "2021-01-01T00:00:00.000Z"}

    Number of calls: 1

    [0m [90m 160 |[39m         [36mconst[39m exception [33m=[39m [36mnew[39m [33mHttpException[39m([32m'Test error'[39m[33m,[39m status)[33m;[39m
     [90m 161 |[39m         filter[33m.[39m[36mcatch[39m(exception[33m,[39m mockArgumentsHost)[33m;[39m
    [31m[1m>[22m[39m[90m 162 |[39m         expect(mockResponse[33m.[39mjson)[33m.[39mtoHaveBeenCalledWith(
     [90m     |[39m                                   [31m[1m^[22m[39m
     [90m 163 |[39m           expect[33m.[39mobjectContaining({
     [90m 164 |[39m             category[33m:[39m expectedCategory[33m,[39m
     [90m 165 |[39m           })[33m,[39m[0m

      at common/filters/global-exception.filter.spec.ts:162:35
          at Array.forEach (<anonymous>)
      at Object.<anonymous> (common/filters/global-exception.filter.spec.ts:159:17)

PASS src/products/products.controller.spec.ts
  ProductsController
    POST /products
      √ should create a new product successfully (17 ms)
      √ should throw error for invalid price (55 ms)
      √ should throw error for negative stock (16 ms)
      √ should throw error for invalid category (9 ms)
      √ should validate required fields (9 ms)
      √ should validate product name length (9 ms)
      √ should handle database connection errors (8 ms)
      √ should calculate total amount correctly (8 ms)
    GET /products
      √ should return array of products (14 ms)
      √ should handle pagination (8 ms)
      √ should handle search functionality (8 ms)
      √ should return empty array when no products found (7 ms)
      √ should handle database errors gracefully (8 ms)
      √ should handle pagination edge cases (8 ms)
    GET /products/:id
      √ should return product by id (7 ms)
      √ should throw error for non-existent product (15 ms)
      √ should handle invalid id format (8 ms)
      √ should include category information (8 ms)
      √ should handle database connection errors (8 ms)
      √ should return inactive products when explicitly requested (7 ms)
    PUT /products/:id
      √ should update product successfully (8 ms)
      √ should throw error for non-existent product (13 ms)
      √ should validate price on update (10 ms)
      √ should not allow update of immutable fields (7 ms)
      √ should handle partial updates (6 ms)
      √ should track update history (6 ms)
    DELETE /products/:id
      √ should delete product successfully (7 ms)
      √ should throw error for non-existent product (14 ms)
      √ should handle invalid id format (14 ms)
      √ should prevent deletion of products with orders (8 ms)
      √ should handle database connection errors (8 ms)
    GET /products/popular
      √ should return popular products (8 ms)
      √ should handle limit parameter (7 ms)
      √ should handle empty popular products (6 ms)
      √ should handle database errors (17 ms)
      √ should sort by popularity score (8 ms)
    GET /products/search
      √ should search products by query (7 ms)
      √ should handle search with filters (8 ms)
      √ should return empty array when no search results (7 ms)
      √ should handle search errors gracefully (8 ms)
      √ should handle pagination in search results (8 ms)
      √ should handle fuzzy search (16 ms)
      √ should handle search with multiple filters (9 ms)
    Edge Cases and Error Handling
      √ should handle concurrent product creation (8 ms)
      √ should handle rate limiting (10 ms)
      √ should handle validation errors comprehensively (8 ms)
      √ should handle timeout scenarios (9 ms)

PASS src/auth/auth.controller.spec.ts
  AuthController
    POST /auth/login
      √ should return JWT token for valid credentials (12 ms)
      √ should throw error for invalid credentials (32 ms)
      √ should validate required fields (13 ms)
      √ should handle validation errors (7 ms)
      √ should handle database connection errors (7 ms)
      √ should handle rate limiting (7 ms)
      √ should handle timeout scenarios (7 ms)
    POST /auth/register
      √ should create new user successfully (6 ms)
      √ should throw error for duplicate username (6 ms)
      √ should throw error for duplicate email (12 ms)
      √ should validate email format (6 ms)
      √ should validate password strength (7 ms)
      √ should not return password in response (6 ms)
      √ should throw error if password and confirmPassword do not match (7 ms)
      √ should validate username length (7 ms)
      √ should handle database connection errors (7 ms)
      √ should handle concurrent registration attempts (7 ms)
    GET /auth/profile
      √ should return user profile from JWT payload (16 ms)
      √ should require JWT authentication (7 ms)
      √ should handle malformed JWT payload gracefully (7 ms)
    POST /auth/change-password
      √ should change password successfully (7 ms)
      √ should throw error for invalid current password (7 ms)
      √ should validate new password strength (8 ms)
      √ should throw error if new password and confirmPassword do not match (9 ms)
      √ should handle user not found during password change (19 ms)
      √ should handle database connection errors during password change (8 ms)
      √ should validate current password format (8 ms)
      √ should prevent password reuse (8 ms)
    POST /auth/refresh
      √ should refresh tokens successfully (8 ms)
      √ should throw UnauthorizedException for invalid refresh token (8 ms)
      √ should throw UnauthorizedException for expired refresh token (7 ms)
      √ should throw UnauthorizedException when user no longer exists (7 ms)
    POST /auth/logout
      √ should logout successfully (13 ms)
      √ should require JWT authentication (8 ms)
    Casdoor Integration
      GET /auth/casdoor/login
        √ should redirect to Casdoor login URL (9 ms)
        √ should handle Casdoor service errors (10 ms)
      GET /auth/casdoor/callback
        √ should handle Casdoor callback successfully (7 ms)
        √ should handle invalid authorization code (7 ms)
      GET /auth/casdoor/userinfo
        √ should get Casdoor user info successfully (6 ms)
        √ should require JWT authentication (7 ms)
      POST /auth/casdoor/logout
        √ should redirect to Casdoor logout URL (13 ms)
    Edge Cases and Error Handling
      √ should handle concurrent login attempts (7 ms)
      √ should handle rate limiting on authentication endpoints (7 ms)
      √ should handle timeout scenarios (7 ms)
      √ should handle comprehensive validation errors (7 ms)
      √ should handle malformed request bodies (6 ms)
      √ should handle authentication service unavailability (7 ms)
      √ should handle captcha validation scenarios (7 ms)
      √ should handle Redis connection failures gracefully (13 ms)
    Security Considerations
      √ should not expose sensitive information in responses (6 ms)
      √ should handle token validation errors securely (6 ms)
      √ should prevent timing attacks on login (8 ms)

PASS src/orders/orders.service.spec.ts
  OrdersService
    Service Initialization
      √ should be defined (18 ms)
      √ should have all dependencies injected (8 ms)
    Create Order
      √ should successfully create a new order (10 ms)
      √ should throw error when product is not found (56 ms)
      √ should throw error when product stock is insufficient (9 ms)
      √ should handle event publishing errors gracefully (10 ms)
      √ should generate unique order numbers (45 ms)
    Find Order By ID
      √ should return order when found (7 ms)
      √ should return null when order not found (6 ms)
    Find Orders By User ID
      √ should return orders for specific user (7 ms)
      √ should handle pagination correctly (6 ms)
    Find All Orders
      √ should return all orders with pagination (7 ms)
    Update Order
      √ should successfully update order (8 ms)
      √ should set completedAt when status is DELIVERED (17 ms)
      √ should throw error when order not found (7 ms)
      √ should handle event publishing errors gracefully (10 ms)
    Delete Order
      √ should successfully delete order (8 ms)
      √ should throw error when order not found (6 ms)
    Get Message History
      √ should return message history (7 ms)
      √ should handle query errors and increment DLQ metrics (8 ms)
    Get Statistics
      √ should return order statistics (7 ms)
      √ should handle zero revenue correctly (12 ms)
    Private Methods
      generateOrderNumber
        √ should generate unique order numbers (6 ms)
        √ should generate order numbers with correct format (6 ms)
      publishOrderCreatedEvent
        √ should publish order created event with correct structure (6 ms)
      publishOrderStatusUpdatedEvent
        √ should publish order status updated event with correct structure (6 ms)
    Integration Scenarios
      √ should handle complete order lifecycle (7 ms)
      √ should handle multiple items in order creation (7 ms)
    Error Handling
      √ should handle database errors gracefully (6 ms)
      √ should handle transaction errors gracefully (12 ms)
      √ should handle message history query errors gracefully (6 ms)
    Performance Monitoring
      √ should record database query metrics for find operations (6 ms)
      √ should record database query metrics for list operations (6 ms)
      √ should record database query metrics for count operations (6 ms)
    边界情况和错误处理测试
      订单创建边界测试
        √ should handle empty order items (7 ms)
        √ should handle invalid product quantities (7 ms)
        √ should handle extremely large quantities (7 ms)
        √ should handle invalid user ID (7 ms)
        √ should handle missing required fields (6 ms)
      数据库错误处理测试
        √ should handle database connection timeout (6 ms)
        √ should handle transaction rollback on save failure (7 ms)
        √ should handle concurrent modification conflicts (6 ms)
      业务逻辑边界测试
        √ should handle status transition validation (7 ms)
        √ should handle payment status consistency (7 ms)
        √ should validate order amount limits (12 ms)
      并发处理测试
        √ should handle concurrent order creation for same user (6 ms)
        √ should handle concurrent stock updates (7 ms)
      性能和资源限制测试
        √ should handle large order item lists (7 ms)
        √ should handle memory pressure during large queries (9 ms)
        √ should handle timeout on slow queries (112 ms)
      数据一致性测试
        √ should maintain referential integrity (7 ms)
        √ should validate order total calculation (8 ms)
      监控和日志测试
        √ should record metrics for failed operations (7 ms)
        √ should publish events for order state changes (6 ms)
        √ should handle event publishing failures gracefully (13 ms)

[31m[Nest] 14512  - [39m2025/10/09 15:44:30 [31m  ERROR[39m [38;5;3m[AddressService] [39m[31mAddress validation failed for: 北京市朝阳区建国门外大街1号[39m
Error: Validation error
    at Object.<anonymous> (D:\onlinestore\backend\src\address\address.spec.ts:427:28)
    at Promise.finally.completed (D:\onlinestore\backend\node_modules\jest-circus\build\jestAdapterInit.js:1557:28)
    at new Promise (<anonymous>)
    at callAsyncCircusFn (D:\onlinestore\backend\node_modules\jest-circus\build\jestAdapterInit.js:1497:10)
    at _callCircusTest (D:\onlinestore\backend\node_modules\jest-circus\build\jestAdapterInit.js:1007:40)
    at _runTest (D:\onlinestore\backend\node_modules\jest-circus\build\jestAdapterInit.js:947:3)
    at D:\onlinestore\backend\node_modules\jest-circus\build\jestAdapterInit.js:849:7
    at _runTestsForDescribeBlock (D:\onlinestore\backend\node_modules\jest-circus\build\jestAdapterInit.js:862:11)
    at _runTestsForDescribeBlock (D:\onlinestore\backend\node_modules\jest-circus\build\jestAdapterInit.js:857:11)
    at _runTestsForDescribeBlock (D:\onlinestore\backend\node_modules\jest-circus\build\jestAdapterInit.js:857:11)
    at run (D:\onlinestore\backend\node_modules\jest-circus\build\jestAdapterInit.js:761:3)
    at runAndTransformResultsToJestFormat (D:\onlinestore\backend\node_modules\jest-circus\build\jestAdapterInit.js:1918:21)
    at jestAdapter (D:\onlinestore\backend\node_modules\jest-circus\build\runner.js:101:19)
    at runTestInternal (D:\onlinestore\backend\node_modules\jest-runner\build\index.js:275:16)
    at runTest (D:\onlinestore\backend\node_modules\jest-runner\build\index.js:343:7)
PASS src/address/address.spec.ts
  AddressService Integration
    √ should be defined (16 ms)
    createAddress
      √ should create and validate a Chinese address (21 ms)
      √ should handle US address format (10 ms)
    geocode
      √ should geocode address and cache result (14 ms)
      √ should return cached geocode result (8 ms)
    AddressFormattingService
      √ should format Chinese address correctly (10 ms)
      √ should format US address correctly (17 ms)
    AddressValidationService Integration
      √ should validate address using validation service (10 ms)
      √ should handle invalid address (9 ms)
    reverseGeocode
      √ should reverse geocode coordinates and cache result (14 ms)
      √ should return cached reverse geocode result (9 ms)
    Error Handling
      √ should handle repository errors gracefully (23 ms)
      √ should handle validation service errors gracefully (15 ms)
    batchGeocode
      √ should batch geocode addresses (105 ms)
    healthCheck and getStats
      √ should perform health check (13 ms)
      √ should get service stats (13 ms)

PASS src/auth/auth.service.spec.ts
  AuthService
    Service Initialization
      √ should be defined (12 ms)
      √ should have all dependencies injected (13 ms)
    Register
      √ should successfully register a new user (10 ms)
      √ should throw ConflictException when user already exists (31 ms)
      √ should require captcha when registration fails exceed threshold (8 ms)
      √ should throw BadRequestException when captcha is required but not provided (13 ms)
      √ should throw BadRequestException when captcha verification fails (8 ms)
      √ should clear registration failure counter on successful registration (8 ms)
      √ should handle registration without Redis (8 ms)
    Login
      √ should successfully login with valid credentials (9 ms)
      √ should throw UnauthorizedException when user does not exist (10 ms)
      √ should throw UnauthorizedException when password is invalid (10 ms)
      √ should require captcha when login failures exceed threshold (15 ms)
      √ should throw BadRequestException when captcha is required but not provided (9 ms)
      √ should clear login failure counter on successful login (8 ms)
      √ should handle login without Redis (8 ms)
    RefreshToken
      √ should successfully refresh token with valid refresh token (9 ms)
      √ should throw UnauthorizedException when refresh token is invalid (11 ms)
      √ should throw UnauthorizedException when user does not exist (15 ms)
    ValidateToken
      √ should successfully validate a valid token (9 ms)
      √ should throw UnauthorizedException when token is invalid (9 ms)
    ChangePassword
      √ should successfully change password (10 ms)
      √ should throw UnauthorizedException when user does not exist (8 ms)
      √ should throw UnauthorizedException when old password is invalid (9 ms)
    GenerateTokens
      √ should generate correct token response (8 ms)
    Integration Scenarios
      √ should handle complete registration and login workflow (17 ms)
      √ should handle rate limiting scenarios (9 ms)
    Error Handling
      √ should handle Redis connection errors gracefully (19 ms)
      √ should handle bcrypt errors gracefully (9 ms)
      √ should handle JWT errors gracefully (8 ms)

[31m[Nest] 14512  - [39m2025/10/09 15:44:32 [31m  ERROR[39m [38;5;3m[AlertingService] [39m[31mFailed to start tracing span[39m
[31m[Nest] 14512  - [39m2025/10/09 15:44:32 [31m  ERROR[39m [38;5;3m[AlertingService] [39mError: Tracing error
    at Object.<anonymous> [90m(D:\onlinestore\backend\[39msrc\common\alerting\alerting.service.spec.ts:587:15[90m)[39m
    at [90mD:\onlinestore\backend\[39mnode_modules\[4mjest-mock[24m\build\index.js:305:39
    at Object.<anonymous> [90m(D:\onlinestore\backend\[39mnode_modules\[4mjest-mock[24m\build\index.js:312:13[90m)[39m
    at Object.mockConstructor [as startSpan] [90m(D:\onlinestore\backend\[39mnode_modules\[4mjest-mock[24m\build\index.js:102:19[90m)[39m
    at AlertingService.checkAlerts [90m(D:\onlinestore\backend\[39msrc\common\alerting\alerting.service.ts:344:34[90m)[39m
    at Object.<anonymous> [90m(D:\onlinestore\backend\[39msrc\common\alerting\alerting.service.spec.ts:599:28[90m)[39m
    at Promise.finally.completed [90m(D:\onlinestore\backend\[39mnode_modules\[4mjest-circus[24m\build\jestAdapterInit.js:1557:28[90m)[39m
    at new Promise (<anonymous>)
    at callAsyncCircusFn [90m(D:\onlinestore\backend\[39mnode_modules\[4mjest-circus[24m\build\jestAdapterInit.js:1497:10[90m)[39m
    at _callCircusTest [90m(D:\onlinestore\backend\[39mnode_modules\[4mjest-circus[24m\build\jestAdapterInit.js:1007:40[90m)[39m
    at _runTest [90m(D:\onlinestore\backend\[39mnode_modules\[4mjest-circus[24m\build\jestAdapterInit.js:947:3[90m)[39m
    at [90mD:\onlinestore\backend\[39mnode_modules\[4mjest-circus[24m\build\jestAdapterInit.js:849:7
    at _runTestsForDescribeBlock [90m(D:\onlinestore\backend\[39mnode_modules\[4mjest-circus[24m\build\jestAdapterInit.js:862:11[90m)[39m
    at _runTestsForDescribeBlock [90m(D:\onlinestore\backend\[39mnode_modules\[4mjest-circus[24m\build\jestAdapterInit.js:857:11[90m)[39m
    at _runTestsForDescribeBlock [90m(D:\onlinestore\backend\[39mnode_modules\[4mjest-circus[24m\build\jestAdapterInit.js:857:11[90m)[39m
    at run [90m(D:\onlinestore\backend\[39mnode_modules\[4mjest-circus[24m\build\jestAdapterInit.js:761:3[90m)[39m
    at runAndTransformResultsToJestFormat [90m(D:\onlinestore\backend\[39mnode_modules\[4mjest-circus[24m\build\jestAdapterInit.js:1918:21[90m)[39m
    at jestAdapter [90m(D:\onlinestore\backend\[39mnode_modules\[4mjest-circus[24m\build\runner.js:101:19[90m)[39m
    at runTestInternal [90m(D:\onlinestore\backend\[39mnode_modules\[4mjest-runner[24m\build\index.js:275:16[90m)[39m
    at runTest [90m(D:\onlinestore\backend\[39mnode_modules\[4mjest-runner[24m\build\index.js:343:7[90m)[39m
[31m[Nest] 14512  - [39m2025/10/09 15:44:32 [31m  ERROR[39m [38;5;3m[AlertingService] [39m[31mFailed to check alerts[39m
[31m[Nest] 14512  - [39m2025/10/09 15:44:32 [31m  ERROR[39m [38;5;3m[AlertingService] [39mError: Cache error
    at Object.<anonymous> [90m(D:\onlinestore\backend\[39msrc\common\alerting\alerting.service.spec.ts:603:46[90m)[39m
    at Promise.finally.completed [90m(D:\onlinestore\backend\[39mnode_modules\[4mjest-circus[24m\build\jestAdapterInit.js:1557:28[90m)[39m
    at new Promise (<anonymous>)
    at callAsyncCircusFn [90m(D:\onlinestore\backend\[39mnode_modules\[4mjest-circus[24m\build\jestAdapterInit.js:1497:10[90m)[39m
    at _callCircusTest [90m(D:\onlinestore\backend\[39mnode_modules\[4mjest-circus[24m\build\jestAdapterInit.js:1007:40[90m)[39m
    at _runTest [90m(D:\onlinestore\backend\[39mnode_modules\[4mjest-circus[24m\build\jestAdapterInit.js:947:3[90m)[39m
    at [90mD:\onlinestore\backend\[39mnode_modules\[4mjest-circus[24m\build\jestAdapterInit.js:849:7
    at _runTestsForDescribeBlock [90m(D:\onlinestore\backend\[39mnode_modules\[4mjest-circus[24m\build\jestAdapterInit.js:862:11[90m)[39m
    at _runTestsForDescribeBlock [90m(D:\onlinestore\backend\[39mnode_modules\[4mjest-circus[24m\build\jestAdapterInit.js:857:11[90m)[39m
    at _runTestsForDescribeBlock [90m(D:\onlinestore\backend\[39mnode_modules\[4mjest-circus[24m\build\jestAdapterInit.js:857:11[90m)[39m
    at run [90m(D:\onlinestore\backend\[39mnode_modules\[4mjest-circus[24m\build\jestAdapterInit.js:761:3[90m)[39m
    at runAndTransformResultsToJestFormat [90m(D:\onlinestore\backend\[39mnode_modules\[4mjest-circus[24m\build\jestAdapterInit.js:1918:21[90m)[39m
    at jestAdapter [90m(D:\onlinestore\backend\[39mnode_modules\[4mjest-circus[24m\build\runner.js:101:19[90m)[39m
    at runTestInternal [90m(D:\onlinestore\backend\[39mnode_modules\[4mjest-runner[24m\build\index.js:275:16[90m)[39m
    at runTest [90m(D:\onlinestore\backend\[39mnode_modules\[4mjest-runner[24m\build\index.js:343:7[90m)[39m
PASS src/common/alerting/alerting.service.spec.ts
  AlertingService
    Service Initialization
      √ should be defined (11 ms)
      √ should have all dependencies injected (6 ms)
      √ should initialize with default rules (7 ms)
    Check Alerts
      √ should trigger alert when CPU usage exceeds threshold (9 ms)
      √ should trigger alert when memory usage exceeds threshold (8 ms)
      √ should trigger alert when error rate exceeds threshold (7 ms)
      √ should trigger alert when response time exceeds threshold (7 ms)
      √ should trigger alert when failed logins exceed threshold (12 ms)
      √ should resolve alert when metrics return to normal (7 ms)
      √ should not trigger duplicate alerts (7 ms)
    Alert Rules Management
      √ should add new alert rule (7 ms)
      √ should update existing alert rule (7 ms)
      √ should delete alert rule (7 ms)
    Alert Suppression
      √ should suppress active alert (7 ms)
    Get Statistics
      √ should return alert statistics (8 ms)
      √ should update statistics after triggering alerts (12 ms)
    Notification Sending
      √ should send Slack notification when alert is triggered (7 ms)
      √ should handle Slack notification errors gracefully (8 ms)
      √ should send email notification when enabled (7 ms)
    Integration Scenarios
      √ should handle complete alert lifecycle (7 ms)
      √ should handle multiple simultaneous alerts (8 ms)
    Error Handling
      √ should handle tracing service errors gracefully (44 ms)
      √ should handle cache service errors gracefully (8 ms)

PASS src/config/configuration.spec.ts
  ConfigurationValidator
    validateAll
      √ 应该返回有效的验证结果 (34 ms)
      √ 应该验证所有配置项 (7 ms)
      √ 应该在开发环境产生警告而不是错误 (3 ms)
    validateDatabaseConfig
      √ 应该验证数据库配置 (8 ms)
      √ 应该在生产环境检查localhost (190 ms)
      √ 应该检查数据库密码强度 (9 ms)
    validateRedisConfig
      √ 应该验证Redis配置 (3 ms)
      √ 应该在生产环境检查Redis安全设置 (2 ms)
    validateJwtConfig
      √ 应该验证JWT配置 (2 ms)
      √ 应该检查JWT密钥长度 (2 ms)
      √ 应该验证RSA密钥格式 (3 ms)
    validateConnectionPool
      √ 应该验证连接池配置 (3 ms)
      √ 应该检查连接池大小 (3 ms)
      √ 应该检查连接超时设置 (7 ms)
    generateConfigReport
      √ 应该生成配置报告 (4 ms)
      √ 应该包含配置摘要 (3 ms)
      √ 应该包含错误和警告信息 (6 ms)
    validateRxJSOptimization
      √ 应该验证RxJS优化配置 (4 ms)
      √ 应该检查重试机制配置 (3 ms)
    validateCacheKeyManagement
      √ 应该验证缓存键管理 (3 ms)
      √ 应该测试缓存键生成 (3 ms)
      √ 应该检查TTL配置 (2 ms)
    validateErrorLogging
      √ 应该验证错误日志配置 (3 ms)
      √ 应该测试错误日志功能 (5 ms)
      √ 应该检查日志级别配置 (3 ms)
    validateApiVersionControl
      √ 应该验证API版本控制 (3 ms)
      √ 应该验证版本支持 (3 ms)
    边界情况测试
      √ 应该处理空配置 (3 ms)
      √ 应该处理无效配置 (3 ms)
      √ 应该处理缺失的环境变量 (3 ms)
    性能测试
      √ 应该在合理时间内完成验证 (3 ms)
      √ 应该能够处理多次验证调用 (8 ms)
    集成测试
      √ 应该与所有配置模块集成 (3 ms)
      √ 应该提供完整的验证覆盖 (4 ms)

PASS src/orders/orders.controller.spec.ts
  OrdersController
    POST /orders
      √ should create a new order successfully (14 ms)
      √ should throw error for invalid user (26 ms)
      √ should throw error for invalid product (9 ms)
      √ should throw error for insufficient stock (14 ms)
      √ should validate required fields (9 ms)
      √ should calculate total amount correctly (8 ms)
    GET /orders
      √ should return array of orders (8 ms)
      √ should handle pagination parameters (13 ms)
      √ should handle status filter (7 ms)
      √ should handle date range filter (8 ms)
    GET /orders/user/:userId
      √ should return orders for a specific user (8 ms)
      √ should handle user not found (14 ms)
      √ should handle pagination parameters (7 ms)
      √ should handle status filter (7 ms)
    GET /orders/:id
      √ should return order by id (8 ms)
      √ should throw error for non-existent order (12 ms)
      √ should handle invalid id format (8 ms)
      √ should include user information (8 ms)
    PUT /orders/:id
      √ should update order successfully (8 ms)
      √ should throw error for non-existent order (14 ms)
      √ should validate status update (8 ms)
      √ should not allow update of immutable fields (8 ms)
    DELETE /orders/:id
      √ should delete order successfully (8 ms)
      √ should throw error for non-existent order (13 ms)
      √ should handle invalid id format (8 ms)
      √ should not allow deletion of completed orders (8 ms)
    GET /orders/statistics/overview
      √ should return order statistics (9 ms)
      √ should handle empty statistics (12 ms)

PASS src/cart/interfaces/cart.controller.spec.ts
  CartController
    getCartItems
      √ should return paginated cart items (13 ms)
      √ should return paginated cart items with default values (12 ms)
      √ should handle user not found (21 ms)
    getSelectedCartItems
      √ should return selected cart items (6 ms)
      √ should handle empty selected items (6 ms)
    addCartItem
      √ should successfully add item to cart (13 ms)
      √ should handle insufficient stock (9 ms)
      √ should handle invalid product (7 ms)
      √ should handle validation errors (7 ms)
    updateCartItem
      √ should successfully update cart item (6 ms)
      √ should handle cart item not found (10 ms)
      √ should handle insufficient stock for update (6 ms)
    updateAllSelectFlag
      √ should successfully update all select flags (6 ms)
      √ should handle empty cart (7 ms)
    removeCartItem
      √ should successfully remove cart item (7 ms)
      √ should handle cart item not found (11 ms)
    removeCartItems
      √ should successfully remove multiple cart items (7 ms)
      √ should handle empty cart item ids (7 ms)
      √ should handle some cart items not found (7 ms)
    clearSelectedItems
      √ should successfully clear selected items (7 ms)
      √ should handle no selected items (10 ms)
    getCartSummary
      √ should return cart summary (7 ms)
      √ should handle empty cart summary (7 ms)
    getCartItemCount
      √ should return cart item count (7 ms)
      √ should return zero for empty cart (7 ms)

[31m[Nest] 14512  - [39m2025/10/09 15:44:35 [31m  ERROR[39m [38;5;3m[EnhancedCacheService] [39m[31m回调执行失败: Fallback error[39m
Error: Fallback error
    at Object.<anonymous> (D:\onlinestore\backend\src\cache\enhanced-cache.spec.ts:234:62)
    at Promise.finally.completed (D:\onlinestore\backend\node_modules\jest-circus\build\jestAdapterInit.js:1557:28)
    at new Promise (<anonymous>)
    at callAsyncCircusFn (D:\onlinestore\backend\node_modules\jest-circus\build\jestAdapterInit.js:1497:10)
    at _callCircusTest (D:\onlinestore\backend\node_modules\jest-circus\build\jestAdapterInit.js:1007:40)
    at _runTest (D:\onlinestore\backend\node_modules\jest-circus\build\jestAdapterInit.js:947:3)
    at D:\onlinestore\backend\node_modules\jest-circus\build\jestAdapterInit.js:849:7
    at _runTestsForDescribeBlock (D:\onlinestore\backend\node_modules\jest-circus\build\jestAdapterInit.js:862:11)
    at _runTestsForDescribeBlock (D:\onlinestore\backend\node_modules\jest-circus\build\jestAdapterInit.js:857:11)
    at _runTestsForDescribeBlock (D:\onlinestore\backend\node_modules\jest-circus\build\jestAdapterInit.js:857:11)
    at run (D:\onlinestore\backend\node_modules\jest-circus\build\jestAdapterInit.js:761:3)
    at runAndTransformResultsToJestFormat (D:\onlinestore\backend\node_modules\jest-circus\build\jestAdapterInit.js:1918:21)
    at jestAdapter (D:\onlinestore\backend\node_modules\jest-circus\build\runner.js:101:19)
    at runTestInternal (D:\onlinestore\backend\node_modules\jest-runner\build\index.js:275:16)
    at runTest (D:\onlinestore\backend\node_modules\jest-runner\build\index.js:343:7)
[31m[Nest] 14512  - [39m2025/10/09 15:44:35 [31m  ERROR[39m [38;5;3m[EnhancedCacheService] [39m[31m回调执行失败: Callback failed[39m
Error: Callback failed
    at Object.<anonymous> (D:\onlinestore\backend\src\cache\enhanced-cache.spec.ts:290:56)
    at Promise.finally.completed (D:\onlinestore\backend\node_modules\jest-circus\build\jestAdapterInit.js:1557:28)
    at new Promise (<anonymous>)
    at callAsyncCircusFn (D:\onlinestore\backend\node_modules\jest-circus\build\jestAdapterInit.js:1497:10)
    at _callCircusTest (D:\onlinestore\backend\node_modules\jest-circus\build\jestAdapterInit.js:1007:40)
    at _runTest (D:\onlinestore\backend\node_modules\jest-circus\build\jestAdapterInit.js:947:3)
    at D:\onlinestore\backend\node_modules\jest-circus\build\jestAdapterInit.js:849:7
    at _runTestsForDescribeBlock (D:\onlinestore\backend\node_modules\jest-circus\build\jestAdapterInit.js:862:11)
    at _runTestsForDescribeBlock (D:\onlinestore\backend\node_modules\jest-circus\build\jestAdapterInit.js:857:11)
    at _runTestsForDescribeBlock (D:\onlinestore\backend\node_modules\jest-circus\build\jestAdapterInit.js:857:11)
    at run (D:\onlinestore\backend\node_modules\jest-circus\build\jestAdapterInit.js:761:3)
    at runAndTransformResultsToJestFormat (D:\onlinestore\backend\node_modules\jest-circus\build\jestAdapterInit.js:1918:21)
    at jestAdapter (D:\onlinestore\backend\node_modules\jest-circus\build\runner.js:101:19)
    at runTestInternal (D:\onlinestore\backend\node_modules\jest-runner\build\index.js:275:16)
    at runTest (D:\onlinestore\backend\node_modules\jest-runner\build\index.js:343:7)
PASS src/cache/enhanced-cache.spec.ts
  EnhancedCacheService
    基础缓存操作
      √ should get cache with correct parameters (14 ms)
      √ should return cached value (8 ms)
      √ should return null for non-existent key (8 ms)
      √ should delete cache key (13 ms)
      √ should delete pattern (8 ms)
    缓存击穿防护测试
      √ 应该防止并发请求重复执行回调 (8 ms)
      √ 应该正确处理本地缓存命中 (8 ms)
    缓存穿透防护测试
      √ 应该缓存null值以防止穿透 (8 ms)
      √ 应该缓存undefined值以防止穿透 (12 ms)
    缓存雪崩防护测试
      √ 应该为TTL添加随机值以防止雪崩 (9 ms)
    缓存预热测试
      √ 应该正确预热多个缓存键 (9 ms)
      √ 应该处理预热过程中的错误 (24 ms)
    缓存统计测试
      √ 应该返回正确的缓存统计信息 (15 ms)
    错误处理测试
      √ 应该在Redis失败时降级到回调 (8 ms)
      √ 应该在回调失败时抛出错误 (9 ms)
    本地缓存限制测试
      √ 应该限制本地缓存大小 (119 ms)
    锁机制测试
      √ 应该正确管理活跃锁 (128 ms)

PASS src/health/health.controller.spec.ts
  HealthController
    check
      √ should return health status in development environment (16 ms)
      √ should return health status in production environment (15 ms)
      √ should handle health check failure (19 ms)
    getStatus
      √ should return system status (9 ms)
    getMetrics
      √ should return system metrics (8 ms)
    checkRedpanda
      √ should return redpanda health when configured (10 ms)
      √ should return not configured when redpanda is not available (17 ms)
      √ should handle redpanda health check failure (8 ms)
    redisIndicator
      √ should return redis up status when healthy (8 ms)
      √ should return redis down status in development environment when unhealthy (8 ms)
      √ should throw HealthCheckError in production environment when unhealthy (16 ms)

PASS src/auth/guards/roles.guard.spec.ts
  RolesGuard
    canActivate
      √ should allow access when no roles required (14 ms)
      √ should return false when no user in request (15 ms)
      √ should return false when user has no roles (7 ms)
      √ should allow access when user has required role (7 ms)
      √ should allow access when admin user accesses admin-only route (7 ms)
      √ should allow access when moderator user accesses moderator-only route (7 ms)
      √ should return false when user lacks required role (12 ms)
      √ should allow access when user has one of multiple required roles (7 ms)
      √ should return false when user has none of multiple required roles (6 ms)
      √ should allow access when user has all required roles (AND logic) (7 ms)
      √ should handle case when roles is null or undefined (7 ms)
      √ should handle case when user roles is not an array (7 ms)
      √ should handle case when required roles is not an array (12 ms)
      √ should allow access when user has higher privilege role (7 ms)
      √ should return false when user has lower privilege role (7 ms)
    matchRoles
      √ should return true when user has required role (6 ms)
      √ should return false when user lacks required role (6 ms)
      √ should return true when user has one of multiple required roles (14 ms)
      √ should return true when user has all required roles (6 ms)
      √ should return true when user has only some of required roles (OR logic) (6 ms)
      √ should return true when no roles required (7 ms)
      √ should return false when user has no roles but roles required (6 ms)
      √ should handle empty user roles array (8 ms)

PASS src/common/security/encryption.service.spec.ts
  EncryptionService
    Service Initialization
      √ should be defined (19 ms)
      √ should have all dependencies injected (6 ms)
      √ should throw error when ENCRYPTION_KEY is missing (24 ms)
      √ should throw error when ENCRYPTION_KEY has invalid length (11 ms)
      √ should throw error when ENCRYPTION_KEY is too short (7 ms)
    Encrypt
      √ should encrypt text successfully (7 ms)
      √ should handle encryption errors gracefully (7 ms)
    Decrypt
      √ should decrypt text successfully (8 ms)
      √ should handle invalid encrypted text format (14 ms)
      √ should handle missing encryption components (9 ms)
      √ should handle invalid IV length (8 ms)
      √ should handle invalid auth tag length (8 ms)
      √ should handle decryption errors gracefully (7 ms)
    Generate Secure Random
      √ should generate secure random string with default length (12 ms)
      √ should generate secure random string with custom length (7 ms)
      √ should handle random generation errors gracefully (8 ms)
    Generate HMAC
      √ should generate HMAC signature (7 ms)
    Verify HMAC
      √ should verify HMAC signature successfully (7 ms)
      √ should return false for invalid signature (6 ms)
    Generate Payment Nonce
      √ should generate payment nonce with timestamp and random string (14 ms)
    Validate Payment Nonce
      √ should validate valid payment nonce (7 ms)
      √ should reject expired payment nonce (6 ms)
      √ should handle invalid nonce format (6 ms)
      √ should handle non-numeric timestamp (7 ms)
    Integration Scenarios
      √ should handle complete encryption/decryption workflow (13 ms)
      √ should handle complete HMAC generation and verification workflow (6 ms)
      √ should handle complete payment nonce generation and validation workflow (6 ms)
    Error Handling
      √ should handle missing configuration gracefully (7 ms)
      √ should handle crypto module errors gracefully (9 ms)

PASS src/database/database.module.spec.ts
  DatabaseModule
    module configuration
      √ should be defined (5 ms)
      √ should be a valid NestJS module (4 ms)
    TypeORM configuration factory
      √ should create correct TypeORM configuration for development (11 ms)
      √ should create correct TypeORM configuration for production (4 ms)
      √ should create correct TypeORM configuration for TiDB (4 ms)
      √ should create correct TypeORM configuration for PostgreSQL (4 ms)
      √ should create correct TypeORM configuration for SQLite (4 ms)
      √ should configure TiDB-specific parameters (4 ms)
      √ should configure connection pool parameters (4 ms)
      √ should configure retry strategy (3 ms)
      √ should handle SSL configuration (3 ms)
      √ should use default TiDB port when not specified (6 ms)
      √ should use default PostgreSQL port when not specified (3 ms)
      √ should use default MySQL port when not specified (3 ms)
      √ should calculate connection pool parameters correctly (3 ms)
      √ should calculate PostgreSQL connection pool parameters correctly (3 ms)
    module integration
      √ should be able to compile module with dependencies (18 ms)
      √ should provide ConfigService (11 ms)
      √ should configure TypeORM with correct entities path (7 ms)
    error handling
      √ should handle zero or negative pool size (3 ms)
      √ should handle extremely large pool size (3 ms)
      configuration edge cases
        √ should handle empty database name (4 ms)
        √ should handle special characters in database password (3 ms)
        √ should handle IPv6 host addresses (3 ms)
        √ should handle custom entity paths (3 ms)
        √ should handle boolean SSL configuration (4 ms)
        √ should handle database type case sensitivity (3 ms)
    performance optimizations
      √ should configure connection pooling for high concurrency (6 ms)
      √ should configure PostgreSQL connection pooling for high concurrency (4 ms)
      √ should configure timeouts for reliability (6 ms)
      √ should configure TiDB distributed optimizations (5 ms)
      √ should configure SQLite optimizations (4 ms)
      √ should handle extreme high concurrency settings (4 ms)
      √ should handle custom timeout settings (4 ms)

PASS src/cache/cache.service.spec.ts
  CacheService
    Service Initialization
      √ should be defined (23 ms)
      √ should have all dependencies injected (12 ms)
    Get
      √ should return cached value when exists (11 ms)
      √ should return null when value does not exist (11 ms)
      √ should handle cache errors gracefully (17 ms)
    Set
      √ should set value in cache with default TTL (10 ms)
      √ should set value in cache with custom TTL (10 ms)
      √ should set value in cache without ID (10 ms)
      √ should handle set errors gracefully (18 ms)
    Delete
      √ should delete value from cache (10 ms)
      √ should handle delete errors gracefully (9 ms)
    Delete By Pattern
      √ should log warning for pattern-based deletion (10 ms)
      √ should handle pattern deletion errors gracefully (15 ms)
    Warmup
      √ should warmup cache with data (16 ms)
    Get Stats
      √ should return cache statistics (9 ms)
    Default TTL
      √ should return correct TTL for different resources (9 ms)
    Integration Scenarios
      √ should handle complete cache workflow (9 ms)
    Performance Monitoring
      √ should record metrics for cache operations (18 ms)

PASS src/cart/test/cart.integration.spec.ts
  Cart Integration Tests
    CartDomainService
      √ should validate add to cart (44 ms)
      √ should calculate cart total (12 ms)
      √ should calculate cart item count (10 ms)
    CartItemAggregate
      √ should create cart item (13 ms)
      √ should update quantity (22 ms)
      √ should toggle select flag (11 ms)
      √ should calculate total price (9 ms)
      √ should validate cart item (8 ms)

PASS src/auth/decorators/roles.decorator.spec.ts
  Roles Decorator
    Roles decorator
      √ should create a decorator that sets metadata with single role (4 ms)
      √ should create a decorator that sets metadata with multiple roles (2 ms)
      √ should create a decorator that sets metadata with empty roles (2 ms)
      √ should create a decorator that sets metadata with all user roles (4 ms)
      √ should handle UserRole.USER correctly (3 ms)
      √ should handle UserRole.MODERATOR correctly (3 ms)
      √ should maintain ROLES_KEY constant (3 ms)
      √ should call SetMetadata when Roles is called (7 ms)
      √ should handle repeated roles correctly (10 ms)
      √ should handle mixed roles correctly (3 ms)
      √ should preserve the order of roles (3 ms)
    Roles decorator edge cases
      √ should handle undefined and null roles (3 ms)
      √ should handle non-UserRole values (3 ms)
      √ should handle very large number of roles (4 ms)

PASS src/address/address.controller.spec.ts
  AddressController
    √ should be defined (15 ms)

PASS src/auth/guards/jwt-auth.guard.spec.ts
  JwtAuthGuard
    token extraction through canActivate
      √ should throw UnauthorizedException for missing authorization header (14 ms)
      √ should throw UnauthorizedException for invalid token format (18 ms)
      √ should throw UnauthorizedException for missing Bearer prefix (8 ms)
      √ should throw UnauthorizedException for Bearer without token (9 ms)
    canActivate
      √ should return true for public routes (8 ms)
      √ should throw UnauthorizedException when no authorization header is present (13 ms)
    handleRequest
      √ should throw UnauthorizedException for expired token (19 ms)
      √ should throw UnauthorizedException for invalid token (12 ms)
      √ should throw UnauthorizedException for not-yet-active token (8 ms)
      √ should return user for valid token (7 ms)
      √ should throw generic UnauthorizedException for other errors (13 ms)

PASS src/common/openobserve/openobserve.service.spec.ts
  OpenObserveService
    √ should be defined (12 ms)
    initializeConfig
      √ should initialize OpenObserve configuration (7 ms)
    ingestData
      √ should ingest data to OpenObserve (9 ms)
      √ should handle ingestion errors (8 ms)
    querySingleSourceOfTruth
      √ should query data from OpenObserve (8 ms)
    getSystemHealth
      √ should check OpenObserve health (8 ms)
      √ should handle unhealthy status (7 ms)
    sendLogs
      √ should send logs to OpenObserve (8 ms)
      √ should handle empty logs array (8 ms)
    queryLogs
      √ should query logs from OpenObserve (8 ms)
    testConnection
      √ should test OpenObserve connection successfully (8 ms)
      √ should throw error when connection test fails (28 ms)

PASS src/notification/notification.service.spec.ts
  NotificationService
    sendNotification
      √ should send email notification immediately (13 ms)
      √ should send SMS notification immediately (8 ms)
      √ should send push notification immediately (12 ms)
      √ should handle in-app notification without sending (8 ms)
      √ should schedule notification for later sending (7 ms)
      √ should handle email service failure (8 ms)
    getUserNotifications
      √ should return user notifications with pagination (8 ms)
      √ should use default pagination values (11 ms)
    markAsRead
      √ should mark notification as read (8 ms)
    markAllAsRead
      √ should mark all sent notifications as read for user (7 ms)
    getNotificationById
      √ should return notification by id (7 ms)
      √ should return null if notification not found (7 ms)
    createNotification
      √ should create notification using DTO (10 ms)

PASS src/auth/guards/jwt-auth.guard.debug.spec.ts
  JwtAuthGuard Debug
    √ should create guard instance (3 ms)
    √ should throw UnauthorizedException when no token (9 ms)
    √ should return true for public routes (2 ms)

[31m[Nest] 14512  - [39m2025/10/09 15:44:44 [31m  ERROR[39m [38;5;3m[CartApplicationService] [39m[31m添加购物车商品失败: 商品库存不足[39m
Error: 商品库存不足
    at Object.<anonymous> (D:\onlinestore\backend\src\cart\test\cart-concurrency.spec.ts:114:27)
    at Promise.finally.completed (D:\onlinestore\backend\node_modules\jest-circus\build\jestAdapterInit.js:1557:28)
    at new Promise (<anonymous>)
    at callAsyncCircusFn (D:\onlinestore\backend\node_modules\jest-circus\build\jestAdapterInit.js:1497:10)
    at _callCircusTest (D:\onlinestore\backend\node_modules\jest-circus\build\jestAdapterInit.js:1007:40)
    at _runTest (D:\onlinestore\backend\node_modules\jest-circus\build\jestAdapterInit.js:947:3)
    at D:\onlinestore\backend\node_modules\jest-circus\build\jestAdapterInit.js:849:7
    at _runTestsForDescribeBlock (D:\onlinestore\backend\node_modules\jest-circus\build\jestAdapterInit.js:862:11)
    at _runTestsForDescribeBlock (D:\onlinestore\backend\node_modules\jest-circus\build\jestAdapterInit.js:857:11)
    at _runTestsForDescribeBlock (D:\onlinestore\backend\node_modules\jest-circus\build\jestAdapterInit.js:857:11)
    at run (D:\onlinestore\backend\node_modules\jest-circus\build\jestAdapterInit.js:761:3)
    at runAndTransformResultsToJestFormat (D:\onlinestore\backend\node_modules\jest-circus\build\jestAdapterInit.js:1918:21)
    at jestAdapter (D:\onlinestore\backend\node_modules\jest-circus\build\runner.js:101:19)
    at runTestInternal (D:\onlinestore\backend\node_modules\jest-runner\build\index.js:275:16)
    at runTest (D:\onlinestore\backend\node_modules\jest-runner\build\index.js:343:7)
[31m[Nest] 14512  - [39m2025/10/09 15:44:44 [31m  ERROR[39m [38;5;3m[CartApplicationService] [39m[31m添加购物车商品失败: 商品库存不足[39m
Error: 商品库存不足
    at Object.<anonymous> (D:\onlinestore\backend\src\cart\test\cart-concurrency.spec.ts:156:68)
    at Promise.finally.completed (D:\onlinestore\backend\node_modules\jest-circus\build\jestAdapterInit.js:1557:28)
    at new Promise (<anonymous>)
    at callAsyncCircusFn (D:\onlinestore\backend\node_modules\jest-circus\build\jestAdapterInit.js:1497:10)
    at _callCircusTest (D:\onlinestore\backend\node_modules\jest-circus\build\jestAdapterInit.js:1007:40)
    at _runTest (D:\onlinestore\backend\node_modules\jest-circus\build\jestAdapterInit.js:947:3)
    at D:\onlinestore\backend\node_modules\jest-circus\build\jestAdapterInit.js:849:7
    at _runTestsForDescribeBlock (D:\onlinestore\backend\node_modules\jest-circus\build\jestAdapterInit.js:862:11)
    at _runTestsForDescribeBlock (D:\onlinestore\backend\node_modules\jest-circus\build\jestAdapterInit.js:857:11)
    at _runTestsForDescribeBlock (D:\onlinestore\backend\node_modules\jest-circus\build\jestAdapterInit.js:857:11)
    at run (D:\onlinestore\backend\node_modules\jest-circus\build\jestAdapterInit.js:761:3)
    at runAndTransformResultsToJestFormat (D:\onlinestore\backend\node_modules\jest-circus\build\jestAdapterInit.js:1918:21)
    at jestAdapter (D:\onlinestore\backend\node_modules\jest-circus\build\runner.js:101:19)
    at runTestInternal (D:\onlinestore\backend\node_modules\jest-runner\build\index.js:275:16)
    at runTest (D:\onlinestore\backend\node_modules\jest-runner\build\index.js:343:7)
[31m[Nest] 14512  - [39m2025/10/09 15:44:44 [31m  ERROR[39m [38;5;3m[CartApplicationService] [39m[31m添加购物车商品失败: 商品数量必须大于0[39m
Error: 商品数量必须大于0
    at Object.<anonymous> (D:\onlinestore\backend\src\cart\test\cart-concurrency.spec.ts:176:68)
    at Promise.finally.completed (D:\onlinestore\backend\node_modules\jest-circus\build\jestAdapterInit.js:1557:28)
    at new Promise (<anonymous>)
    at callAsyncCircusFn (D:\onlinestore\backend\node_modules\jest-circus\build\jestAdapterInit.js:1497:10)
    at _callCircusTest (D:\onlinestore\backend\node_modules\jest-circus\build\jestAdapterInit.js:1007:40)
    at _runTest (D:\onlinestore\backend\node_modules\jest-circus\build\jestAdapterInit.js:947:3)
    at D:\onlinestore\backend\node_modules\jest-circus\build\jestAdapterInit.js:849:7
    at _runTestsForDescribeBlock (D:\onlinestore\backend\node_modules\jest-circus\build\jestAdapterInit.js:862:11)
    at _runTestsForDescribeBlock (D:\onlinestore\backend\node_modules\jest-circus\build\jestAdapterInit.js:857:11)
    at _runTestsForDescribeBlock (D:\onlinestore\backend\node_modules\jest-circus\build\jestAdapterInit.js:857:11)
    at run (D:\onlinestore\backend\node_modules\jest-circus\build\jestAdapterInit.js:761:3)
    at runAndTransformResultsToJestFormat (D:\onlinestore\backend\node_modules\jest-circus\build\jestAdapterInit.js:1918:21)
    at jestAdapter (D:\onlinestore\backend\node_modules\jest-circus\build\runner.js:101:19)
    at runTestInternal (D:\onlinestore\backend\node_modules\jest-runner\build\index.js:275:16)
    at runTest (D:\onlinestore\backend\node_modules\jest-runner\build\index.js:343:7)
PASS src/cart/test/cart-concurrency.spec.ts
  CartConcurrencyTest
    并发添加商品测试
      √ 应该正确处理并发添加相同商品 (14 ms)
      √ 应该处理领域服务异常 (20 ms)
    应用服务异常处理测试
      √ 应该正确处理领域服务异常 (15 ms)
      √ 应该正确处理参数验证异常 (10 ms)
    应用服务功能测试
      √ 应该正确转换领域对象为DTO (11 ms)
      √ 应该正确处理空属性值 (9 ms)

PASS src/app.controller.spec.ts
  Basic Tests
    √ should pass basic test (2 ms)
    √ should handle simple calculations (2 ms)
    √ should work with objects (2 ms)

FAIL src/cqrs/bus/query.bus.spec.ts
  ● Test suite failed to run

    [96msrc/cqrs/bus/query.bus.spec.ts[0m:[93m21[0m:[93m5[0m - [91merror[0m[90m TS2322: [0mType '{ handle: jest.MockInstance<Promise<{ success: boolean; data: any; fromCache: boolean; }>, [], any>; getName: jest.MockInstance<string, [], any>; }' is not assignable to type 'IQueryHandler<IQuery<any>, any>'.
      Types of property 'handle' are incompatible.
        Type 'MockInstance<Promise<{ success: boolean; data: any; fromCache: boolean; }>, [], any>' is not assignable to type '(query: IQuery<any>) => Promise<IQueryResult<any>>'.
          Type 'MockInstance<Promise<{ success: boolean; data: any; fromCache: boolean; }>, [], any>' provides no match for the signature '(query: IQuery<any>): Promise<IQueryResult<any>>'.

    [7m21[0m     mockHandler = TestMocker.mockQueryHandler();
    [7m  [0m [91m    ~~~~~~~~~~~[0m
    [96msrc/cqrs/bus/query.bus.spec.ts[0m:[93m32[0m:[93m45[0m - [91merror[0m[90m TS2345: [0mArgument of type '(key: string, value: any, ttl?: number) => Promise<string>' is not assignable to parameter of type '(key: string, value: any, ttl?: number | undefined) => Promise<boolean>'.
      Type 'Promise<string>' is not assignable to type 'Promise<boolean>'.
        Type 'string' is not assignable to type 'boolean'.

    [7m32[0m     mockCacheService.set.mockImplementation(async (key: string, value: any, ttl?: number) => {
    [7m  [0m [91m                                            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~[0m
    [96msrc/cqrs/bus/query.bus.spec.ts[0m:[93m37[0m:[93m48[0m - [91merror[0m[90m TS2345: [0mArgument of type '(key: string) => Promise<number>' is not assignable to parameter of type '(key: string) => Promise<boolean>'.
      Type 'Promise<number>' is not assignable to type 'Promise<boolean>'.
        Type 'number' is not assignable to type 'boolean'.

    [7m37[0m     mockCacheService.delete.mockImplementation(async (key: string) => {
    [7m  [0m [91m                                               ~~~~~~~~~~~~~~~~~~~~~~~~[0m
    [96msrc/cqrs/bus/query.bus.spec.ts[0m:[93m43[0m:[93m54[0m - [91merror[0m[90m TS2345: [0mArgument of type '(pattern: string) => Promise<void>' is not assignable to parameter of type '(pattern: string) => Promise<number>'.
      Type 'Promise<void>' is not assignable to type 'Promise<number>'.
        Type 'void' is not assignable to type 'number'.

    [7m43[0m     mockCacheService.clearPattern.mockImplementation(async (pattern: string) => {
    [7m  [0m [91m                                                     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~[0m
    [96msrc/cqrs/bus/query.bus.spec.ts[0m:[93m54[0m:[93m28[0m - [91merror[0m[90m TS2345: [0mArgument of type '{ get: jest.MockInstance<Promise<any>, [key: string], any>; set: jest.MockInstance<Promise<boolean>, [key: string, value: any, ttl?: number | undefined], any>; del: jest.MockInstance<...>; delete: jest.MockInstance<...>; exists: jest.MockInstance<...>; clearPattern: jest.MockInstance<...>; clear: jest.MockInstance<....' is not assignable to parameter of type 'IQueryCache'.
      Types of property 'get' are incompatible.
        Type 'MockInstance<Promise<any>, [key: string], any>' is not assignable to type '<T>(key: string) => Promise<T | null>'.
          Type 'MockInstance<Promise<any>, [key: string], any>' provides no match for the signature '<T>(key: string): Promise<T | null>'.

    [7m54[0m     queryBus.setQueryCache(mockCacheService);
    [7m  [0m [91m                           ~~~~~~~~~~~~~~~~[0m
    [96msrc/cqrs/bus/query.bus.spec.ts[0m:[93m195[0m:[93m36[0m - [91merror[0m[90m TS2345: [0mArgument of type '{ handle: jest.MockInstance<Promise<{ success: boolean; data: any; fromCache: boolean; }>, [], any>; getName: jest.MockInstance<string, [], any>; }' is not assignable to parameter of type 'IQueryHandler<IQuery<any>, any>'.
      Types of property 'handle' are incompatible.
        Type 'MockInstance<Promise<{ success: boolean; data: any; fromCache: boolean; }>, [], any>' is not assignable to type '(query: IQuery<any>) => Promise<IQueryResult<any>>'.
          Type 'MockInstance<Promise<{ success: boolean; data: any; fromCache: boolean; }>, [], any>' provides no match for the signature '(query: IQuery<any>): Promise<IQueryResult<any>>'.

    [7m195[0m       queryBus.register(queryType, secondHandler);
    [7m   [0m [91m                                   ~~~~~~~~~~~~~[0m
    [96msrc/cqrs/bus/query.bus.spec.ts[0m:[93m209[0m:[93m30[0m - [91merror[0m[90m TS2345: [0mArgument of type '{ get: jest.MockInstance<Promise<any>, [key: string], any>; set: jest.MockInstance<Promise<boolean>, [key: string, value: any, ttl?: number | undefined], any>; del: jest.MockInstance<...>; delete: jest.MockInstance<...>; exists: jest.MockInstance<...>; clearPattern: jest.MockInstance<...>; clear: jest.MockInstance<....' is not assignable to parameter of type 'IQueryCache'.
      Types of property 'get' are incompatible.
        Type 'MockInstance<Promise<any>, [key: string], any>' is not assignable to type '<T>(key: string) => Promise<T | null>'.
          Type 'MockInstance<Promise<any>, [key: string], any>' provides no match for the signature '<T>(key: string): Promise<T | null>'.

    [7m209[0m       queryBus.setQueryCache(cacheService);
    [7m   [0m [91m                             ~~~~~~~~~~~~[0m

FAIL src/cqrs/bus/event.bus.spec.ts
  ● Test suite failed to run

    [96msrc/cqrs/bus/event.bus.spec.ts[0m:[93m21[0m:[93m5[0m - [91merror[0m[90m TS2322: [0mType '{ handle: jest.MockInstance<Promise<{ success: boolean; }>, [], any>; getName: jest.MockInstance<string, [], any>; getEventType: jest.MockInstance<string, [], any>; }' is not assignable to type 'IEventHandler<IEvent>'.
      Types of property 'handle' are incompatible.
        Type 'MockInstance<Promise<{ success: boolean; }>, [], any>' is not assignable to type '(event: IEvent) => Promise<IEventHandlerResult>'.
          Type 'MockInstance<Promise<{ success: boolean; }>, [], any>' provides no match for the signature '(event: IEvent): Promise<IEventHandlerResult>'.

    [7m21[0m     mockHandler = TestMocker.mockEventHandler();
    [7m  [0m [91m    ~~~~~~~~~~~[0m
    [96msrc/cqrs/bus/event.bus.spec.ts[0m:[93m95[0m:[93m41[0m - [91merror[0m[90m TS2345: [0mArgument of type '{ handle: jest.MockInstance<Promise<{ success: boolean; }>, [], any>; getName: jest.MockInstance<string, [], any>; getEventType: jest.MockInstance<string, [], any>; }' is not assignable to parameter of type 'IEventHandler<IEvent>'.
      Types of property 'handle' are incompatible.
        Type 'MockInstance<Promise<{ success: boolean; }>, [], any>' is not assignable to type '(event: IEvent) => Promise<IEventHandlerResult>'.
          Type 'MockInstance<Promise<{ success: boolean; }>, [], any>' provides no match for the signature '(event: IEvent): Promise<IEventHandlerResult>'.

    [7m95[0m       eventBus.register('user-created', firstHandler);
    [7m  [0m [91m                                        ~~~~~~~~~~~~[0m
    [96msrc/cqrs/bus/event.bus.spec.ts[0m:[93m96[0m:[93m41[0m - [91merror[0m[90m TS2345: [0mArgument of type '{ handle: jest.MockInstance<Promise<{ success: boolean; }>, [], any>; getName: jest.MockInstance<string, [], any>; getEventType: jest.MockInstance<string, [], any>; }' is not assignable to parameter of type 'IEventHandler<IEvent>'.
      Types of property 'handle' are incompatible.
        Type 'MockInstance<Promise<{ success: boolean; }>, [], any>' is not assignable to type '(event: IEvent) => Promise<IEventHandlerResult>'.
          Type 'MockInstance<Promise<{ success: boolean; }>, [], any>' provides no match for the signature '(event: IEvent): Promise<IEventHandlerResult>'.

    [7m96[0m       eventBus.register('user-created', secondHandler);
    [7m  [0m [91m                                        ~~~~~~~~~~~~~[0m
    [96msrc/cqrs/bus/event.bus.spec.ts[0m:[93m133[0m:[93m36[0m - [91merror[0m[90m TS2345: [0mArgument of type '{ handle: jest.MockInstance<Promise<{ success: boolean; }>, [], any>; getName: jest.MockInstance<string, [], any>; getEventType: jest.MockInstance<string, [], any>; }' is not assignable to parameter of type 'IEventHandler<IEvent>'.
      Types of property 'handle' are incompatible.
        Type 'MockInstance<Promise<{ success: boolean; }>, [], any>' is not assignable to type '(event: IEvent) => Promise<IEventHandlerResult>'.
          Type 'MockInstance<Promise<{ success: boolean; }>, [], any>' provides no match for the signature '(event: IEvent): Promise<IEventHandlerResult>'.

    [7m133[0m       eventBus.register(eventType, secondHandler);
    [7m   [0m [91m                                   ~~~~~~~~~~~~~[0m
    [96msrc/cqrs/bus/event.bus.spec.ts[0m:[93m149[0m:[93m36[0m - [91merror[0m[90m TS2345: [0mArgument of type '{ handle: jest.MockInstance<Promise<{ success: boolean; }>, [], any>; getName: jest.MockInstance<string, [], any>; getEventType: jest.MockInstance<string, [], any>; }' is not assignable to parameter of type 'IEventHandler<IEvent>'.
      Types of property 'handle' are incompatible.
        Type 'MockInstance<Promise<{ success: boolean; }>, [], any>' is not assignable to type '(event: IEvent) => Promise<IEventHandlerResult>'.
          Type 'MockInstance<Promise<{ success: boolean; }>, [], any>' provides no match for the signature '(event: IEvent): Promise<IEventHandlerResult>'.

    [7m149[0m       eventBus.register(eventType, secondHandler);
    [7m   [0m [91m                                   ~~~~~~~~~~~~~[0m

FAIL src/cqrs/bus/command.bus.spec.ts
  ● Test suite failed to run

    [96msrc/cqrs/bus/command.bus.spec.ts[0m:[93m28[0m:[93m42[0m - [91merror[0m[90m TS2345: [0mArgument of type 'Mock<ICommandHandler<ICommand>, any, any>' is not assignable to parameter of type 'ICommandHandler<ICommand>'.
      Type 'Mock<ICommandHandler<ICommand>, any, any>' is missing the following properties from type 'ICommandHandler<ICommand>': handle, getName

    [7m28[0m       commandBus.register('TestCommand', mockHandler);
    [7m  [0m [91m                                         ~~~~~~~~~~~[0m

      [96msrc/cqrs/bus/command.bus.spec.ts[0m:[93m28[0m:[93m42[0m
        [7m28[0m       commandBus.register('TestCommand', mockHandler);
        [7m  [0m [96m                                         ~~~~~~~~~~~[0m
        Did you mean to use 'new' with this expression?
    [96msrc/cqrs/bus/command.bus.spec.ts[0m:[93m35[0m:[93m26[0m - [91merror[0m[90m TS2339: [0mProperty 'handle' does not exist on type 'Mock<ICommandHandler<ICommand>, any, any>'.

    [7m35[0m       expect(mockHandler.handle).toHaveBeenCalledWith(command);
    [7m  [0m [91m                         ~~~~~~[0m
    [96msrc/cqrs/bus/command.bus.spec.ts[0m:[93m53[0m:[93m19[0m - [91merror[0m[90m TS2339: [0mProperty 'handle' does not exist on type 'Mock<ICommandHandler<ICommand>, any, any>'.

    [7m53[0m       mockHandler.handle.mockRejectedValue(error);
    [7m  [0m [91m                  ~~~~~~[0m
    [96msrc/cqrs/bus/command.bus.spec.ts[0m:[93m55[0m:[93m42[0m - [91merror[0m[90m TS2345: [0mArgument of type 'Mock<ICommandHandler<ICommand>, any, any>' is not assignable to parameter of type 'ICommandHandler<ICommand>'.
      Type 'Mock<ICommandHandler<ICommand>, any, any>' is missing the following properties from type 'ICommandHandler<ICommand>': handle, getName

    [7m55[0m       commandBus.register('TestCommand', mockHandler);
    [7m  [0m [91m                                         ~~~~~~~~~~~[0m

      [96msrc/cqrs/bus/command.bus.spec.ts[0m:[93m55[0m:[93m42[0m
        [7m55[0m       commandBus.register('TestCommand', mockHandler);
        [7m  [0m [96m                                         ~~~~~~~~~~~[0m
        Did you mean to use 'new' with this expression?
    [96msrc/cqrs/bus/command.bus.spec.ts[0m:[93m69[0m:[93m42[0m - [91merror[0m[90m TS2345: [0mArgument of type 'Mock<ICommandHandler<ICommand>, any, any>' is not assignable to parameter of type 'ICommandHandler<ICommand>'.
      Type 'Mock<ICommandHandler<ICommand>, any, any>' is missing the following properties from type 'ICommandHandler<ICommand>': handle, getName

    [7m69[0m       commandBus.register('TestCommand', mockHandler);
    [7m  [0m [91m                                         ~~~~~~~~~~~[0m

      [96msrc/cqrs/bus/command.bus.spec.ts[0m:[93m69[0m:[93m42[0m
        [7m69[0m       commandBus.register('TestCommand', mockHandler);
        [7m  [0m [96m                                         ~~~~~~~~~~~[0m
        Did you mean to use 'new' with this expression?
    [96msrc/cqrs/bus/command.bus.spec.ts[0m:[93m83[0m:[93m42[0m - [91merror[0m[90m TS2345: [0mArgument of type 'Mock<ICommandHandler<ICommand>, any, any>' is not assignable to parameter of type 'ICommandHandler<ICommand>'.
      Type 'Mock<ICommandHandler<ICommand>, any, any>' is missing the following properties from type 'ICommandHandler<ICommand>': handle, getName

    [7m83[0m       commandBus.register('TestCommand', mockHandler);
    [7m  [0m [91m                                         ~~~~~~~~~~~[0m

      [96msrc/cqrs/bus/command.bus.spec.ts[0m:[93m83[0m:[93m42[0m
        [7m83[0m       commandBus.register('TestCommand', mockHandler);
        [7m  [0m [96m                                         ~~~~~~~~~~~[0m
        Did you mean to use 'new' with this expression?
    [96msrc/cqrs/bus/command.bus.spec.ts[0m:[93m100[0m:[93m42[0m - [91merror[0m[90m TS2345: [0mArgument of type 'Mock<ICommandHandler<ICommand>, any, any>' is not assignable to parameter of type 'ICommandHandler<ICommand>'.
      Type 'Mock<ICommandHandler<ICommand>, any, any>' is missing the following properties from type 'ICommandHandler<ICommand>': handle, getName

    [7m100[0m       commandBus.register('TestCommand', mockHandler);
    [7m   [0m [91m                                         ~~~~~~~~~~~[0m

      [96msrc/cqrs/bus/command.bus.spec.ts[0m:[93m100[0m:[93m42[0m
        [7m100[0m       commandBus.register('TestCommand', mockHandler);
        [7m   [0m [96m                                         ~~~~~~~~~~~[0m
        Did you mean to use 'new' with this expression?
    [96msrc/cqrs/bus/command.bus.spec.ts[0m:[93m130[0m:[93m40[0m - [91merror[0m[90m TS2345: [0mArgument of type 'Mock<ICommandHandler<ICommand>, any, any>' is not assignable to parameter of type 'ICommandHandler<ICommand>'.
      Type 'Mock<ICommandHandler<ICommand>, any, any>' is missing the following properties from type 'ICommandHandler<ICommand>': handle, getName

    [7m130[0m       commandBus.register(commandType, handler);
    [7m   [0m [91m                                       ~~~~~~~[0m

      [96msrc/cqrs/bus/command.bus.spec.ts[0m:[93m130[0m:[93m40[0m
        [7m130[0m       commandBus.register(commandType, handler);
        [7m   [0m [96m                                       ~~~~~~~[0m
        Did you mean to use 'new' with this expression?
    [96msrc/cqrs/bus/command.bus.spec.ts[0m:[93m144[0m:[93m40[0m - [91merror[0m[90m TS2345: [0mArgument of type 'Mock<ICommandHandler<ICommand>, any, any>' is not assignable to parameter of type 'ICommandHandler<ICommand>'.
      Type 'Mock<ICommandHandler<ICommand>, any, any>' is missing the following properties from type 'ICommandHandler<ICommand>': handle, getName

    [7m144[0m       commandBus.register(commandType, firstHandler);
    [7m   [0m [91m                                       ~~~~~~~~~~~~[0m

      [96msrc/cqrs/bus/command.bus.spec.ts[0m:[93m144[0m:[93m40[0m
        [7m144[0m       commandBus.register(commandType, firstHandler);
        [7m   [0m [96m                                       ~~~~~~~~~~~~[0m
        Did you mean to use 'new' with this expression?
    [96msrc/cqrs/bus/command.bus.spec.ts[0m:[93m145[0m:[93m40[0m - [91merror[0m[90m TS2345: [0mArgument of type 'Mock<ICommandHandler<ICommand>, any, any>' is not assignable to parameter of type 'ICommandHandler<ICommand>'.
      Type 'Mock<ICommandHandler<ICommand>, any, any>' is missing the following properties from type 'ICommandHandler<ICommand>': handle, getName

    [7m145[0m       commandBus.register(commandType, secondHandler);
    [7m   [0m [91m                                       ~~~~~~~~~~~~~[0m

      [96msrc/cqrs/bus/command.bus.spec.ts[0m:[93m145[0m:[93m40[0m
        [7m145[0m       commandBus.register(commandType, secondHandler);
        [7m   [0m [96m                                       ~~~~~~~~~~~~~[0m
        Did you mean to use 'new' with this expression?
    [96msrc/cqrs/bus/command.bus.spec.ts[0m:[93m159[0m:[93m32[0m - [91merror[0m[90m TS2345: [0mArgument of type '{ name: string; execute: jest.MockInstance<Promise<any>, [command: any, next: () => Promise<any>], any>; }' is not assignable to parameter of type 'ICommandMiddleware'.
      Types of property 'execute' are incompatible.
        Type 'MockInstance<Promise<any>, [command: any, next: () => Promise<any>], any>' is not assignable to type '<TCommand extends ICommand>(command: TCommand, next: () => Promise<ICommandResult<any>>) => Promise<ICommandResult<any>>'.
          Type 'MockInstance<Promise<any>, [command: any, next: () => Promise<any>], any>' provides no match for the signature '<TCommand extends ICommand>(command: TCommand, next: () => Promise<ICommandResult<any>>): Promise<ICommandResult<any>>'.

    [7m159[0m       commandBus.addMiddleware(middleware);
    [7m   [0m [91m                               ~~~~~~~~~~[0m
    [96msrc/cqrs/bus/command.bus.spec.ts[0m:[93m171[0m:[93m32[0m - [91merror[0m[90m TS2345: [0mArgument of type '{ name: string; execute: jest.MockInstance<Promise<any>, [command: any, next: () => Promise<any>], any>; }' is not assignable to parameter of type 'ICommandMiddleware'.
      Types of property 'execute' are incompatible.
        Type 'MockInstance<Promise<any>, [command: any, next: () => Promise<any>], any>' is not assignable to type '<TCommand extends ICommand>(command: TCommand, next: () => Promise<ICommandResult<any>>) => Promise<ICommandResult<any>>'.
          Type 'MockInstance<Promise<any>, [command: any, next: () => Promise<any>], any>' provides no match for the signature '<TCommand extends ICommand>(command: TCommand, next: () => Promise<ICommandResult<any>>): Promise<ICommandResult<any>>'.

    [7m171[0m       commandBus.addMiddleware(middleware);
    [7m   [0m [91m                               ~~~~~~~~~~[0m
    [96msrc/cqrs/bus/command.bus.spec.ts[0m:[93m186[0m:[93m42[0m - [91merror[0m[90m TS2345: [0mArgument of type 'Mock<ICommandHandler<ICommand>, any, any>' is not assignable to parameter of type 'ICommandHandler<ICommand>'.
      Type 'Mock<ICommandHandler<ICommand>, any, any>' is missing the following properties from type 'ICommandHandler<ICommand>': handle, getName

    [7m186[0m       commandBus.register('TestCommand', mockHandler);
    [7m   [0m [91m                                         ~~~~~~~~~~~[0m

      [96msrc/cqrs/bus/command.bus.spec.ts[0m:[93m186[0m:[93m42[0m
        [7m186[0m       commandBus.register('TestCommand', mockHandler);
        [7m   [0m [96m                                         ~~~~~~~~~~~[0m
        Did you mean to use 'new' with this expression?
    [96msrc/cqrs/bus/command.bus.spec.ts[0m:[93m223[0m:[93m35[0m - [91merror[0m[90m TS2345: [0mArgument of type 'Mock<ICommandHandler<ICommand>, any, any>' is not assignable to parameter of type 'ICommandHandler<ICommand>'.
      Type 'Mock<ICommandHandler<ICommand>, any, any>' is missing the following properties from type 'ICommandHandler<ICommand>': handle, getName

    [7m223[0m         commandBus.register(type, mockHandler);
    [7m   [0m [91m                                  ~~~~~~~~~~~[0m

      [96msrc/cqrs/bus/command.bus.spec.ts[0m:[93m223[0m:[93m35[0m
        [7m223[0m         commandBus.register(type, mockHandler);
        [7m   [0m [96m                                  ~~~~~~~~~~~[0m
        Did you mean to use 'new' with this expression?
    [96msrc/cqrs/bus/command.bus.spec.ts[0m:[93m241[0m:[93m32[0m - [91merror[0m[90m TS2345: [0mArgument of type '{ name: string; execute: jest.MockInstance<Promise<any>, [command: any, next: () => Promise<any>], any>; }' is not assignable to parameter of type 'ICommandMiddleware'.
      Types of property 'execute' are incompatible.
        Type 'MockInstance<Promise<any>, [command: any, next: () => Promise<any>], any>' is not assignable to type '<TCommand extends ICommand>(command: TCommand, next: () => Promise<ICommandResult<any>>) => Promise<ICommandResult<any>>'.
          Type 'MockInstance<Promise<any>, [command: any, next: () => Promise<any>], any>' provides no match for the signature '<TCommand extends ICommand>(command: TCommand, next: () => Promise<ICommandResult<any>>): Promise<ICommandResult<any>>'.

    [7m241[0m       commandBus.addMiddleware(middleware1);
    [7m   [0m [91m                               ~~~~~~~~~~~[0m
    [96msrc/cqrs/bus/command.bus.spec.ts[0m:[93m242[0m:[93m32[0m - [91merror[0m[90m TS2345: [0mArgument of type '{ name: string; execute: jest.MockInstance<Promise<any>, [command: any, next: () => Promise<any>], any>; }' is not assignable to parameter of type 'ICommandMiddleware'.
      Types of property 'execute' are incompatible.
        Type 'MockInstance<Promise<any>, [command: any, next: () => Promise<any>], any>' is not assignable to type '<TCommand extends ICommand>(command: TCommand, next: () => Promise<ICommandResult<any>>) => Promise<ICommandResult<any>>'.
          Type 'MockInstance<Promise<any>, [command: any, next: () => Promise<any>], any>' provides no match for the signature '<TCommand extends ICommand>(command: TCommand, next: () => Promise<ICommandResult<any>>): Promise<ICommandResult<any>>'.

    [7m242[0m       commandBus.addMiddleware(middleware2);
    [7m   [0m [91m                               ~~~~~~~~~~~[0m
    [96msrc/cqrs/bus/command.bus.spec.ts[0m:[93m259[0m:[93m42[0m - [91merror[0m[90m TS2345: [0mArgument of type 'Mock<ICommandHandler<ICommand>, any, any>' is not assignable to parameter of type 'ICommandHandler<ICommand>'.
      Type 'Mock<ICommandHandler<ICommand>, any, any>' is missing the following properties from type 'ICommandHandler<ICommand>': handle, getName

    [7m259[0m       commandBus.register('TestCommand', mockHandler);
    [7m   [0m [91m                                         ~~~~~~~~~~~[0m

      [96msrc/cqrs/bus/command.bus.spec.ts[0m:[93m259[0m:[93m42[0m
        [7m259[0m       commandBus.register('TestCommand', mockHandler);
        [7m   [0m [96m                                         ~~~~~~~~~~~[0m
        Did you mean to use 'new' with this expression?

FAIL src/products/products.service.spec.ts
  ● Test suite failed to run

    [96msrc/products/products.service.spec.ts[0m:[93m263[0m:[93m56[0m - [91merror[0m[90m TS2345: [0mArgument of type '{ id: number; name: string; description: string; isActive: boolean; sortOrder: number; createdAt: Date; updatedAt: Date; }' is not assignable to parameter of type 'Category | Promise<Category | null> | null'.
      Type '{ id: number; name: string; description: string; isActive: boolean; sortOrder: number; createdAt: Date; updatedAt: Date; }' is missing the following properties from type 'Category': slug, icon, children, parent, products

    [7m263[0m       mockCategoryRepository.findOne.mockResolvedValue(mockCategory);
    [7m   [0m [91m                                                       ~~~~~~~~~~~~[0m
    [96msrc/products/products.service.spec.ts[0m:[93m264[0m:[93m52[0m - [91merror[0m[90m TS2345: [0mArgument of type '{ id: number; name: string; description: string; price: number; originalPrice: number; stock: number; views: number; sales: number; isActive: boolean; publishedAt: Date; tags: string[]; specifications: { ...; }; category: { ...; }; images: never[]; createdAt: Date; updatedAt: Date; }' is not assignable to parameter of type 'Product'.
      Type '{ id: number; name: string; description: string; price: number; originalPrice: number; stock: number; views: number; sales: number; isActive: boolean; publishedAt: Date; tags: string[]; specifications: { ...; }; category: { ...; }; images: never[]; createdAt: Date; updatedAt: Date; }' is missing the following properties from type 'Product': favorites, mainImage, version

    [7m264[0m       mockProductRepository.create.mockReturnValue(mockProduct);
    [7m   [0m [91m                                                   ~~~~~~~~~~~[0m
    [96msrc/products/products.service.spec.ts[0m:[93m265[0m:[93m52[0m - [91merror[0m[90m TS2345: [0mArgument of type '{ id: number; name: string; description: string; price: number; originalPrice: number; stock: number; views: number; sales: number; isActive: boolean; publishedAt: Date; tags: string[]; specifications: { ...; }; category: { ...; }; images: never[]; createdAt: Date; updatedAt: Date; }' is not assignable to parameter of type 'Product | Promise<Product>'.
      Type '{ id: number; name: string; description: string; price: number; originalPrice: number; stock: number; views: number; sales: number; isActive: boolean; publishedAt: Date; tags: string[]; specifications: { ...; }; category: { ...; }; images: never[]; createdAt: Date; updatedAt: Date; }' is missing the following properties from type 'Product': favorites, mainImage, version

    [7m265[0m       mockProductRepository.save.mockResolvedValue(mockProduct);
    [7m   [0m [91m                                                   ~~~~~~~~~~~[0m
    [96msrc/products/products.service.spec.ts[0m:[93m297[0m:[93m56[0m - [91merror[0m[90m TS2345: [0mArgument of type '{ id: number; name: string; description: string; isActive: boolean; sortOrder: number; createdAt: Date; updatedAt: Date; }' is not assignable to parameter of type 'Category | Promise<Category | null> | null'.
      Type '{ id: number; name: string; description: string; isActive: boolean; sortOrder: number; createdAt: Date; updatedAt: Date; }' is missing the following properties from type 'Category': slug, icon, children, parent, products

    [7m297[0m       mockCategoryRepository.findOne.mockResolvedValue(mockCategory);
    [7m   [0m [91m                                                       ~~~~~~~~~~~~[0m
    [96msrc/products/products.service.spec.ts[0m:[93m298[0m:[93m52[0m - [91merror[0m[90m TS2345: [0mArgument of type '{ id: number; name: string; description: string; price: number; originalPrice: number; stock: number; views: number; sales: number; isActive: boolean; publishedAt: Date; tags: string[]; specifications: { ...; }; category: { ...; }; images: never[]; createdAt: Date; updatedAt: Date; }' is not assignable to parameter of type 'Product'.
      Type '{ id: number; name: string; description: string; price: number; originalPrice: number; stock: number; views: number; sales: number; isActive: boolean; publishedAt: Date; tags: string[]; specifications: { ...; }; category: { ...; }; images: never[]; createdAt: Date; updatedAt: Date; }' is missing the following properties from type 'Product': favorites, mainImage, version

    [7m298[0m       mockProductRepository.create.mockReturnValue(mockProduct);
    [7m   [0m [91m                                                   ~~~~~~~~~~~[0m
    [96msrc/products/products.service.spec.ts[0m:[93m299[0m:[93m52[0m - [91merror[0m[90m TS2345: [0mArgument of type '{ id: number; name: string; description: string; price: number; originalPrice: number; stock: number; views: number; sales: number; isActive: boolean; publishedAt: Date; tags: string[]; specifications: { ...; }; category: { ...; }; images: never[]; createdAt: Date; updatedAt: Date; }' is not assignable to parameter of type 'Product | Promise<Product>'.
      Type '{ id: number; name: string; description: string; price: number; originalPrice: number; stock: number; views: number; sales: number; isActive: boolean; publishedAt: Date; tags: string[]; specifications: { ...; }; category: { ...; }; images: never[]; createdAt: Date; updatedAt: Date; }' is missing the following properties from type 'Product': favorites, mainImage, version

    [7m299[0m       mockProductRepository.save.mockResolvedValue(mockProduct);
    [7m   [0m [91m                                                   ~~~~~~~~~~~[0m
    [96msrc/products/products.service.spec.ts[0m:[93m311[0m:[93m56[0m - [91merror[0m[90m TS2345: [0mArgument of type '{ id: number; name: string; description: string; isActive: boolean; sortOrder: number; createdAt: Date; updatedAt: Date; }' is not assignable to parameter of type 'Category | Promise<Category | null> | null'.
      Type '{ id: number; name: string; description: string; isActive: boolean; sortOrder: number; createdAt: Date; updatedAt: Date; }' is missing the following properties from type 'Category': slug, icon, children, parent, products

    [7m311[0m       mockCategoryRepository.findOne.mockResolvedValue(mockCategory);
    [7m   [0m [91m                                                       ~~~~~~~~~~~~[0m
    [96msrc/products/products.service.spec.ts[0m:[93m312[0m:[93m52[0m - [91merror[0m[90m TS2345: [0mArgument of type '{ id: number; name: string; description: string; price: number; originalPrice: number; stock: number; views: number; sales: number; isActive: boolean; publishedAt: Date; tags: string[]; specifications: { ...; }; category: { ...; }; images: never[]; createdAt: Date; updatedAt: Date; }' is not assignable to parameter of type 'Product'.
      Type '{ id: number; name: string; description: string; price: number; originalPrice: number; stock: number; views: number; sales: number; isActive: boolean; publishedAt: Date; tags: string[]; specifications: { ...; }; category: { ...; }; images: never[]; createdAt: Date; updatedAt: Date; }' is missing the following properties from type 'Product': favorites, mainImage, version

    [7m312[0m       mockProductRepository.create.mockReturnValue(mockProduct);
    [7m   [0m [91m                                                   ~~~~~~~~~~~[0m
    [96msrc/products/products.service.spec.ts[0m:[93m313[0m:[93m52[0m - [91merror[0m[90m TS2345: [0mArgument of type '{ id: number; name: string; description: string; price: number; originalPrice: number; stock: number; views: number; sales: number; isActive: boolean; publishedAt: Date; tags: string[]; specifications: { ...; }; category: { ...; }; images: never[]; createdAt: Date; updatedAt: Date; }' is not assignable to parameter of type 'Product | Promise<Product>'.
      Type '{ id: number; name: string; description: string; price: number; originalPrice: number; stock: number; views: number; sales: number; isActive: boolean; publishedAt: Date; tags: string[]; specifications: { ...; }; category: { ...; }; images: never[]; createdAt: Date; updatedAt: Date; }' is missing the following properties from type 'Product': favorites, mainImage, version

    [7m313[0m       mockProductRepository.save.mockResolvedValue(mockProduct);
    [7m   [0m [91m                                                   ~~~~~~~~~~~[0m
    [96msrc/products/products.service.spec.ts[0m:[93m340[0m:[93m55[0m - [91merror[0m[90m TS2345: [0mArgument of type '{ id: number; name: string; description: string; price: number; originalPrice: number; stock: number; views: number; sales: number; isActive: boolean; publishedAt: Date; tags: string[]; specifications: { ...; }; category: { ...; }; images: never[]; createdAt: Date; updatedAt: Date; }' is not assignable to parameter of type 'Product | Promise<Product | null> | null'.
      Type '{ id: number; name: string; description: string; price: number; originalPrice: number; stock: number; views: number; sales: number; isActive: boolean; publishedAt: Date; tags: string[]; specifications: { ...; }; category: { ...; }; images: never[]; createdAt: Date; updatedAt: Date; }' is missing the following properties from type 'Product': favorites, mainImage, version

    [7m340[0m       mockProductRepository.findOne.mockResolvedValue(mockProduct);
    [7m   [0m [91m                                                      ~~~~~~~~~~~[0m
    [96msrc/products/products.service.spec.ts[0m:[93m394[0m:[93m53[0m - [91merror[0m[90m TS2739: [0mType '{ id: number; name: string; description: string; price: number; originalPrice: number; stock: number; views: number; sales: number; isActive: boolean; publishedAt: Date; tags: string[]; specifications: { ...; }; category: { ...; }; images: never[]; createdAt: Date; updatedAt: Date; }' is missing the following properties from type 'Product': favorites, mainImage, version

    [7m394[0m       mockProductRepository.find.mockResolvedValue([mockProduct]);
    [7m   [0m [91m                                                    ~~~~~~~~~~~[0m
    [96msrc/products/products.service.spec.ts[0m:[93m502[0m:[93m53[0m - [91merror[0m[90m TS2739: [0mType '{ id: number; name: string; description: string; price: number; originalPrice: number; stock: number; views: number; sales: number; isActive: boolean; publishedAt: Date; tags: string[]; specifications: { ...; }; category: { ...; }; images: never[]; createdAt: Date; updatedAt: Date; }' is missing the following properties from type 'Product': favorites, mainImage, version

    [7m502[0m       mockProductRepository.find.mockResolvedValue([mockProduct]);
    [7m   [0m [91m                                                    ~~~~~~~~~~~[0m
    [96msrc/products/products.service.spec.ts[0m:[93m535[0m:[93m55[0m - [91merror[0m[90m TS2345: [0mArgument of type '{ id: number; name: string; description: string; price: number; originalPrice: number; stock: number; views: number; sales: number; isActive: boolean; publishedAt: Date; tags: string[]; specifications: { ...; }; category: { ...; }; images: never[]; createdAt: Date; updatedAt: Date; }' is not assignable to parameter of type 'Product | Promise<Product | null> | null'.
      Type '{ id: number; name: string; description: string; price: number; originalPrice: number; stock: number; views: number; sales: number; isActive: boolean; publishedAt: Date; tags: string[]; specifications: { ...; }; category: { ...; }; images: never[]; createdAt: Date; updatedAt: Date; }' is missing the following properties from type 'Product': favorites, mainImage, version

    [7m535[0m       mockProductRepository.findOne.mockResolvedValue(mockProduct);
    [7m   [0m [91m                                                      ~~~~~~~~~~~[0m
    [96msrc/products/products.service.spec.ts[0m:[93m536[0m:[93m56[0m - [91merror[0m[90m TS2345: [0mArgument of type '{ id: number; name: string; description: string; isActive: boolean; sortOrder: number; createdAt: Date; updatedAt: Date; }' is not assignable to parameter of type 'Category | Promise<Category | null> | null'.
      Type '{ id: number; name: string; description: string; isActive: boolean; sortOrder: number; createdAt: Date; updatedAt: Date; }' is missing the following properties from type 'Category': slug, icon, children, parent, products

    [7m536[0m       mockCategoryRepository.findOne.mockResolvedValue(mockCategory);
    [7m   [0m [91m                                                       ~~~~~~~~~~~~[0m
    [96msrc/products/products.service.spec.ts[0m:[93m544[0m:[93m56[0m - [91merror[0m[90m TS2345: [0mArgument of type '() => { id: number; name: string; description: string; price: number; originalPrice: number; stock: number; views: number; sales: number; isActive: boolean; publishedAt: Date; tags: string[]; specifications: { ...; }; category: { ...; }; images: never[]; createdAt: Date; updatedAt: Date; }' is not assignable to parameter of type '(options: any) => Promise<Product | null>'.
      Type '{ id: number; name: string; description: string; price: number; originalPrice: number; stock: number; views: number; sales: number; isActive: boolean; publishedAt: Date; tags: string[]; specifications: { ...; }; category: { ...; }; images: never[]; createdAt: Date; updatedAt: Date; }' is missing the following properties from type 'Promise<Product | null>': then, catch, finally, [Symbol.toStringTag]

    [7m544[0m       mockProductRepository.findOne.mockImplementation(() => {
    [7m   [0m [91m                                                       ~~~~~~~[0m
    [96msrc/products/products.service.spec.ts[0m:[93m572[0m:[93m59[0m - [91merror[0m[90m TS2345: [0mArgument of type '{ id: number; name: string; description: string; price: number; originalPrice: number; stock: number; views: number; sales: number; isActive: boolean; publishedAt: Date; tags: string[]; specifications: { ...; }; category: { ...; }; images: never[]; createdAt: Date; updatedAt: Date; }' is not assignable to parameter of type 'Product | Promise<Product | null> | null'.
      Type '{ id: number; name: string; description: string; price: number; originalPrice: number; stock: number; views: number; sales: number; isActive: boolean; publishedAt: Date; tags: string[]; specifications: { ...; }; category: { ...; }; images: never[]; createdAt: Date; updatedAt: Date; }' is missing the following properties from type 'Product': favorites, mainImage, version

    [7m572[0m       mockProductRepository.findOne.mockResolvedValueOnce(mockProduct);
    [7m   [0m [91m                                                          ~~~~~~~~~~~[0m
    [96msrc/products/products.service.spec.ts[0m:[93m588[0m:[93m55[0m - [91merror[0m[90m TS2345: [0mArgument of type '{ id: number; name: string; description: string; price: number; originalPrice: number; stock: number; views: number; sales: number; isActive: boolean; publishedAt: Date; tags: string[]; specifications: { ...; }; category: { ...; }; images: never[]; createdAt: Date; updatedAt: Date; }' is not assignable to parameter of type 'Product | Promise<Product | null> | null'.
      Type '{ id: number; name: string; description: string; price: number; originalPrice: number; stock: number; views: number; sales: number; isActive: boolean; publishedAt: Date; tags: string[]; specifications: { ...; }; category: { ...; }; images: never[]; createdAt: Date; updatedAt: Date; }' is missing the following properties from type 'Product': favorites, mainImage, version

    [7m588[0m       mockProductRepository.findOne.mockResolvedValue(mockProduct);
    [7m   [0m [91m                                                      ~~~~~~~~~~~[0m
    [96msrc/products/products.service.spec.ts[0m:[93m626[0m:[93m55[0m - [91merror[0m[90m TS2345: [0mArgument of type '{ id: number; name: string; description: string; price: number; originalPrice: number; stock: number; views: number; sales: number; isActive: boolean; publishedAt: Date; tags: string[]; specifications: { ...; }; category: { ...; }; images: never[]; createdAt: Date; updatedAt: Date; }' is not assignable to parameter of type 'Product | Promise<Product | null> | null'.
      Type '{ id: number; name: string; description: string; price: number; originalPrice: number; stock: number; views: number; sales: number; isActive: boolean; publishedAt: Date; tags: string[]; specifications: { ...; }; category: { ...; }; images: never[]; createdAt: Date; updatedAt: Date; }' is missing the following properties from type 'Product': favorites, mainImage, version

    [7m626[0m       mockProductRepository.findOne.mockResolvedValue(mockProduct);
    [7m   [0m [91m                                                      ~~~~~~~~~~~[0m
    [96msrc/products/products.service.spec.ts[0m:[93m798[0m:[93m54[0m - [91merror[0m[90m TS2739: [0mType '{ id: number; name: string; description: string; isActive: boolean; sortOrder: number; createdAt: Date; updatedAt: Date; }' is missing the following properties from type 'Category': slug, icon, children, parent, products

    [7m798[0m       mockCategoryRepository.find.mockResolvedValue([mockCategory]);
    [7m   [0m [91m                                                     ~~~~~~~~~~~~[0m
    [96msrc/products/products.service.spec.ts[0m:[93m823[0m:[93m53[0m - [91merror[0m[90m TS2739: [0mType '{ id: number; name: string; description: string; price: number; originalPrice: number; stock: number; views: number; sales: number; isActive: boolean; publishedAt: Date; tags: string[]; specifications: { ...; }; category: { ...; }; images: never[]; createdAt: Date; updatedAt: Date; }' is missing the following properties from type 'Product': favorites, mainImage, version

    [7m823[0m       mockProductRepository.find.mockResolvedValue([mockProduct]);
    [7m   [0m [91m                                                    ~~~~~~~~~~~[0m
    [96msrc/products/products.service.spec.ts[0m:[93m863[0m:[93m60[0m - [91merror[0m[90m TS2345: [0mArgument of type '{ status: string; uptime: number; }' is not assignable to parameter of type '{ healthy: boolean; } | Promise<{ healthy: boolean; }>'.

    [7m863[0m       mockSearchManagerService.getStatus.mockResolvedValue(status);
    [7m   [0m [91m                                                           ~~~~~~[0m
    [96msrc/products/products.service.spec.ts[0m:[93m881[0m:[93m56[0m - [91merror[0m[90m TS2345: [0mArgument of type '{ id: number; name: string; description: string; isActive: boolean; sortOrder: number; createdAt: Date; updatedAt: Date; }' is not assignable to parameter of type 'Category | Promise<Category | null> | null'.
      Type '{ id: number; name: string; description: string; isActive: boolean; sortOrder: number; createdAt: Date; updatedAt: Date; }' is missing the following properties from type 'Category': slug, icon, children, parent, products

    [7m881[0m       mockCategoryRepository.findOne.mockResolvedValue(mockCategory);
    [7m   [0m [91m                                                       ~~~~~~~~~~~~[0m
    [96msrc/products/products.service.spec.ts[0m:[93m882[0m:[93m52[0m - [91merror[0m[90m TS2345: [0mArgument of type '{ id: number; name: string; description: string; price: number; originalPrice: number; stock: number; views: number; sales: number; isActive: boolean; publishedAt: Date; tags: string[]; specifications: { ...; }; category: { ...; }; images: never[]; createdAt: Date; updatedAt: Date; }' is not assignable to parameter of type 'Product'.
      Type '{ id: number; name: string; description: string; price: number; originalPrice: number; stock: number; views: number; sales: number; isActive: boolean; publishedAt: Date; tags: string[]; specifications: { ...; }; category: { ...; }; images: never[]; createdAt: Date; updatedAt: Date; }' is missing the following properties from type 'Product': favorites, mainImage, version

    [7m882[0m       mockProductRepository.create.mockReturnValue(mockProduct);
    [7m   [0m [91m                                                   ~~~~~~~~~~~[0m
    [96msrc/products/products.service.spec.ts[0m:[93m883[0m:[93m52[0m - [91merror[0m[90m TS2345: [0mArgument of type '{ id: number; name: string; description: string; price: number; originalPrice: number; stock: number; views: number; sales: number; isActive: boolean; publishedAt: Date; tags: string[]; specifications: { ...; }; category: { ...; }; images: never[]; createdAt: Date; updatedAt: Date; }' is not assignable to parameter of type 'Product | Promise<Product>'.
      Type '{ id: number; name: string; description: string; price: number; originalPrice: number; stock: number; views: number; sales: number; isActive: boolean; publishedAt: Date; tags: string[]; specifications: { ...; }; category: { ...; }; images: never[]; createdAt: Date; updatedAt: Date; }' is missing the following properties from type 'Product': favorites, mainImage, version

    [7m883[0m       mockProductRepository.save.mockResolvedValue(mockProduct);
    [7m   [0m [91m                                                   ~~~~~~~~~~~[0m
    [96msrc/products/products.service.spec.ts[0m:[93m900[0m:[93m55[0m - [91merror[0m[90m TS2345: [0mArgument of type '{ id: number; name: string; description: string; price: number; originalPrice: number; stock: number; views: number; sales: number; isActive: boolean; publishedAt: Date; tags: string[]; specifications: { ...; }; category: { ...; }; images: never[]; createdAt: Date; updatedAt: Date; }' is not assignable to parameter of type 'Product | Promise<Product | null> | null'.
      Type '{ id: number; name: string; description: string; price: number; originalPrice: number; stock: number; views: number; sales: number; isActive: boolean; publishedAt: Date; tags: string[]; specifications: { ...; }; category: { ...; }; images: never[]; createdAt: Date; updatedAt: Date; }' is missing the following properties from type 'Product': favorites, mainImage, version

    [7m900[0m       mockProductRepository.findOne.mockResolvedValue(mockProduct);
    [7m   [0m [91m                                                      ~~~~~~~~~~~[0m
    [96msrc/products/products.service.spec.ts[0m:[93m907[0m:[93m55[0m - [91merror[0m[90m TS2345: [0mArgument of type '{ id: number; name: string; description: string; price: number; originalPrice: number; stock: number; views: number; sales: number; isActive: boolean; publishedAt: Date; tags: string[]; specifications: { ...; }; category: { ...; }; images: never[]; createdAt: Date; updatedAt: Date; }' is not assignable to parameter of type 'Product | Promise<Product | null> | null'.
      Type '{ id: number; name: string; description: string; price: number; originalPrice: number; stock: number; views: number; sales: number; isActive: boolean; publishedAt: Date; tags: string[]; specifications: { ...; }; category: { ...; }; images: never[]; createdAt: Date; updatedAt: Date; }' is missing the following properties from type 'Product': favorites, mainImage, version

    [7m907[0m       mockProductRepository.findOne.mockResolvedValue(mockProduct);
    [7m   [0m [91m                                                      ~~~~~~~~~~~[0m
    [96msrc/products/products.service.spec.ts[0m:[93m908[0m:[93m56[0m - [91merror[0m[90m TS2345: [0mArgument of type '{ id: number; name: string; description: string; isActive: boolean; sortOrder: number; createdAt: Date; updatedAt: Date; }' is not assignable to parameter of type 'Category | Promise<Category | null> | null'.
      Type '{ id: number; name: string; description: string; isActive: boolean; sortOrder: number; createdAt: Date; updatedAt: Date; }' is missing the following properties from type 'Category': slug, icon, children, parent, products

    [7m908[0m       mockCategoryRepository.findOne.mockResolvedValue(mockCategory);
    [7m   [0m [91m                                                       ~~~~~~~~~~~~[0m
    [96msrc/products/products.service.spec.ts[0m:[93m917[0m:[93m55[0m - [91merror[0m[90m TS2345: [0mArgument of type '{ id: number; name: string; description: string; price: number; originalPrice: number; stock: number; views: number; sales: number; isActive: boolean; publishedAt: Date; tags: string[]; specifications: { ...; }; category: { ...; }; images: never[]; createdAt: Date; updatedAt: Date; }' is not assignable to parameter of type 'Product | Promise<Product | null> | null'.
      Type '{ id: number; name: string; description: string; price: number; originalPrice: number; stock: number; views: number; sales: number; isActive: boolean; publishedAt: Date; tags: string[]; specifications: { ...; }; category: { ...; }; images: never[]; createdAt: Date; updatedAt: Date; }' is missing the following properties from type 'Product': favorites, mainImage, version

    [7m917[0m       mockProductRepository.findOne.mockResolvedValue(mockProduct);
    [7m   [0m [91m                                                      ~~~~~~~~~~~[0m
    [96msrc/products/products.service.spec.ts[0m:[93m925[0m:[93m56[0m - [91merror[0m[90m TS2345: [0mArgument of type '{ id: number; name: string; description: string; isActive: boolean; sortOrder: number; createdAt: Date; updatedAt: Date; }' is not assignable to parameter of type 'Category | Promise<Category | null> | null'.
      Type '{ id: number; name: string; description: string; isActive: boolean; sortOrder: number; createdAt: Date; updatedAt: Date; }' is missing the following properties from type 'Category': slug, icon, children, parent, products

    [7m925[0m       mockCategoryRepository.findOne.mockResolvedValue(mockCategory);
    [7m   [0m [91m                                                       ~~~~~~~~~~~~[0m
    [96msrc/products/products.service.spec.ts[0m:[93m926[0m:[93m52[0m - [91merror[0m[90m TS2345: [0mArgument of type '{ id: number; name: string; description: string; price: number; originalPrice: number; stock: number; views: number; sales: number; isActive: boolean; publishedAt: Date; tags: string[]; specifications: { ...; }; category: { ...; }; images: never[]; createdAt: Date; updatedAt: Date; }' is not assignable to parameter of type 'Product'.
      Type '{ id: number; name: string; description: string; price: number; originalPrice: number; stock: number; views: number; sales: number; isActive: boolean; publishedAt: Date; tags: string[]; specifications: { ...; }; category: { ...; }; images: never[]; createdAt: Date; updatedAt: Date; }' is missing the following properties from type 'Product': favorites, mainImage, version

    [7m926[0m       mockProductRepository.create.mockReturnValue(mockProduct);
    [7m   [0m [91m                                                   ~~~~~~~~~~~[0m
    [96msrc/products/products.service.spec.ts[0m:[93m927[0m:[93m52[0m - [91merror[0m[90m TS2345: [0mArgument of type '{ id: number; name: string; description: string; price: number; originalPrice: number; stock: number; views: number; sales: number; isActive: boolean; publishedAt: Date; tags: string[]; specifications: { ...; }; category: { ...; }; images: never[]; createdAt: Date; updatedAt: Date; }' is not assignable to parameter of type 'Product | Promise<Product>'.
      Type '{ id: number; name: string; description: string; price: number; originalPrice: number; stock: number; views: number; sales: number; isActive: boolean; publishedAt: Date; tags: string[]; specifications: { ...; }; category: { ...; }; images: never[]; createdAt: Date; updatedAt: Date; }' is missing the following properties from type 'Product': favorites, mainImage, version

    [7m927[0m       mockProductRepository.save.mockResolvedValue(mockProduct);
    [7m   [0m [91m                                                   ~~~~~~~~~~~[0m
    [96msrc/products/products.service.spec.ts[0m:[93m952[0m:[93m55[0m - [91merror[0m[90m TS2345: [0mArgument of type '{ id: number; name: string; description: string; price: number; originalPrice: number; stock: number; views: number; sales: number; isActive: boolean; publishedAt: Date; tags: string[]; specifications: { ...; }; category: { ...; }; images: never[]; createdAt: Date; updatedAt: Date; }' is not assignable to parameter of type 'Product | Promise<Product | null> | null'.
      Type '{ id: number; name: string; description: string; price: number; originalPrice: number; stock: number; views: number; sales: number; isActive: boolean; publishedAt: Date; tags: string[]; specifications: { ...; }; category: { ...; }; images: never[]; createdAt: Date; updatedAt: Date; }' is missing the following properties from type 'Product': favorites, mainImage, version

    [7m952[0m       mockProductRepository.findOne.mockResolvedValue(mockProduct);
    [7m   [0m [91m                                                      ~~~~~~~~~~~[0m
    [96msrc/products/products.service.spec.ts[0m:[93m1010[0m:[93m55[0m - [91merror[0m[90m TS2345: [0mArgument of type '{ id: number; name: string; description: string; price: number; originalPrice: number; stock: number; views: number; sales: number; isActive: boolean; publishedAt: Date; tags: string[]; specifications: { ...; }; category: { ...; }; images: never[]; createdAt: Date; updatedAt: Date; }' is not assignable to parameter of type 'Product | Promise<Product | null> | null'.
      Type '{ id: number; name: string; description: string; price: number; originalPrice: number; stock: number; views: number; sales: number; isActive: boolean; publishedAt: Date; tags: string[]; specifications: { ...; }; category: { ...; }; images: never[]; createdAt: Date; updatedAt: Date; }' is missing the following properties from type 'Product': favorites, mainImage, version

    [7m1010[0m       mockProductRepository.findOne.mockResolvedValue(mockProduct);
    [7m    [0m [91m                                                      ~~~~~~~~~~~[0m
    [96msrc/products/products.service.spec.ts[0m:[93m1023[0m:[93m55[0m - [91merror[0m[90m TS2345: [0mArgument of type '{ id: number; name: string; description: string; price: number; originalPrice: number; stock: number; views: number; sales: number; isActive: boolean; publishedAt: Date; tags: string[]; specifications: { ...; }; category: { ...; }; images: never[]; createdAt: Date; updatedAt: Date; }' is not assignable to parameter of type 'Product | Promise<Product | null> | null'.
      Type '{ id: number; name: string; description: string; price: number; originalPrice: number; stock: number; views: number; sales: number; isActive: boolean; publishedAt: Date; tags: string[]; specifications: { ...; }; category: { ...; }; images: never[]; createdAt: Date; updatedAt: Date; }' is missing the following properties from type 'Product': favorites, mainImage, version

    [7m1023[0m       mockProductRepository.findOne.mockResolvedValue(mockProduct);
    [7m    [0m [91m                                                      ~~~~~~~~~~~[0m

FAIL src/cqrs/cqrs.module.integration.spec.ts
  ● Test suite failed to run

    [96msrc/cqrs/cqrs.module.integration.spec.ts[0m:[93m139[0m:[93m32[0m - [91merror[0m[90m TS2345: [0mArgument of type '{ name: string; execute: jest.MockInstance<Promise<any>, [command: any, next: () => Promise<any>], any>; }' is not assignable to parameter of type 'ICommandMiddleware'.
      Types of property 'execute' are incompatible.
        Type 'MockInstance<Promise<any>, [command: any, next: () => Promise<any>], any>' is not assignable to type '<TCommand extends ICommand>(command: TCommand, next: () => Promise<ICommandResult<any>>) => Promise<ICommandResult<any>>'.
          Type 'MockInstance<Promise<any>, [command: any, next: () => Promise<any>], any>' provides no match for the signature '<TCommand extends ICommand>(command: TCommand, next: () => Promise<ICommandResult<any>>): Promise<ICommandResult<any>>'.

    [7m139[0m       commandBus.addMiddleware(middleware1);
    [7m   [0m [91m                               ~~~~~~~~~~~[0m
    [96msrc/cqrs/cqrs.module.integration.spec.ts[0m:[93m140[0m:[93m32[0m - [91merror[0m[90m TS2345: [0mArgument of type '{ name: string; execute: jest.MockInstance<Promise<any>, [command: any, next: () => Promise<any>], any>; }' is not assignable to parameter of type 'ICommandMiddleware'.
      Types of property 'execute' are incompatible.
        Type 'MockInstance<Promise<any>, [command: any, next: () => Promise<any>], any>' is not assignable to type '<TCommand extends ICommand>(command: TCommand, next: () => Promise<ICommandResult<any>>) => Promise<ICommandResult<any>>'.
          Type 'MockInstance<Promise<any>, [command: any, next: () => Promise<any>], any>' provides no match for the signature '<TCommand extends ICommand>(command: TCommand, next: () => Promise<ICommandResult<any>>): Promise<ICommandResult<any>>'.

    [7m140[0m       commandBus.addMiddleware(middleware2);
    [7m   [0m [91m                               ~~~~~~~~~~~[0m

Summary of all failing tests
FAIL monitoring/metrics.interceptor.spec.ts (90.375 s)
  ● MetricsInterceptor › intercept › should decrement active connections on request completion

    expect(jest.fn()).toHaveBeenCalled()

    Expected number of calls: >= 1
    Received number of calls:    0

    [0m [90m 74 |[39m       [90m// Wait for the observable to complete[39m
     [90m 75 |[39m       setTimeout(() [33m=>[39m {
    [31m[1m>[22m[39m[90m 76 |[39m         expect(monitoringService[33m.[39mdecrementActiveConnections)[33m.[39mtoHaveBeenCalled()[33m;[39m
     [90m    |[39m                                                              [31m[1m^[22m[39m
     [90m 77 |[39m         done()[33m;[39m
     [90m 78 |[39m       }[33m,[39m [35m0[39m)[33m;[39m
     [90m 79 |[39m     })[33m;[39m[0m

      at Timeout._onTimeout (monitoring/metrics.interceptor.spec.ts:76:62)

  ● MetricsInterceptor › intercept › should decrement active connections on request completion

    thrown: "Exceeded timeout of 10000 ms for a test while waiting for `done()` to be called.
    Add a timeout value to this test to increase the timeout, if this is a long-running test. See https://jestjs.io/docs/api#testname-fn-timeout."

    [0m [90m 69 |[39m     })[33m;[39m
     [90m 70 |[39m
    [31m[1m>[22m[39m[90m 71 |[39m     it([32m'should decrement active connections on request completion'[39m[33m,[39m (done) [33m=>[39m {
     [90m    |[39m     [31m[1m^[22m[39m
     [90m 72 |[39m       interceptor[33m.[39mintercept(mockContext[33m,[39m mockCallHandler)[33m;[39m
     [90m 73 |[39m
     [90m 74 |[39m       [90m// Wait for the observable to complete[39m[0m

      at monitoring/metrics.interceptor.spec.ts:71:5
      at monitoring/metrics.interceptor.spec.ts:60:3
      at Object.<anonymous> (monitoring/metrics.interceptor.spec.ts:8:1)

  ● MetricsInterceptor › intercept › should record API call metrics on successful response

    expect(jest.fn()).toHaveBeenCalledWith(...expected)

    Expected: "GET", "/api/test", 200, Any<Number>

    Number of calls: 0

    [0m [90m 84 |[39m       [90m// Wait for the observable to complete[39m
     [90m 85 |[39m       setTimeout(() [33m=>[39m {
    [31m[1m>[22m[39m[90m 86 |[39m         expect(monitoringService[33m.[39mrecordApiCall)[33m.[39mtoHaveBeenCalledWith(
     [90m    |[39m                                                 [31m[1m^[22m[39m
     [90m 87 |[39m           [32m'GET'[39m[33m,[39m
     [90m 88 |[39m           [32m'/api/test'[39m[33m,[39m
     [90m 89 |[39m           [35m200[39m[33m,[39m[0m

      at Timeout._onTimeout (monitoring/metrics.interceptor.spec.ts:86:49)

  ● MetricsInterceptor › intercept › should record API call metrics on successful response

    thrown: "Exceeded timeout of 10000 ms for a test while waiting for `done()` to be called.
    Add a timeout value to this test to increase the timeout, if this is a long-running test. See https://jestjs.io/docs/api#testname-fn-timeout."

    [0m [90m 79 |[39m     })[33m;[39m
     [90m 80 |[39m
    [31m[1m>[22m[39m[90m 81 |[39m     it([32m'should record API call metrics on successful response'[39m[33m,[39m (done) [33m=>[39m {
     [90m    |[39m     [31m[1m^[22m[39m
     [90m 82 |[39m       interceptor[33m.[39mintercept(mockContext[33m,[39m mockCallHandler)[33m;[39m
     [90m 83 |[39m
     [90m 84 |[39m       [90m// Wait for the observable to complete[39m[0m

      at monitoring/metrics.interceptor.spec.ts:81:5
      at monitoring/metrics.interceptor.spec.ts:60:3
      at Object.<anonymous> (monitoring/metrics.interceptor.spec.ts:8:1)

  ● MetricsInterceptor › intercept › should record API call metrics on error response

    expect(jest.fn()).toHaveBeenCalledWith(...expected)

    Expected: "GET", "/api/test", 404, Any<Number>

    Number of calls: 0

    [0m [90m 106 |[39m       [90m// Wait for the observable to error[39m
     [90m 107 |[39m       setTimeout(() [33m=>[39m {
    [31m[1m>[22m[39m[90m 108 |[39m         expect(monitoringService[33m.[39mrecordApiCall)[33m.[39mtoHaveBeenCalledWith(
     [90m     |[39m                                                 [31m[1m^[22m[39m
     [90m 109 |[39m           [32m'GET'[39m[33m,[39m
     [90m 110 |[39m           [32m'/api/test'[39m[33m,[39m
     [90m 111 |[39m           [35m404[39m[33m,[39m[0m

      at Timeout._onTimeout (monitoring/metrics.interceptor.spec.ts:108:49)

  ● MetricsInterceptor › intercept › should record API call metrics on error response

    thrown: "Exceeded timeout of 10000 ms for a test while waiting for `done()` to be called.
    Add a timeout value to this test to increase the timeout, if this is a long-running test. See https://jestjs.io/docs/api#testname-fn-timeout."

    [0m [90m 94 |[39m     })[33m;[39m
     [90m 95 |[39m
    [31m[1m>[22m[39m[90m 96 |[39m     it([32m'should record API call metrics on error response'[39m[33m,[39m (done) [33m=>[39m {
     [90m    |[39m     [31m[1m^[22m[39m
     [90m 97 |[39m       mockResponse[33m.[39mstatusCode [33m=[39m [35m404[39m[33m;[39m
     [90m 98 |[39m       mockCallHandler[33m.[39mhandle [33m=[39m jest[33m.[39mfn()[33m.[39mmockReturnValue(
     [90m 99 |[39m         [36mnew[39m [33mObservable[39m(subscriber [33m=>[39m {[0m

      at monitoring/metrics.interceptor.spec.ts:96:5
      at monitoring/metrics.interceptor.spec.ts:60:3
      at Object.<anonymous> (monitoring/metrics.interceptor.spec.ts:8:1)

  ● MetricsInterceptor › intercept › should calculate request duration correctly

    expect(jest.fn()).toHaveBeenCalledWith(...expected)

    Expected: "GET", "/api/test", 200, 200

    Number of calls: 0

    [0m [90m 127 |[39m       [90m// Wait for the observable to complete[39m
     [90m 128 |[39m       setTimeout(() [33m=>[39m {
    [31m[1m>[22m[39m[90m 129 |[39m         expect(monitoringService[33m.[39mrecordApiCall)[33m.[39mtoHaveBeenCalledWith(
     [90m     |[39m                                                 [31m[1m^[22m[39m
     [90m 130 |[39m           [32m'GET'[39m[33m,[39m
     [90m 131 |[39m           [32m'/api/test'[39m[33m,[39m
     [90m 132 |[39m           [35m200[39m[33m,[39m[0m

      at Timeout._onTimeout (monitoring/metrics.interceptor.spec.ts:129:49)

  ● MetricsInterceptor › intercept › should calculate request duration correctly

    thrown: "Exceeded timeout of 10000 ms for a test while waiting for `done()` to be called.
    Add a timeout value to this test to increase the timeout, if this is a long-running test. See https://jestjs.io/docs/api#testname-fn-timeout."

    [0m [90m 116 |[39m     })[33m;[39m
     [90m 117 |[39m
    [31m[1m>[22m[39m[90m 118 |[39m     it([32m'should calculate request duration correctly'[39m[33m,[39m (done) [33m=>[39m {
     [90m     |[39m     [31m[1m^[22m[39m
     [90m 119 |[39m       [90m// Mock Date.now to return different values[39m
     [90m 120 |[39m       [36mconst[39m mockDateNow [33m=[39m jest
     [90m 121 |[39m         [33m.[39mspyOn([33mDate[39m[33m,[39m [32m'now'[39m)[0m

      at monitoring/metrics.interceptor.spec.ts:118:5
      at monitoring/metrics.interceptor.spec.ts:60:3
      at Object.<anonymous> (monitoring/metrics.interceptor.spec.ts:8:1)

  ● MetricsInterceptor › intercept › should handle different HTTP methods

    expect(jest.fn()).toHaveBeenCalledWith(...expected)

    Expected: "GET", "/api/test", 200, Any<Number>

    Number of calls: 0

    [0m [90m 147 |[39m
     [90m 148 |[39m         setTimeout(() [33m=>[39m {
    [31m[1m>[22m[39m[90m 149 |[39m           expect(monitoringService[33m.[39mrecordApiCall)[33m.[39mtoHaveBeenCalledWith(
     [90m     |[39m                                                   [31m[1m^[22m[39m
     [90m 150 |[39m             method[33m,[39m
     [90m 151 |[39m             [32m'/api/test'[39m[33m,[39m
     [90m 152 |[39m             [35m200[39m[33m,[39m[0m

      at Timeout._onTimeout (monitoring/metrics.interceptor.spec.ts:149:51)

  ● MetricsInterceptor › intercept › should handle different HTTP methods

    expect(jest.fn()).toHaveBeenCalledWith(...expected)

    Expected: "POST", "/api/test", 200, Any<Number>

    Number of calls: 0

    [0m [90m 147 |[39m
     [90m 148 |[39m         setTimeout(() [33m=>[39m {
    [31m[1m>[22m[39m[90m 149 |[39m           expect(monitoringService[33m.[39mrecordApiCall)[33m.[39mtoHaveBeenCalledWith(
     [90m     |[39m                                                   [31m[1m^[22m[39m
     [90m 150 |[39m             method[33m,[39m
     [90m 151 |[39m             [32m'/api/test'[39m[33m,[39m
     [90m 152 |[39m             [35m200[39m[33m,[39m[0m

      at Timeout._onTimeout (monitoring/metrics.interceptor.spec.ts:149:51)

  ● MetricsInterceptor › intercept › should handle different HTTP methods

    expect(jest.fn()).toHaveBeenCalledWith(...expected)

    Expected: "PUT", "/api/test", 200, Any<Number>

    Number of calls: 0

    [0m [90m 147 |[39m
     [90m 148 |[39m         setTimeout(() [33m=>[39m {
    [31m[1m>[22m[39m[90m 149 |[39m           expect(monitoringService[33m.[39mrecordApiCall)[33m.[39mtoHaveBeenCalledWith(
     [90m     |[39m                                                   [31m[1m^[22m[39m
     [90m 150 |[39m             method[33m,[39m
     [90m 151 |[39m             [32m'/api/test'[39m[33m,[39m
     [90m 152 |[39m             [35m200[39m[33m,[39m[0m

      at Timeout._onTimeout (monitoring/metrics.interceptor.spec.ts:149:51)

  ● MetricsInterceptor › intercept › should handle different HTTP methods

    expect(jest.fn()).toHaveBeenCalledWith(...expected)

    Expected: "DELETE", "/api/test", 200, Any<Number>

    Number of calls: 0

    [0m [90m 147 |[39m
     [90m 148 |[39m         setTimeout(() [33m=>[39m {
    [31m[1m>[22m[39m[90m 149 |[39m           expect(monitoringService[33m.[39mrecordApiCall)[33m.[39mtoHaveBeenCalledWith(
     [90m     |[39m                                                   [31m[1m^[22m[39m
     [90m 150 |[39m             method[33m,[39m
     [90m 151 |[39m             [32m'/api/test'[39m[33m,[39m
     [90m 152 |[39m             [35m200[39m[33m,[39m[0m

      at Timeout._onTimeout (monitoring/metrics.interceptor.spec.ts:149:51)

  ● MetricsInterceptor › intercept › should handle different HTTP methods

    expect(jest.fn()).toHaveBeenCalledWith(...expected)

    Expected: "PATCH", "/api/test", 200, Any<Number>

    Number of calls: 0

    [0m [90m 147 |[39m
     [90m 148 |[39m         setTimeout(() [33m=>[39m {
    [31m[1m>[22m[39m[90m 149 |[39m           expect(monitoringService[33m.[39mrecordApiCall)[33m.[39mtoHaveBeenCalledWith(
     [90m     |[39m                                                   [31m[1m^[22m[39m
     [90m 150 |[39m             method[33m,[39m
     [90m 151 |[39m             [32m'/api/test'[39m[33m,[39m
     [90m 152 |[39m             [35m200[39m[33m,[39m[0m

      at Timeout._onTimeout (monitoring/metrics.interceptor.spec.ts:149:51)

  ● MetricsInterceptor › intercept › should handle different HTTP methods

    thrown: "Exceeded timeout of 10000 ms for a test while waiting for `done()` to be called.
    Add a timeout value to this test to increase the timeout, if this is a long-running test. See https://jestjs.io/docs/api#testname-fn-timeout."

    [0m [90m 138 |[39m     })[33m;[39m
     [90m 139 |[39m
    [31m[1m>[22m[39m[90m 140 |[39m     it([32m'should handle different HTTP methods'[39m[33m,[39m (done) [33m=>[39m {
     [90m     |[39m     [31m[1m^[22m[39m
     [90m 141 |[39m       [36mconst[39m methods [33m=[39m [[32m'GET'[39m[33m,[39m [32m'POST'[39m[33m,[39m [32m'PUT'[39m[33m,[39m [32m'DELETE'[39m[33m,[39m [32m'PATCH'[39m][33m;[39m
     [90m 142 |[39m       [36mlet[39m completed [33m=[39m [35m0[39m[33m;[39m
     [90m 143 |[39m[0m

      at monitoring/metrics.interceptor.spec.ts:140:5
      at monitoring/metrics.interceptor.spec.ts:60:3
      at Object.<anonymous> (monitoring/metrics.interceptor.spec.ts:8:1)

  ● MetricsInterceptor › intercept › should handle different status codes

    expect(jest.fn()).toHaveBeenCalledWith(...expected)

    Expected: "GET", "/api/test", 200, Any<Number>

    Number of calls: 0

    [0m [90m 170 |[39m
     [90m 171 |[39m         setTimeout(() [33m=>[39m {
    [31m[1m>[22m[39m[90m 172 |[39m           expect(monitoringService[33m.[39mrecordApiCall)[33m.[39mtoHaveBeenCalledWith(
     [90m     |[39m                                                   [31m[1m^[22m[39m
     [90m 173 |[39m             [32m'GET'[39m[33m,[39m
     [90m 174 |[39m             [32m'/api/test'[39m[33m,[39m
     [90m 175 |[39m             statusCode[33m,[39m[0m

      at Timeout._onTimeout (monitoring/metrics.interceptor.spec.ts:172:51)

  ● MetricsInterceptor › intercept › should handle different status codes

    expect(jest.fn()).toHaveBeenCalledWith(...expected)

    Expected: "GET", "/api/test", 201, Any<Number>

    Number of calls: 0

    [0m [90m 170 |[39m
     [90m 171 |[39m         setTimeout(() [33m=>[39m {
    [31m[1m>[22m[39m[90m 172 |[39m           expect(monitoringService[33m.[39mrecordApiCall)[33m.[39mtoHaveBeenCalledWith(
     [90m     |[39m                                                   [31m[1m^[22m[39m
     [90m 173 |[39m             [32m'GET'[39m[33m,[39m
     [90m 174 |[39m             [32m'/api/test'[39m[33m,[39m
     [90m 175 |[39m             statusCode[33m,[39m[0m

      at Timeout._onTimeout (monitoring/metrics.interceptor.spec.ts:172:51)

  ● MetricsInterceptor › intercept › should handle different status codes

    expect(jest.fn()).toHaveBeenCalledWith(...expected)

    Expected: "GET", "/api/test", 204, Any<Number>

    Number of calls: 0

    [0m [90m 170 |[39m
     [90m 171 |[39m         setTimeout(() [33m=>[39m {
    [31m[1m>[22m[39m[90m 172 |[39m           expect(monitoringService[33m.[39mrecordApiCall)[33m.[39mtoHaveBeenCalledWith(
     [90m     |[39m                                                   [31m[1m^[22m[39m
     [90m 173 |[39m             [32m'GET'[39m[33m,[39m
     [90m 174 |[39m             [32m'/api/test'[39m[33m,[39m
     [90m 175 |[39m             statusCode[33m,[39m[0m

      at Timeout._onTimeout (monitoring/metrics.interceptor.spec.ts:172:51)

  ● MetricsInterceptor › intercept › should handle different status codes

    expect(jest.fn()).toHaveBeenCalledWith(...expected)

    Expected: "GET", "/api/test", 400, Any<Number>

    Number of calls: 0

    [0m [90m 170 |[39m
     [90m 171 |[39m         setTimeout(() [33m=>[39m {
    [31m[1m>[22m[39m[90m 172 |[39m           expect(monitoringService[33m.[39mrecordApiCall)[33m.[39mtoHaveBeenCalledWith(
     [90m     |[39m                                                   [31m[1m^[22m[39m
     [90m 173 |[39m             [32m'GET'[39m[33m,[39m
     [90m 174 |[39m             [32m'/api/test'[39m[33m,[39m
     [90m 175 |[39m             statusCode[33m,[39m[0m

      at Timeout._onTimeout (monitoring/metrics.interceptor.spec.ts:172:51)

  ● MetricsInterceptor › intercept › should handle different status codes

    expect(jest.fn()).toHaveBeenCalledWith(...expected)

    Expected: "GET", "/api/test", 401, Any<Number>

    Number of calls: 0

    [0m [90m 170 |[39m
     [90m 171 |[39m         setTimeout(() [33m=>[39m {
    [31m[1m>[22m[39m[90m 172 |[39m           expect(monitoringService[33m.[39mrecordApiCall)[33m.[39mtoHaveBeenCalledWith(
     [90m     |[39m                                                   [31m[1m^[22m[39m
     [90m 173 |[39m             [32m'GET'[39m[33m,[39m
     [90m 174 |[39m             [32m'/api/test'[39m[33m,[39m
     [90m 175 |[39m             statusCode[33m,[39m[0m

      at Timeout._onTimeout (monitoring/metrics.interceptor.spec.ts:172:51)

  ● MetricsInterceptor › intercept › should handle different status codes

    expect(jest.fn()).toHaveBeenCalledWith(...expected)

    Expected: "GET", "/api/test", 403, Any<Number>

    Number of calls: 0

    [0m [90m 170 |[39m
     [90m 171 |[39m         setTimeout(() [33m=>[39m {
    [31m[1m>[22m[39m[90m 172 |[39m           expect(monitoringService[33m.[39mrecordApiCall)[33m.[39mtoHaveBeenCalledWith(
     [90m     |[39m                                                   [31m[1m^[22m[39m
     [90m 173 |[39m             [32m'GET'[39m[33m,[39m
     [90m 174 |[39m             [32m'/api/test'[39m[33m,[39m
     [90m 175 |[39m             statusCode[33m,[39m[0m

      at Timeout._onTimeout (monitoring/metrics.interceptor.spec.ts:172:51)

  ● MetricsInterceptor › intercept › should handle different status codes

    expect(jest.fn()).toHaveBeenCalledWith(...expected)

    Expected: "GET", "/api/test", 404, Any<Number>

    Number of calls: 0

    [0m [90m 170 |[39m
     [90m 171 |[39m         setTimeout(() [33m=>[39m {
    [31m[1m>[22m[39m[90m 172 |[39m           expect(monitoringService[33m.[39mrecordApiCall)[33m.[39mtoHaveBeenCalledWith(
     [90m     |[39m                                                   [31m[1m^[22m[39m
     [90m 173 |[39m             [32m'GET'[39m[33m,[39m
     [90m 174 |[39m             [32m'/api/test'[39m[33m,[39m
     [90m 175 |[39m             statusCode[33m,[39m[0m

      at Timeout._onTimeout (monitoring/metrics.interceptor.spec.ts:172:51)

  ● MetricsInterceptor › intercept › should handle different status codes

    expect(jest.fn()).toHaveBeenCalledWith(...expected)

    Expected: "GET", "/api/test", 500, Any<Number>

    Number of calls: 0

    [0m [90m 170 |[39m
     [90m 171 |[39m         setTimeout(() [33m=>[39m {
    [31m[1m>[22m[39m[90m 172 |[39m           expect(monitoringService[33m.[39mrecordApiCall)[33m.[39mtoHaveBeenCalledWith(
     [90m     |[39m                                                   [31m[1m^[22m[39m
     [90m 173 |[39m             [32m'GET'[39m[33m,[39m
     [90m 174 |[39m             [32m'/api/test'[39m[33m,[39m
     [90m 175 |[39m             statusCode[33m,[39m[0m

      at Timeout._onTimeout (monitoring/metrics.interceptor.spec.ts:172:51)

  ● MetricsInterceptor › intercept › should handle different status codes

    expect(jest.fn()).toHaveBeenCalledWith(...expected)

    Expected: "GET", "/api/test", 502, Any<Number>

    Number of calls: 0

    [0m [90m 170 |[39m
     [90m 171 |[39m         setTimeout(() [33m=>[39m {
    [31m[1m>[22m[39m[90m 172 |[39m           expect(monitoringService[33m.[39mrecordApiCall)[33m.[39mtoHaveBeenCalledWith(
     [90m     |[39m                                                   [31m[1m^[22m[39m
     [90m 173 |[39m             [32m'GET'[39m[33m,[39m
     [90m 174 |[39m             [32m'/api/test'[39m[33m,[39m
     [90m 175 |[39m             statusCode[33m,[39m[0m

      at Timeout._onTimeout (monitoring/metrics.interceptor.spec.ts:172:51)

  ● MetricsInterceptor › intercept › should handle different status codes

    expect(jest.fn()).toHaveBeenCalledWith(...expected)

    Expected: "GET", "/api/test", 503, Any<Number>

    Number of calls: 0

    [0m [90m 170 |[39m
     [90m 171 |[39m         setTimeout(() [33m=>[39m {
    [31m[1m>[22m[39m[90m 172 |[39m           expect(monitoringService[33m.[39mrecordApiCall)[33m.[39mtoHaveBeenCalledWith(
     [90m     |[39m                                                   [31m[1m^[22m[39m
     [90m 173 |[39m             [32m'GET'[39m[33m,[39m
     [90m 174 |[39m             [32m'/api/test'[39m[33m,[39m
     [90m 175 |[39m             statusCode[33m,[39m[0m

      at Timeout._onTimeout (monitoring/metrics.interceptor.spec.ts:172:51)

  ● MetricsInterceptor › intercept › should handle different status codes

    thrown: "Exceeded timeout of 10000 ms for a test while waiting for `done()` to be called.
    Add a timeout value to this test to increase the timeout, if this is a long-running test. See https://jestjs.io/docs/api#testname-fn-timeout."

    [0m [90m 161 |[39m     })[33m;[39m
     [90m 162 |[39m
    [31m[1m>[22m[39m[90m 163 |[39m     it([32m'should handle different status codes'[39m[33m,[39m (done) [33m=>[39m {
     [90m     |[39m     [31m[1m^[22m[39m
     [90m 164 |[39m       [36mconst[39m statusCodes [33m=[39m [[35m200[39m[33m,[39m [35m201[39m[33m,[39m [35m204[39m[33m,[39m [35m400[39m[33m,[39m [35m401[39m[33m,[39m [35m403[39m[33m,[39m [35m404[39m[33m,[39m [35m500[39m[33m,[39m [35m502[39m[33m,[39m [35m503[39m][33m;[39m
     [90m 165 |[39m       [36mlet[39m completed [33m=[39m [35m0[39m[33m;[39m
     [90m 166 |[39m[0m

      at monitoring/metrics.interceptor.spec.ts:163:5
      at monitoring/metrics.interceptor.spec.ts:60:3
      at Object.<anonymous> (monitoring/metrics.interceptor.spec.ts:8:1)

  ● MetricsInterceptor › intercept › should handle different request paths

    expect(jest.fn()).toHaveBeenCalledWith(...expected)

    Expected: "GET", "/api/users", 200, Any<Number>

    Number of calls: 0

    [0m [90m 193 |[39m
     [90m 194 |[39m         setTimeout(() [33m=>[39m {
    [31m[1m>[22m[39m[90m 195 |[39m           expect(monitoringService[33m.[39mrecordApiCall)[33m.[39mtoHaveBeenCalledWith(
     [90m     |[39m                                                   [31m[1m^[22m[39m
     [90m 196 |[39m             [32m'GET'[39m[33m,[39m
     [90m 197 |[39m             path[33m,[39m
     [90m 198 |[39m             [35m200[39m[33m,[39m[0m

      at Timeout._onTimeout (monitoring/metrics.interceptor.spec.ts:195:51)

  ● MetricsInterceptor › intercept › should handle different request paths

    expect(jest.fn()).toHaveBeenCalledWith(...expected)

    Expected: "GET", "/api/products", 200, Any<Number>

    Number of calls: 0

    [0m [90m 193 |[39m
     [90m 194 |[39m         setTimeout(() [33m=>[39m {
    [31m[1m>[22m[39m[90m 195 |[39m           expect(monitoringService[33m.[39mrecordApiCall)[33m.[39mtoHaveBeenCalledWith(
     [90m     |[39m                                                   [31m[1m^[22m[39m
     [90m 196 |[39m             [32m'GET'[39m[33m,[39m
     [90m 197 |[39m             path[33m,[39m
     [90m 198 |[39m             [35m200[39m[33m,[39m[0m

      at Timeout._onTimeout (monitoring/metrics.interceptor.spec.ts:195:51)

  ● MetricsInterceptor › intercept › should handle different request paths

    expect(jest.fn()).toHaveBeenCalledWith(...expected)

    Expected: "GET", "/api/orders", 200, Any<Number>

    Number of calls: 0

    [0m [90m 193 |[39m
     [90m 194 |[39m         setTimeout(() [33m=>[39m {
    [31m[1m>[22m[39m[90m 195 |[39m           expect(monitoringService[33m.[39mrecordApiCall)[33m.[39mtoHaveBeenCalledWith(
     [90m     |[39m                                                   [31m[1m^[22m[39m
     [90m 196 |[39m             [32m'GET'[39m[33m,[39m
     [90m 197 |[39m             path[33m,[39m
     [90m 198 |[39m             [35m200[39m[33m,[39m[0m

      at Timeout._onTimeout (monitoring/metrics.interceptor.spec.ts:195:51)

  ● MetricsInterceptor › intercept › should handle different request paths

    expect(jest.fn()).toHaveBeenCalledWith(...expected)

    Expected: "GET", "/health", 200, Any<Number>

    Number of calls: 0

    [0m [90m 193 |[39m
     [90m 194 |[39m         setTimeout(() [33m=>[39m {
    [31m[1m>[22m[39m[90m 195 |[39m           expect(monitoringService[33m.[39mrecordApiCall)[33m.[39mtoHaveBeenCalledWith(
     [90m     |[39m                                                   [31m[1m^[22m[39m
     [90m 196 |[39m             [32m'GET'[39m[33m,[39m
     [90m 197 |[39m             path[33m,[39m
     [90m 198 |[39m             [35m200[39m[33m,[39m[0m

      at Timeout._onTimeout (monitoring/metrics.interceptor.spec.ts:195:51)

  ● MetricsInterceptor › intercept › should handle different request paths

    thrown: "Exceeded timeout of 10000 ms for a test while waiting for `done()` to be called.
    Add a timeout value to this test to increase the timeout, if this is a long-running test. See https://jestjs.io/docs/api#testname-fn-timeout."

    [0m [90m 184 |[39m     })[33m;[39m
     [90m 185 |[39m
    [31m[1m>[22m[39m[90m 186 |[39m     it([32m'should handle different request paths'[39m[33m,[39m (done) [33m=>[39m {
     [90m     |[39m     [31m[1m^[22m[39m
     [90m 187 |[39m       [36mconst[39m paths [33m=[39m [[32m'/api/users'[39m[33m,[39m [32m'/api/products'[39m[33m,[39m [32m'/api/orders'[39m[33m,[39m [32m'/health'[39m][33m;[39m
     [90m 188 |[39m       [36mlet[39m completed [33m=[39m [35m0[39m[33m;[39m
     [90m 189 |[39m[0m

      at monitoring/metrics.interceptor.spec.ts:186:5
      at monitoring/metrics.interceptor.spec.ts:60:3
      at Object.<anonymous> (monitoring/metrics.interceptor.spec.ts:8:1)

  ● MetricsInterceptor › intercept › should handle concurrent requests

    expect(jest.fn()).toHaveBeenCalledTimes(expected)

    Expected number of calls: 5
    Received number of calls: 0

    [0m [90m 218 |[39m       [90m// Wait for all observables to complete[39m
     [90m 219 |[39m       setTimeout(() [33m=>[39m {
    [31m[1m>[22m[39m[90m 220 |[39m         expect(monitoringService[33m.[39mdecrementActiveConnections)[33m.[39mtoHaveBeenCalledTimes(concurrentRequests)[33m;[39m
     [90m     |[39m                                                              [31m[1m^[22m[39m
     [90m 221 |[39m         expect(monitoringService[33m.[39mrecordApiCall)[33m.[39mtoHaveBeenCalledTimes(concurrentRequests)[33m;[39m
     [90m 222 |[39m         done()[33m;[39m
     [90m 223 |[39m       }[33m,[39m [35m0[39m)[33m;[39m[0m

      at Timeout._onTimeout (monitoring/metrics.interceptor.spec.ts:220:62)

  ● MetricsInterceptor › intercept › should handle concurrent requests

    thrown: "Exceeded timeout of 10000 ms for a test while waiting for `done()` to be called.
    Add a timeout value to this test to increase the timeout, if this is a long-running test. See https://jestjs.io/docs/api#testname-fn-timeout."

    [0m [90m 207 |[39m     })[33m;[39m
     [90m 208 |[39m
    [31m[1m>[22m[39m[90m 209 |[39m     it([32m'should handle concurrent requests'[39m[33m,[39m (done) [33m=>[39m {
     [90m     |[39m     [31m[1m^[22m[39m
     [90m 210 |[39m       [36mconst[39m concurrentRequests [33m=[39m [35m5[39m[33m;[39m
     [90m 211 |[39m
     [90m 212 |[39m       [36mfor[39m ([36mlet[39m i [33m=[39m [35m0[39m[33m;[39m i [33m<[39m concurrentRequests[33m;[39m i[33m++[39m) {[0m

      at monitoring/metrics.interceptor.spec.ts:209:5
      at monitoring/metrics.interceptor.spec.ts:60:3
      at Object.<anonymous> (monitoring/metrics.interceptor.spec.ts:8:1)

FAIL logging/logging.integration.spec.ts
  ● Logging Integration › Log Analytics Integration › should get log stats through controller

    AxiosError: Request failed with status code 403

      at settle (../node_modules/axios/lib/core/settle.js:19:12)
      at BrotliDecompress.handleStreamEnd (../node_modules/axios/lib/adapters/http.js:617:11)
      at Axios.request (../node_modules/axios/lib/core/Axios.js:45:41)

  ● Logging Integration › Log Analytics Integration › should get user behavior analytics through controller

    expect(received).toBe(expected) // Object.is equality

    Expected: true
    Received: false

    [0m [90m 301 |[39m       )[33m;[39m
     [90m 302 |[39m       
    [31m[1m>[22m[39m[90m 303 |[39m       expect(result[33m.[39msuccess)[33m.[39mtoBe([36mtrue[39m)[33m;[39m
     [90m     |[39m                              [31m[1m^[22m[39m
     [90m 304 |[39m       expect(result[33m.[39mdata)[33m.[39mtoBeDefined()[33m;[39m
     [90m 305 |[39m     })[33m;[39m
     [90m 306 |[39m[0m

      at Object.<anonymous> (logging/logging.integration.spec.ts:303:30)

  ● Logging Integration › Log Analytics Integration › should detect anomalous patterns through controller

    expect(received).toBe(expected) // Object.is equality

    Expected: true
    Received: false

    [0m [90m 324 |[39m       )[33m;[39m
     [90m 325 |[39m       
    [31m[1m>[22m[39m[90m 326 |[39m       expect(result[33m.[39msuccess)[33m.[39mtoBe([36mtrue[39m)[33m;[39m
     [90m     |[39m                              [31m[1m^[22m[39m
     [90m 327 |[39m       expect(result[33m.[39mdata)[33m.[39mtoBeDefined()[33m;[39m
     [90m 328 |[39m     })[33m;[39m
     [90m 329 |[39m[0m

      at Object.<anonymous> (logging/logging.integration.spec.ts:326:30)

  ● Logging Integration › Log Analytics Integration › should get popular pages through controller

    expect(received).toBe(expected) // Object.is equality

    Expected: true
    Received: false

    [0m [90m 350 |[39m       )[33m;[39m
     [90m 351 |[39m       
    [31m[1m>[22m[39m[90m 352 |[39m       expect(result[33m.[39msuccess)[33m.[39mtoBe([36mtrue[39m)[33m;[39m
     [90m     |[39m                              [31m[1m^[22m[39m
     [90m 353 |[39m       expect(result[33m.[39mdata)[33m.[39mtoBeDefined()[33m;[39m
     [90m 354 |[39m       expect([33mArray[39m[33m.[39misArray(result[33m.[39mdata))[33m.[39mtoBe([36mtrue[39m)[33m;[39m
     [90m 355 |[39m     })[33m;[39m[0m

      at Object.<anonymous> (logging/logging.integration.spec.ts:352:30)

  ● Logging Integration › Log Analytics Integration › should get conversion funnel through controller

    expect(received).toBe(expected) // Object.is equality

    Expected: true
    Received: false

    [0m [90m 378 |[39m       )[33m;[39m
     [90m 379 |[39m       
    [31m[1m>[22m[39m[90m 380 |[39m       expect(result[33m.[39msuccess)[33m.[39mtoBe([36mtrue[39m)[33m;[39m
     [90m     |[39m                              [31m[1m^[22m[39m
     [90m 381 |[39m       expect(result[33m.[39mdata)[33m.[39mtoBeDefined()[33m;[39m
     [90m 382 |[39m       expect([33mArray[39m[33m.[39misArray(result[33m.[39mdata))[33m.[39mtoBe([36mtrue[39m)[33m;[39m
     [90m 383 |[39m     })[33m;[39m[0m

      at Object.<anonymous> (logging/logging.integration.spec.ts:380:30)

FAIL payment/payment.service.spec.ts
  ● PaymentService › 基础功能测试 › should throw error when payment not found

    expect(received).rejects.toThrow(expected)

    Expected message: "Bad Request"
    Received message: "支付记录不存在"

        [0m [90m 130 |[39m
         [90m 131 |[39m     [36mif[39m ([33m![39mpayment) {
        [31m[1m>[22m[39m[90m 132 |[39m       [36mthrow[39m [36mnew[39m [33mBadRequestException[39m([32m'支付记录不存在'[39m)[33m;[39m
         [90m     |[39m             [31m[1m^[22m[39m
         [90m 133 |[39m     }
         [90m 134 |[39m
         [90m 135 |[39m     [90m// 如果支付状态为处理中，尝试主动查询第三方状态[39m[0m

      at PaymentService.getPaymentStatus (payment/payment.service.ts:132:13)
      at Object.<anonymous> (payment/payment.service.spec.ts:156:7)
      at Object.toThrow (../node_modules/expect/build/index.js:2155:20)
      at Object.<anonymous> (payment/payment.service.spec.ts:156:70)

  ● PaymentService › 支付创建测试 › should validate payment amount

    expect(received).rejects.toThrow(expected)

    Expected message: "Bad Request"
    Received message: "支付金额必须大于0"

        [0m [90m 252 |[39m     }
         [90m 253 |[39m     [36mif[39m ([33m![39mdto[33m.[39mamount [33m||[39m dto[33m.[39mamount [33m<=[39m [35m0[39m) {
        [31m[1m>[22m[39m[90m 254 |[39m       [36mthrow[39m [36mnew[39m [33mBadRequestException[39m([32m'支付金额必须大于0'[39m)[33m;[39m
         [90m     |[39m             [31m[1m^[22m[39m
         [90m 255 |[39m     }
         [90m 256 |[39m     [36mif[39m ([33m![39mdto[33m.[39mmethod) {
         [90m 257 |[39m       [36mthrow[39m [36mnew[39m [33mBadRequestException[39m([32m'支付方式不能为空'[39m)[33m;[39m[0m

      at PaymentService.validateCreatePaymentDto (payment/payment.service.ts:254:13)
      at PaymentService.createPayment (payment/payment.service.ts:73:10)
      at Object.<anonymous> (payment/payment.service.spec.ts:244:28)
      at Object.toThrow (../node_modules/expect/build/index.js:2155:20)
      at Object.<anonymous> (payment/payment.service.spec.ts:244:69)

  ● PaymentService › 支付创建测试 › should validate payment method

    expect(received).rejects.toThrow(expected)

    Expected message: "Bad Request"
    Received message: "不支持的支付方式: invalid-method"

        [0m [90m 295 |[39m     [36mconst[39m strategy [33m=[39m [36mthis[39m[33m.[39mpaymentStrategies[33m.[39m[36mget[39m(method[33m.[39mtoString())[33m;[39m
         [90m 296 |[39m     [36mif[39m ([33m![39mstrategy) {
        [31m[1m>[22m[39m[90m 297 |[39m       [36mthrow[39m [36mnew[39m [33mBadRequestException[39m([32m`不支持的支付方式: ${method}`[39m)[33m;[39m
         [90m     |[39m             [31m[1m^[22m[39m
         [90m 298 |[39m     }
         [90m 299 |[39m     [36mreturn[39m strategy[33m;[39m
         [90m 300 |[39m   }[0m

      at PaymentService.getPaymentStrategy (payment/payment.service.ts:297:13)
      at PaymentService.createPayment (payment/payment.service.ts:94:29)
      at Object.<anonymous> (payment/payment.service.spec.ts:253:7)
      at Object.toThrow (../node_modules/expect/build/index.js:2155:20)
      at Object.<anonymous> (payment/payment.service.spec.ts:253:69)

  ● PaymentService › 支付创建测试 › should handle strategy creation failure

    expect(received).rejects.toThrow(expected)

    Expected message: "Bad Request"
    Received message: "不支持的支付方式: invalid_method"

        [0m [90m 295 |[39m     [36mconst[39m strategy [33m=[39m [36mthis[39m[33m.[39mpaymentStrategies[33m.[39m[36mget[39m(method[33m.[39mtoString())[33m;[39m
         [90m 296 |[39m     [36mif[39m ([33m![39mstrategy) {
        [31m[1m>[22m[39m[90m 297 |[39m       [36mthrow[39m [36mnew[39m [33mBadRequestException[39m([32m`不支持的支付方式: ${method}`[39m)[33m;[39m
         [90m     |[39m             [31m[1m^[22m[39m
         [90m 298 |[39m     }
         [90m 299 |[39m     [36mreturn[39m strategy[33m;[39m
         [90m 300 |[39m   }[0m

      at PaymentService.getPaymentStrategy (payment/payment.service.ts:297:13)
      at PaymentService.createPayment (payment/payment.service.ts:94:29)
      at Object.<anonymous> (payment/payment.service.spec.ts:271:7)
      at Object.toThrow (../node_modules/expect/build/index.js:2155:20)
      at Object.<anonymous> (payment/payment.service.spec.ts:271:69)

  ● PaymentService › 退款功能测试 › should reject refund for unpaid payment

    expect(received).rejects.toThrow(expected)

    Expected message: "Bad Request"
    Received message: "只有成功的支付才能退款"

        [0m [90m 417 |[39m   [36mprivate[39m validateRefundEligibility(payment[33m:[39m [33mPayment[39m[33m,[39m amount[33m:[39m number)[33m:[39m [36mvoid[39m {
         [90m 418 |[39m     [36mif[39m (payment[33m.[39mstatus [33m!==[39m [33mPaymentStatus[39m[33m.[39m[33mSUCCESS[39m) {
        [31m[1m>[22m[39m[90m 419 |[39m       [36mthrow[39m [36mnew[39m [33mBadRequestException[39m([32m'只有成功的支付才能退款'[39m)[33m;[39m
         [90m     |[39m             [31m[1m^[22m[39m
         [90m 420 |[39m     }
         [90m 421 |[39m
         [90m 422 |[39m     [36mconst[39m totalRefunded [33m=[39m payment[33m.[39mrefundedAmount [33m||[39m [35m0[39m[33m;[39m[0m

      at PaymentService.validateRefundEligibility (payment/payment.service.ts:419:13)
      at PaymentService.refundPayment (payment/payment.service.ts:185:10)
      at Object.<anonymous> (payment/payment.service.spec.ts:484:7)
      at Object.toThrow (../node_modules/expect/build/index.js:2155:20)
      at Object.<anonymous> (payment/payment.service.spec.ts:484:69)

  ● PaymentService › 退款功能测试 › should reject refund amount exceeding payment amount

    expect(received).rejects.toThrow(expected)

    Expected message: "Bad Request"
    Received message: "退款金额不能超过可退款金额"

        [0m [90m 422 |[39m     [36mconst[39m totalRefunded [33m=[39m payment[33m.[39mrefundedAmount [33m||[39m [35m0[39m[33m;[39m
         [90m 423 |[39m     [36mif[39m (amount [33m>[39m payment[33m.[39mamount [33m-[39m totalRefunded) {
        [31m[1m>[22m[39m[90m 424 |[39m       [36mthrow[39m [36mnew[39m [33mBadRequestException[39m([32m'退款金额不能超过可退款金额'[39m)[33m;[39m
         [90m     |[39m             [31m[1m^[22m[39m
         [90m 425 |[39m     }
         [90m 426 |[39m   }
         [90m 427 |[39m[0m

      at PaymentService.validateRefundEligibility (payment/payment.service.ts:424:13)
      at PaymentService.refundPayment (payment/payment.service.ts:185:10)
      at Object.<anonymous> (payment/payment.service.spec.ts:514:7)
      at Object.toThrow (../node_modules/expect/build/index.js:2155:20)
      at Object.<anonymous> (payment/payment.service.spec.ts:514:70)

  ● PaymentService › 批量查询测试 › should reject batch query with too many IDs

    expect(received).rejects.toThrow(expected)

    Expected message: "Bad Request"
    Received message: "批量查询数量不能超过100个"

        [0m [90m 216 |[39m
         [90m 217 |[39m     [36mif[39m (paymentIds[33m.[39mlength [33m>[39m [35m100[39m) {
        [31m[1m>[22m[39m[90m 218 |[39m       [36mthrow[39m [36mnew[39m [33mBadRequestException[39m([32m'批量查询数量不能超过100个'[39m)[33m;[39m
         [90m     |[39m             [31m[1m^[22m[39m
         [90m 219 |[39m     }
         [90m 220 |[39m
         [90m 221 |[39m     [36mconst[39m payments [33m=[39m [36mawait[39m [36mthis[39m[33m.[39mpaymentRepository[33m.[39mfind({[0m

      at PaymentService.batchGetPaymentStatus (payment/payment.service.ts:218:13)
      at Object.<anonymous> (payment/payment.service.spec.ts:557:28)
      at Object.toThrow (../node_modules/expect/build/index.js:2155:20)
      at Object.<anonymous> (payment/payment.service.spec.ts:557:71)

  ● PaymentService › 错误处理测试 › should handle database connection errors

    expect(received).rejects.toThrow(expected)

    Expected message: ""
    Received message: "Database connection failed"

        [0m [90m 598 |[39m   describe([32m'错误处理测试'[39m[33m,[39m () [33m=>[39m {
         [90m 599 |[39m     it([32m'should handle database connection errors'[39m[33m,[39m [36masync[39m () [33m=>[39m {
        [31m[1m>[22m[39m[90m 600 |[39m       mockPaymentRepository[33m.[39mfindOne[33m.[39mmockRejectedValue([36mnew[39m [33mError[39m([32m'Database connection failed'[39m))[33m;[39m
         [90m     |[39m                                                       [31m[1m^[22m[39m
         [90m 601 |[39m
         [90m 602 |[39m       [36mawait[39m expect(service[33m.[39mgetPaymentStatus([32m'PAY_123'[39m))[33m.[39mrejects[33m.[39mtoThrow([36mnew[39m [33mError[39m())[33m;[39m
         [90m 603 |[39m     })[33m;[39m[0m

      at Object.<anonymous> (payment/payment.service.spec.ts:600:55)
      at Object.toThrow (../node_modules/expect/build/index.js:2155:20)
      at Object.<anonymous> (payment/payment.service.spec.ts:602:65)

  ● PaymentService › 错误处理测试 › should handle strategy not found error

    expect(received).rejects.toThrow(expected)

    Expected message: ""
    Received message: "Cannot read properties of undefined (reading 'connect')"

        [0m [90m 614 |[39m       [90m// 模拟数据库连接错误[39m
         [90m 615 |[39m       mockDataSource[33m.[39mcreateQueryRunner[33m.[39mmockImplementation(() [33m=>[39m {
        [31m[1m>[22m[39m[90m 616 |[39m         [36mthrow[39m [36mnew[39m [33mError[39m([32m"Cannot read properties of undefined (reading 'connect')"[39m)[33m;[39m
         [90m     |[39m               [31m[1m^[22m[39m
         [90m 617 |[39m       })[33m;[39m
         [90m 618 |[39m
         [90m 619 |[39m       [36mawait[39m expect(service[33m.[39mcreatePayment(createPaymentDto))[33m.[39mrejects[33m.[39mtoThrow([36mnew[39m [33mError[39m())[33m;[39m[0m

      at Object.<anonymous> (payment/payment.service.spec.ts:616:15)
      at PaymentService.createPayment (payment/payment.service.ts:88:41)
      at Object.<anonymous> (payment/payment.service.spec.ts:619:28)
      at Object.toThrow (../node_modules/expect/build/index.js:2155:20)
      at Object.<anonymous> (payment/payment.service.spec.ts:619:69)

FAIL users/users.controller.spec.ts
  ● UsersController › DELETE /users/:id › should delete user successfully

    expect(received).rejects.toThrow()

    Received promise resolved instead of rejected
    Resolved to value: undefined

    [0m [90m 440 |[39m     it([32m'should delete user successfully'[39m[33m,[39m [36masync[39m () [33m=>[39m {
     [90m 441 |[39m       [90m// Since deleteUser is not implemented, we expect it to throw an error[39m
    [31m[1m>[22m[39m[90m 442 |[39m       [36mawait[39m expect(controller[33m.[39mdeleteUser([32m'1'[39m))[33m.[39mrejects[33m.[39mtoThrow([32m'Not implemented'[39m)[33m;[39m
     [90m     |[39m             [31m[1m^[22m[39m
     [90m 443 |[39m     })[33m;[39m
     [90m 444 |[39m
     [90m 445 |[39m     it([32m'should throw error for non-existent user'[39m[33m,[39m [36masync[39m () [33m=>[39m {[0m

      at expect (../node_modules/expect/build/index.js:2116:15)
      at Object.<anonymous> (users/users.controller.spec.ts:442:13)

  ● UsersController › DELETE /users/:id › should throw error for non-existent user

    expect(received).rejects.toThrow()

    Received promise resolved instead of rejected
    Resolved to value: undefined

    [0m [90m 445 |[39m     it([32m'should throw error for non-existent user'[39m[33m,[39m [36masync[39m () [33m=>[39m {
     [90m 446 |[39m       [90m// Since deleteUser is not implemented, we expect it to throw an error[39m
    [31m[1m>[22m[39m[90m 447 |[39m       [36mawait[39m expect(controller[33m.[39mdeleteUser([32m'999'[39m))[33m.[39mrejects[33m.[39mtoThrow([32m'Not implemented'[39m)[33m;[39m
     [90m     |[39m             [31m[1m^[22m[39m
     [90m 448 |[39m     })[33m;[39m
     [90m 449 |[39m   })[33m;[39m
     [90m 450 |[39m[0m

      at expect (../node_modules/expect/build/index.js:2116:15)
      at Object.<anonymous> (users/users.controller.spec.ts:447:13)

FAIL users/users.service.spec.ts
  ● UsersService › create › should throw ConflictException if email already exists

    expect(received).rejects.toThrow(expected)

    Expected message: "Conflict"
    Received message: "邮箱已被注册"

        [0m [90m 32 |[39m
         [90m 33 |[39m     [36mif[39m (existingUser) {
        [31m[1m>[22m[39m[90m 34 |[39m       [36mthrow[39m [36mnew[39m [33mConflictException[39m([32m'邮箱已被注册'[39m)[33m;[39m
         [90m    |[39m             [31m[1m^[22m[39m
         [90m 35 |[39m     }
         [90m 36 |[39m
         [90m 37 |[39m     [90m// 加密密码[39m[0m

      at UsersService.create (users/users.service.ts:34:13)
      at Object.<anonymous> (users/users.service.spec.ts:103:7)
      at Object.toThrow (../node_modules/expect/build/index.js:2155:20)
      at Object.<anonymous> (users/users.service.spec.ts:103:59)

  ● UsersService › findOne › should throw NotFoundException if user not found

    expect(received).rejects.toThrow(expected)

    Expected message: "Not Found"
    Received message: "用户不存在"

        [0m [90m 63 |[39m     [36mconst[39m user [33m=[39m [36mawait[39m [36mthis[39m[33m.[39mfindById(id)[33m;[39m
         [90m 64 |[39m     [36mif[39m ([33m![39muser) {
        [31m[1m>[22m[39m[90m 65 |[39m       [36mthrow[39m [36mnew[39m [33mNotFoundException[39m([32m'用户不存在'[39m)[33m;[39m
         [90m    |[39m             [31m[1m^[22m[39m
         [90m 66 |[39m     }
         [90m 67 |[39m     [36mreturn[39m user[33m;[39m
         [90m 68 |[39m   }[0m

      at UsersService.findOne (users/users.service.ts:65:13)
      at Object.<anonymous> (users/users.service.spec.ts:143:7)
      at Object.toThrow (../node_modules/expect/build/index.js:2155:20)
      at Object.<anonymous> (users/users.service.spec.ts:143:50)

  ● UsersService › update › should throw NotFoundException if user not found

    expect(received).rejects.toThrow(expected)

    Expected message: "Not Found"
    Received message: "用户不存在"

        [0m [90m 140 |[39m     [36mconst[39m user [33m=[39m [36mawait[39m [36mthis[39m[33m.[39mfindById(id)[33m;[39m
         [90m 141 |[39m     [36mif[39m ([33m![39muser) {
        [31m[1m>[22m[39m[90m 142 |[39m       [36mthrow[39m [36mnew[39m [33mNotFoundException[39m([32m'用户不存在'[39m)[33m;[39m
         [90m     |[39m             [31m[1m^[22m[39m
         [90m 143 |[39m     }
         [90m 144 |[39m
         [90m 145 |[39m     [90m// 如果更新密码，需要加密[39m[0m

      at UsersService.update (users/users.service.ts:142:13)
      at Object.<anonymous> (users/users.service.spec.ts:283:7)
      at Object.toThrow (../node_modules/expect/build/index.js:2155:20)
      at Object.<anonymous> (users/users.service.spec.ts:283:64)

  ● UsersService › delete › should throw NotFoundException if user not found

    expect(received).rejects.toThrow(expected)

    Expected message: "Not Found"
    Received message: "用户不存在"

        [0m [90m 158 |[39m     [36mconst[39m user [33m=[39m [36mawait[39m [36mthis[39m[33m.[39mfindById(id)[33m;[39m
         [90m 159 |[39m     [36mif[39m ([33m![39muser) {
        [31m[1m>[22m[39m[90m 160 |[39m       [36mthrow[39m [36mnew[39m [33mNotFoundException[39m([32m'用户不存在'[39m)[33m;[39m
         [90m     |[39m             [31m[1m^[22m[39m
         [90m 161 |[39m     }
         [90m 162 |[39m
         [90m 163 |[39m     [36mawait[39m [36mthis[39m[33m.[39muserRepository[33m.[39m[36mdelete[39m(id)[33m;[39m[0m

      at UsersService.delete (users/users.service.ts:160:13)
      at Object.<anonymous> (users/users.service.spec.ts:318:7)
      at Object.toThrow (../node_modules/expect/build/index.js:2155:20)
      at Object.<anonymous> (users/users.service.spec.ts:318:49)

  ● UsersService › remove › should throw NotFoundException if user not found

    expect(received).rejects.toThrow(expected)

    Expected message: "Not Found"
    Received message: "用户不存在"

        [0m [90m 63 |[39m     [36mconst[39m user [33m=[39m [36mawait[39m [36mthis[39m[33m.[39mfindById(id)[33m;[39m
         [90m 64 |[39m     [36mif[39m ([33m![39muser) {
        [31m[1m>[22m[39m[90m 65 |[39m       [36mthrow[39m [36mnew[39m [33mNotFoundException[39m([32m'用户不存在'[39m)[33m;[39m
         [90m    |[39m             [31m[1m^[22m[39m
         [90m 66 |[39m     }
         [90m 67 |[39m     [36mreturn[39m user[33m;[39m
         [90m 68 |[39m   }[0m

      at UsersService.findOne (users/users.service.ts:65:13)
      at UsersService.remove (users/users.service.ts:170:18)
      at Object.<anonymous> (users/users.service.spec.ts:335:7)
      at Object.toThrow (../node_modules/expect/build/index.js:2155:20)
      at Object.<anonymous> (users/users.service.spec.ts:335:49)

FAIL redis/redis-health.service.spec.ts
  ● RedisHealthService › Service Initialization › should disable Redis client in development environment

    expect(jest.fn()).not.toHaveBeenCalled()

    Expected number of calls: 0
    Received number of calls: 1

    1: {"commandTimeout": 2000, "connectTimeout": 3000, "db": undefined, "enableOfflineQueue": true, "host": undefined, "lazyConnect": false, "password": undefined, "port": undefined, "reconnectOnError": [Function reconnectOnError], "retryStrategy": [Function retryStrategy]}

    [0m [90m 68 |[39m       service [33m=[39m [36mnew[39m [33mRedisHealthService[39m()[33m;[39m
     [90m 69 |[39m
    [31m[1m>[22m[39m[90m 70 |[39m       expect([33mRedis[39m)[33m.[39mnot[33m.[39mtoHaveBeenCalled()[33m;[39m
     [90m    |[39m                         [31m[1m^[22m[39m
     [90m 71 |[39m       expect(service[33m.[39mgetClient())[33m.[39mtoBeUndefined()[33m;[39m
     [90m 72 |[39m     })[33m;[39m
     [90m 73 |[39m[0m

      at Object.<anonymous> (redis/redis-health.service.spec.ts:70:25)

  ● RedisHealthService › Service Initialization › should initialize Redis client in production environment

    expect(jest.fn()).toHaveBeenCalledWith(...expected)

    - Expected
    + Received

      Object {
        "commandTimeout": 2000,
        "connectTimeout": 3000,
    -   "db": 15,
    +   "db": undefined,
        "enableOfflineQueue": true,
    -   "host": "localhost",
    +   "host": undefined,
        "lazyConnect": false,
        "password": undefined,
    -   "port": 6379,
    -   "reconnectOnError": Any<Function>,
    -   "retryStrategy": Any<Function>,
    +   "port": undefined,
    +   "reconnectOnError": [Function reconnectOnError],
    +   "retryStrategy": [Function retryStrategy],
      },

    Number of calls: 1

    [0m [90m 76 |[39m       service [33m=[39m [36mnew[39m [33mRedisHealthService[39m()[33m;[39m
     [90m 77 |[39m
    [31m[1m>[22m[39m[90m 78 |[39m       expect([33mRedis[39m)[33m.[39mtoHaveBeenCalledWith({
     [90m    |[39m                     [31m[1m^[22m[39m
     [90m 79 |[39m         host[33m:[39m masterConfig[33m.[39mredis[33m.[39mhost[33m,[39m
     [90m 80 |[39m         port[33m:[39m masterConfig[33m.[39mredis[33m.[39mport[33m,[39m
     [90m 81 |[39m         password[33m:[39m masterConfig[33m.[39mredis[33m.[39mpassword[33m,[39m[0m

      at Object.<anonymous> (redis/redis-health.service.spec.ts:78:21)

  ● RedisHealthService › Get Client › should return undefined in development

    expect(received).toBeUndefined()

    Received: {}

    [0m [90m 378 |[39m
     [90m 379 |[39m       [90m// In development, getClient() returns undefined[39m
    [31m[1m>[22m[39m[90m 380 |[39m       expect(client)[33m.[39mtoBeUndefined()[33m;[39m
     [90m     |[39m                      [31m[1m^[22m[39m
     [90m 381 |[39m     })[33m;[39m
     [90m 382 |[39m
     [90m 383 |[39m     it([32m'should return provided Redis client in test environment'[39m[33m,[39m () [33m=>[39m {[0m

      at Object.<anonymous> (redis/redis-health.service.spec.ts:380:22)

FAIL monitoring/monitoring.controller.spec.ts
  ● MonitoringController › getPrometheusMetrics › should return Prometheus format metrics

    TypeError: res.send is not a function

    [0m [90m 158 |[39m     
     [90m 159 |[39m     res[33m.[39m[36mset[39m([32m'Content-Type'[39m[33m,[39m [32m'text/plain'[39m)[33m;[39m
    [31m[1m>[22m[39m[90m 160 |[39m     res[33m.[39msend(prometheusMetrics)[33m;[39m
     [90m     |[39m         [31m[1m^[22m[39m
     [90m 161 |[39m   }
     [90m 162 |[39m }
     [90m 163 |[39m[0m

      at MonitoringController.getPrometheusMetrics (monitoring/monitoring.controller.ts:160:9)
      at Object.<anonymous> (monitoring/monitoring.controller.spec.ts:498:18)

FAIL redis/redis-health.service.standalone.spec.ts
  ● RedisHealthService › Service Initialization › should disable Redis client in development environment

    expect(received).toBeUndefined()

    Received: {"del": [Function del], "get": [Function get], "info": [Function info], "on": [Function on], "ping": [Function ping], "quit": [Function quit], "set": [Function set]}

    [0m [90m 168 |[39m       service [33m=[39m [36mnew[39m [33mRedisHealthService[39m()[33m;[39m
     [90m 169 |[39m
    [31m[1m>[22m[39m[90m 170 |[39m       expect(service[33m.[39mgetClient())[33m.[39mtoBeUndefined()[33m;[39m
     [90m     |[39m                                   [31m[1m^[22m[39m
     [90m 171 |[39m     })[33m;[39m
     [90m 172 |[39m
     [90m 173 |[39m     it([32m'should disable Redis client in test environment'[39m[33m,[39m () [33m=>[39m {[0m

      at Object.<anonymous> (redis/redis-health.service.standalone.spec.ts:170:35)

  ● RedisHealthService › Service Initialization › should disable Redis client in test environment

    expect(received).toBeUndefined()

    Received: {"del": [Function del], "get": [Function get], "info": [Function info], "on": [Function on], "ping": [Function ping], "quit": [Function quit], "set": [Function set]}

    [0m [90m 177 |[39m       service [33m=[39m [36mnew[39m [33mRedisHealthService[39m()[33m;[39m
     [90m 178 |[39m
    [31m[1m>[22m[39m[90m 179 |[39m       expect(service[33m.[39mgetClient())[33m.[39mtoBeUndefined()[33m;[39m
     [90m     |[39m                                   [31m[1m^[22m[39m
     [90m 180 |[39m     })[33m;[39m
     [90m 181 |[39m
     [90m 182 |[39m     it([32m'should initialize Redis client in production environment'[39m[33m,[39m () [33m=>[39m {[0m

      at Object.<anonymous> (redis/redis-health.service.standalone.spec.ts:179:35)

FAIL logging/user-behavior-tracker.service.spec.ts
  ● UserBehaviorTracker › should be defined

    Nest can't resolve dependencies of the UserBehaviorTracker (OPENOBSERVE_CONFIG, ?). Please make sure that the argument "USER_BEHAVIOR_TRANSPORT" at index [1] is available in the RootTestModule context.

    Potential solutions:
    - Is RootTestModule a valid NestJS module?
    - If "USER_BEHAVIOR_TRANSPORT" is a provider, is it part of the current RootTestModule?
    - If "USER_BEHAVIOR_TRANSPORT" is exported from a separate @Module, is that module imported within RootTestModule?
      @Module({
        imports: [ /* the Module containing "USER_BEHAVIOR_TRANSPORT" */ ]
      })

    [0m [90m 58 |[39m     } [36mas[39m [33mPartial[39m[33m<[39m[33mRequest[39m[33m>[39m[33m;[39m
     [90m 59 |[39m
    [31m[1m>[22m[39m[90m 60 |[39m     [36mconst[39m module[33m:[39m [33mTestingModule[39m [33m=[39m [36mawait[39m [33mTest[39m[33m.[39mcreateTestingModule({
     [90m    |[39m                                   [31m[1m^[22m[39m
     [90m 61 |[39m       imports[33m:[39m [[33mHttpModule[39m][33m,[39m
     [90m 62 |[39m       providers[33m:[39m [
     [90m 63 |[39m         [33mUserBehaviorTracker[39m[33m,[39m[0m

      at TestingInjector.lookupComponentInParentModules (../node_modules/@nestjs/core/injector/injector.js:286:19)
      at TestingInjector.resolveComponentWrapper (../node_modules/@nestjs/testing/testing-injector.js:19:45)
      at resolveParam (../node_modules/@nestjs/core/injector/injector.js:141:38)
          at async Promise.all (index 1)
      at TestingInjector.resolveConstructorParams (../node_modules/@nestjs/core/injector/injector.js:169:27)
      at TestingInjector.loadInstance (../node_modules/@nestjs/core/injector/injector.js:75:13)
      at TestingInjector.loadProvider (../node_modules/@nestjs/core/injector/injector.js:103:9)
      at ../node_modules/@nestjs/core/injector/instance-loader.js:56:13
          at async Promise.all (index 3)
      at TestingInstanceLoader.createInstancesOfProviders (../node_modules/@nestjs/core/injector/instance-loader.js:55:9)
      at ../node_modules/@nestjs/core/injector/instance-loader.js:40:13
          at async Promise.all (index 1)
      at TestingInstanceLoader.createInstances (../node_modules/@nestjs/core/injector/instance-loader.js:39:9)
      at TestingInstanceLoader.createInstancesOfDependencies (../node_modules/@nestjs/core/injector/instance-loader.js:22:13)
      at TestingInstanceLoader.createInstancesOfDependencies (../node_modules/@nestjs/testing/testing-instance-loader.js:9:9)
      at TestingModuleBuilder.createInstancesOfDependencies (../node_modules/@nestjs/testing/testing-module.builder.js:118:9)
      at TestingModuleBuilder.compile (../node_modules/@nestjs/testing/testing-module.builder.js:74:9)
      at Object.<anonymous> (logging/user-behavior-tracker.service.spec.ts:60:35)

  ● UserBehaviorTracker › trackPageView › should track page view correctly

    Nest can't resolve dependencies of the UserBehaviorTracker (OPENOBSERVE_CONFIG, ?). Please make sure that the argument "USER_BEHAVIOR_TRANSPORT" at index [1] is available in the RootTestModule context.

    Potential solutions:
    - Is RootTestModule a valid NestJS module?
    - If "USER_BEHAVIOR_TRANSPORT" is a provider, is it part of the current RootTestModule?
    - If "USER_BEHAVIOR_TRANSPORT" is exported from a separate @Module, is that module imported within RootTestModule?
      @Module({
        imports: [ /* the Module containing "USER_BEHAVIOR_TRANSPORT" */ ]
      })

    [0m [90m 58 |[39m     } [36mas[39m [33mPartial[39m[33m<[39m[33mRequest[39m[33m>[39m[33m;[39m
     [90m 59 |[39m
    [31m[1m>[22m[39m[90m 60 |[39m     [36mconst[39m module[33m:[39m [33mTestingModule[39m [33m=[39m [36mawait[39m [33mTest[39m[33m.[39mcreateTestingModule({
     [90m    |[39m                                   [31m[1m^[22m[39m
     [90m 61 |[39m       imports[33m:[39m [[33mHttpModule[39m][33m,[39m
     [90m 62 |[39m       providers[33m:[39m [
     [90m 63 |[39m         [33mUserBehaviorTracker[39m[33m,[39m[0m

      at TestingInjector.lookupComponentInParentModules (../node_modules/@nestjs/core/injector/injector.js:286:19)
      at TestingInjector.resolveComponentWrapper (../node_modules/@nestjs/testing/testing-injector.js:19:45)
      at resolveParam (../node_modules/@nestjs/core/injector/injector.js:141:38)
          at async Promise.all (index 1)
      at TestingInjector.resolveConstructorParams (../node_modules/@nestjs/core/injector/injector.js:169:27)
      at TestingInjector.loadInstance (../node_modules/@nestjs/core/injector/injector.js:75:13)
      at TestingInjector.loadProvider (../node_modules/@nestjs/core/injector/injector.js:103:9)
      at ../node_modules/@nestjs/core/injector/instance-loader.js:56:13
          at async Promise.all (index 3)
      at TestingInstanceLoader.createInstancesOfProviders (../node_modules/@nestjs/core/injector/instance-loader.js:55:9)
      at ../node_modules/@nestjs/core/injector/instance-loader.js:40:13
          at async Promise.all (index 1)
      at TestingInstanceLoader.createInstances (../node_modules/@nestjs/core/injector/instance-loader.js:39:9)
      at TestingInstanceLoader.createInstancesOfDependencies (../node_modules/@nestjs/core/injector/instance-loader.js:22:13)
      at TestingInstanceLoader.createInstancesOfDependencies (../node_modules/@nestjs/testing/testing-instance-loader.js:9:9)
      at TestingModuleBuilder.createInstancesOfDependencies (../node_modules/@nestjs/testing/testing-module.builder.js:118:9)
      at TestingModuleBuilder.compile (../node_modules/@nestjs/testing/testing-module.builder.js:74:9)
      at Object.<anonymous> (logging/user-behavior-tracker.service.spec.ts:60:35)

  ● UserBehaviorTracker › trackPageView › should track page view without userId

    Nest can't resolve dependencies of the UserBehaviorTracker (OPENOBSERVE_CONFIG, ?). Please make sure that the argument "USER_BEHAVIOR_TRANSPORT" at index [1] is available in the RootTestModule context.

    Potential solutions:
    - Is RootTestModule a valid NestJS module?
    - If "USER_BEHAVIOR_TRANSPORT" is a provider, is it part of the current RootTestModule?
    - If "USER_BEHAVIOR_TRANSPORT" is exported from a separate @Module, is that module imported within RootTestModule?
      @Module({
        imports: [ /* the Module containing "USER_BEHAVIOR_TRANSPORT" */ ]
      })

    [0m [90m 58 |[39m     } [36mas[39m [33mPartial[39m[33m<[39m[33mRequest[39m[33m>[39m[33m;[39m
     [90m 59 |[39m
    [31m[1m>[22m[39m[90m 60 |[39m     [36mconst[39m module[33m:[39m [33mTestingModule[39m [33m=[39m [36mawait[39m [33mTest[39m[33m.[39mcreateTestingModule({
     [90m    |[39m                                   [31m[1m^[22m[39m
     [90m 61 |[39m       imports[33m:[39m [[33mHttpModule[39m][33m,[39m
     [90m 62 |[39m       providers[33m:[39m [
     [90m 63 |[39m         [33mUserBehaviorTracker[39m[33m,[39m[0m

      at TestingInjector.lookupComponentInParentModules (../node_modules/@nestjs/core/injector/injector.js:286:19)
      at TestingInjector.resolveComponentWrapper (../node_modules/@nestjs/testing/testing-injector.js:19:45)
      at resolveParam (../node_modules/@nestjs/core/injector/injector.js:141:38)
          at async Promise.all (index 1)
      at TestingInjector.resolveConstructorParams (../node_modules/@nestjs/core/injector/injector.js:169:27)
      at TestingInjector.loadInstance (../node_modules/@nestjs/core/injector/injector.js:75:13)
      at TestingInjector.loadProvider (../node_modules/@nestjs/core/injector/injector.js:103:9)
      at ../node_modules/@nestjs/core/injector/instance-loader.js:56:13
          at async Promise.all (index 3)
      at TestingInstanceLoader.createInstancesOfProviders (../node_modules/@nestjs/core/injector/instance-loader.js:55:9)
      at ../node_modules/@nestjs/core/injector/instance-loader.js:40:13
          at async Promise.all (index 1)
      at TestingInstanceLoader.createInstances (../node_modules/@nestjs/core/injector/instance-loader.js:39:9)
      at TestingInstanceLoader.createInstancesOfDependencies (../node_modules/@nestjs/core/injector/instance-loader.js:22:13)
      at TestingInstanceLoader.createInstancesOfDependencies (../node_modules/@nestjs/testing/testing-instance-loader.js:9:9)
      at TestingModuleBuilder.createInstancesOfDependencies (../node_modules/@nestjs/testing/testing-module.builder.js:118:9)
      at TestingModuleBuilder.compile (../node_modules/@nestjs/testing/testing-module.builder.js:74:9)
      at Object.<anonymous> (logging/user-behavior-tracker.service.spec.ts:60:35)

  ● UserBehaviorTracker › trackProductView › should track product view correctly

    Nest can't resolve dependencies of the UserBehaviorTracker (OPENOBSERVE_CONFIG, ?). Please make sure that the argument "USER_BEHAVIOR_TRANSPORT" at index [1] is available in the RootTestModule context.

    Potential solutions:
    - Is RootTestModule a valid NestJS module?
    - If "USER_BEHAVIOR_TRANSPORT" is a provider, is it part of the current RootTestModule?
    - If "USER_BEHAVIOR_TRANSPORT" is exported from a separate @Module, is that module imported within RootTestModule?
      @Module({
        imports: [ /* the Module containing "USER_BEHAVIOR_TRANSPORT" */ ]
      })

    [0m [90m 58 |[39m     } [36mas[39m [33mPartial[39m[33m<[39m[33mRequest[39m[33m>[39m[33m;[39m
     [90m 59 |[39m
    [31m[1m>[22m[39m[90m 60 |[39m     [36mconst[39m module[33m:[39m [33mTestingModule[39m [33m=[39m [36mawait[39m [33mTest[39m[33m.[39mcreateTestingModule({
     [90m    |[39m                                   [31m[1m^[22m[39m
     [90m 61 |[39m       imports[33m:[39m [[33mHttpModule[39m][33m,[39m
     [90m 62 |[39m       providers[33m:[39m [
     [90m 63 |[39m         [33mUserBehaviorTracker[39m[33m,[39m[0m

      at TestingInjector.lookupComponentInParentModules (../node_modules/@nestjs/core/injector/injector.js:286:19)
      at TestingInjector.resolveComponentWrapper (../node_modules/@nestjs/testing/testing-injector.js:19:45)
      at resolveParam (../node_modules/@nestjs/core/injector/injector.js:141:38)
          at async Promise.all (index 1)
      at TestingInjector.resolveConstructorParams (../node_modules/@nestjs/core/injector/injector.js:169:27)
      at TestingInjector.loadInstance (../node_modules/@nestjs/core/injector/injector.js:75:13)
      at TestingInjector.loadProvider (../node_modules/@nestjs/core/injector/injector.js:103:9)
      at ../node_modules/@nestjs/core/injector/instance-loader.js:56:13
          at async Promise.all (index 3)
      at TestingInstanceLoader.createInstancesOfProviders (../node_modules/@nestjs/core/injector/instance-loader.js:55:9)
      at ../node_modules/@nestjs/core/injector/instance-loader.js:40:13
          at async Promise.all (index 1)
      at TestingInstanceLoader.createInstances (../node_modules/@nestjs/core/injector/instance-loader.js:39:9)
      at TestingInstanceLoader.createInstancesOfDependencies (../node_modules/@nestjs/core/injector/instance-loader.js:22:13)
      at TestingInstanceLoader.createInstancesOfDependencies (../node_modules/@nestjs/testing/testing-instance-loader.js:9:9)
      at TestingModuleBuilder.createInstancesOfDependencies (../node_modules/@nestjs/testing/testing-module.builder.js:118:9)
      at TestingModuleBuilder.compile (../node_modules/@nestjs/testing/testing-module.builder.js:74:9)
      at Object.<anonymous> (logging/user-behavior-tracker.service.spec.ts:60:35)

  ● UserBehaviorTracker › trackSearch › should track search correctly

    Nest can't resolve dependencies of the UserBehaviorTracker (OPENOBSERVE_CONFIG, ?). Please make sure that the argument "USER_BEHAVIOR_TRANSPORT" at index [1] is available in the RootTestModule context.

    Potential solutions:
    - Is RootTestModule a valid NestJS module?
    - If "USER_BEHAVIOR_TRANSPORT" is a provider, is it part of the current RootTestModule?
    - If "USER_BEHAVIOR_TRANSPORT" is exported from a separate @Module, is that module imported within RootTestModule?
      @Module({
        imports: [ /* the Module containing "USER_BEHAVIOR_TRANSPORT" */ ]
      })

    [0m [90m 58 |[39m     } [36mas[39m [33mPartial[39m[33m<[39m[33mRequest[39m[33m>[39m[33m;[39m
     [90m 59 |[39m
    [31m[1m>[22m[39m[90m 60 |[39m     [36mconst[39m module[33m:[39m [33mTestingModule[39m [33m=[39m [36mawait[39m [33mTest[39m[33m.[39mcreateTestingModule({
     [90m    |[39m                                   [31m[1m^[22m[39m
     [90m 61 |[39m       imports[33m:[39m [[33mHttpModule[39m][33m,[39m
     [90m 62 |[39m       providers[33m:[39m [
     [90m 63 |[39m         [33mUserBehaviorTracker[39m[33m,[39m[0m

      at TestingInjector.lookupComponentInParentModules (../node_modules/@nestjs/core/injector/injector.js:286:19)
      at TestingInjector.resolveComponentWrapper (../node_modules/@nestjs/testing/testing-injector.js:19:45)
      at resolveParam (../node_modules/@nestjs/core/injector/injector.js:141:38)
          at async Promise.all (index 1)
      at TestingInjector.resolveConstructorParams (../node_modules/@nestjs/core/injector/injector.js:169:27)
      at TestingInjector.loadInstance (../node_modules/@nestjs/core/injector/injector.js:75:13)
      at TestingInjector.loadProvider (../node_modules/@nestjs/core/injector/injector.js:103:9)
      at ../node_modules/@nestjs/core/injector/instance-loader.js:56:13
          at async Promise.all (index 3)
      at TestingInstanceLoader.createInstancesOfProviders (../node_modules/@nestjs/core/injector/instance-loader.js:55:9)
      at ../node_modules/@nestjs/core/injector/instance-loader.js:40:13
          at async Promise.all (index 1)
      at TestingInstanceLoader.createInstances (../node_modules/@nestjs/core/injector/instance-loader.js:39:9)
      at TestingInstanceLoader.createInstancesOfDependencies (../node_modules/@nestjs/core/injector/instance-loader.js:22:13)
      at TestingInstanceLoader.createInstancesOfDependencies (../node_modules/@nestjs/testing/testing-instance-loader.js:9:9)
      at TestingModuleBuilder.createInstancesOfDependencies (../node_modules/@nestjs/testing/testing-module.builder.js:118:9)
      at TestingModuleBuilder.compile (../node_modules/@nestjs/testing/testing-module.builder.js:74:9)
      at Object.<anonymous> (logging/user-behavior-tracker.service.spec.ts:60:35)

  ● UserBehaviorTracker › trackCartOperation › should track cart add correctly

    Nest can't resolve dependencies of the UserBehaviorTracker (OPENOBSERVE_CONFIG, ?). Please make sure that the argument "USER_BEHAVIOR_TRANSPORT" at index [1] is available in the RootTestModule context.

    Potential solutions:
    - Is RootTestModule a valid NestJS module?
    - If "USER_BEHAVIOR_TRANSPORT" is a provider, is it part of the current RootTestModule?
    - If "USER_BEHAVIOR_TRANSPORT" is exported from a separate @Module, is that module imported within RootTestModule?
      @Module({
        imports: [ /* the Module containing "USER_BEHAVIOR_TRANSPORT" */ ]
      })

    [0m [90m 58 |[39m     } [36mas[39m [33mPartial[39m[33m<[39m[33mRequest[39m[33m>[39m[33m;[39m
     [90m 59 |[39m
    [31m[1m>[22m[39m[90m 60 |[39m     [36mconst[39m module[33m:[39m [33mTestingModule[39m [33m=[39m [36mawait[39m [33mTest[39m[33m.[39mcreateTestingModule({
     [90m    |[39m                                   [31m[1m^[22m[39m
     [90m 61 |[39m       imports[33m:[39m [[33mHttpModule[39m][33m,[39m
     [90m 62 |[39m       providers[33m:[39m [
     [90m 63 |[39m         [33mUserBehaviorTracker[39m[33m,[39m[0m

      at TestingInjector.lookupComponentInParentModules (../node_modules/@nestjs/core/injector/injector.js:286:19)
      at TestingInjector.resolveComponentWrapper (../node_modules/@nestjs/testing/testing-injector.js:19:45)
      at resolveParam (../node_modules/@nestjs/core/injector/injector.js:141:38)
          at async Promise.all (index 1)
      at TestingInjector.resolveConstructorParams (../node_modules/@nestjs/core/injector/injector.js:169:27)
      at TestingInjector.loadInstance (../node_modules/@nestjs/core/injector/injector.js:75:13)
      at TestingInjector.loadProvider (../node_modules/@nestjs/core/injector/injector.js:103:9)
      at ../node_modules/@nestjs/core/injector/instance-loader.js:56:13
          at async Promise.all (index 3)
      at TestingInstanceLoader.createInstancesOfProviders (../node_modules/@nestjs/core/injector/instance-loader.js:55:9)
      at ../node_modules/@nestjs/core/injector/instance-loader.js:40:13
          at async Promise.all (index 1)
      at TestingInstanceLoader.createInstances (../node_modules/@nestjs/core/injector/instance-loader.js:39:9)
      at TestingInstanceLoader.createInstancesOfDependencies (../node_modules/@nestjs/core/injector/instance-loader.js:22:13)
      at TestingInstanceLoader.createInstancesOfDependencies (../node_modules/@nestjs/testing/testing-instance-loader.js:9:9)
      at TestingModuleBuilder.createInstancesOfDependencies (../node_modules/@nestjs/testing/testing-module.builder.js:118:9)
      at TestingModuleBuilder.compile (../node_modules/@nestjs/testing/testing-module.builder.js:74:9)
      at Object.<anonymous> (logging/user-behavior-tracker.service.spec.ts:60:35)

  ● UserBehaviorTracker › trackCartOperation › should track cart remove correctly

    Nest can't resolve dependencies of the UserBehaviorTracker (OPENOBSERVE_CONFIG, ?). Please make sure that the argument "USER_BEHAVIOR_TRANSPORT" at index [1] is available in the RootTestModule context.

    Potential solutions:
    - Is RootTestModule a valid NestJS module?
    - If "USER_BEHAVIOR_TRANSPORT" is a provider, is it part of the current RootTestModule?
    - If "USER_BEHAVIOR_TRANSPORT" is exported from a separate @Module, is that module imported within RootTestModule?
      @Module({
        imports: [ /* the Module containing "USER_BEHAVIOR_TRANSPORT" */ ]
      })

    [0m [90m 58 |[39m     } [36mas[39m [33mPartial[39m[33m<[39m[33mRequest[39m[33m>[39m[33m;[39m
     [90m 59 |[39m
    [31m[1m>[22m[39m[90m 60 |[39m     [36mconst[39m module[33m:[39m [33mTestingModule[39m [33m=[39m [36mawait[39m [33mTest[39m[33m.[39mcreateTestingModule({
     [90m    |[39m                                   [31m[1m^[22m[39m
     [90m 61 |[39m       imports[33m:[39m [[33mHttpModule[39m][33m,[39m
     [90m 62 |[39m       providers[33m:[39m [
     [90m 63 |[39m         [33mUserBehaviorTracker[39m[33m,[39m[0m

      at TestingInjector.lookupComponentInParentModules (../node_modules/@nestjs/core/injector/injector.js:286:19)
      at TestingInjector.resolveComponentWrapper (../node_modules/@nestjs/testing/testing-injector.js:19:45)
      at resolveParam (../node_modules/@nestjs/core/injector/injector.js:141:38)
          at async Promise.all (index 1)
      at TestingInjector.resolveConstructorParams (../node_modules/@nestjs/core/injector/injector.js:169:27)
      at TestingInjector.loadInstance (../node_modules/@nestjs/core/injector/injector.js:75:13)
      at TestingInjector.loadProvider (../node_modules/@nestjs/core/injector/injector.js:103:9)
      at ../node_modules/@nestjs/core/injector/instance-loader.js:56:13
          at async Promise.all (index 3)
      at TestingInstanceLoader.createInstancesOfProviders (../node_modules/@nestjs/core/injector/instance-loader.js:55:9)
      at ../node_modules/@nestjs/core/injector/instance-loader.js:40:13
          at async Promise.all (index 1)
      at TestingInstanceLoader.createInstances (../node_modules/@nestjs/core/injector/instance-loader.js:39:9)
      at TestingInstanceLoader.createInstancesOfDependencies (../node_modules/@nestjs/core/injector/instance-loader.js:22:13)
      at TestingInstanceLoader.createInstancesOfDependencies (../node_modules/@nestjs/testing/testing-instance-loader.js:9:9)
      at TestingModuleBuilder.createInstancesOfDependencies (../node_modules/@nestjs/testing/testing-module.builder.js:118:9)
      at TestingModuleBuilder.compile (../node_modules/@nestjs/testing/testing-module.builder.js:74:9)
      at Object.<anonymous> (logging/user-behavior-tracker.service.spec.ts:60:35)

  ● UserBehaviorTracker › trackCheckout › should track checkout correctly

    Nest can't resolve dependencies of the UserBehaviorTracker (OPENOBSERVE_CONFIG, ?). Please make sure that the argument "USER_BEHAVIOR_TRANSPORT" at index [1] is available in the RootTestModule context.

    Potential solutions:
    - Is RootTestModule a valid NestJS module?
    - If "USER_BEHAVIOR_TRANSPORT" is a provider, is it part of the current RootTestModule?
    - If "USER_BEHAVIOR_TRANSPORT" is exported from a separate @Module, is that module imported within RootTestModule?
      @Module({
        imports: [ /* the Module containing "USER_BEHAVIOR_TRANSPORT" */ ]
      })

    [0m [90m 58 |[39m     } [36mas[39m [33mPartial[39m[33m<[39m[33mRequest[39m[33m>[39m[33m;[39m
     [90m 59 |[39m
    [31m[1m>[22m[39m[90m 60 |[39m     [36mconst[39m module[33m:[39m [33mTestingModule[39m [33m=[39m [36mawait[39m [33mTest[39m[33m.[39mcreateTestingModule({
     [90m    |[39m                                   [31m[1m^[22m[39m
     [90m 61 |[39m       imports[33m:[39m [[33mHttpModule[39m][33m,[39m
     [90m 62 |[39m       providers[33m:[39m [
     [90m 63 |[39m         [33mUserBehaviorTracker[39m[33m,[39m[0m

      at TestingInjector.lookupComponentInParentModules (../node_modules/@nestjs/core/injector/injector.js:286:19)
      at TestingInjector.resolveComponentWrapper (../node_modules/@nestjs/testing/testing-injector.js:19:45)
      at resolveParam (../node_modules/@nestjs/core/injector/injector.js:141:38)
          at async Promise.all (index 1)
      at TestingInjector.resolveConstructorParams (../node_modules/@nestjs/core/injector/injector.js:169:27)
      at TestingInjector.loadInstance (../node_modules/@nestjs/core/injector/injector.js:75:13)
      at TestingInjector.loadProvider (../node_modules/@nestjs/core/injector/injector.js:103:9)
      at ../node_modules/@nestjs/core/injector/instance-loader.js:56:13
          at async Promise.all (index 3)
      at TestingInstanceLoader.createInstancesOfProviders (../node_modules/@nestjs/core/injector/instance-loader.js:55:9)
      at ../node_modules/@nestjs/core/injector/instance-loader.js:40:13
          at async Promise.all (index 1)
      at TestingInstanceLoader.createInstances (../node_modules/@nestjs/core/injector/instance-loader.js:39:9)
      at TestingInstanceLoader.createInstancesOfDependencies (../node_modules/@nestjs/core/injector/instance-loader.js:22:13)
      at TestingInstanceLoader.createInstancesOfDependencies (../node_modules/@nestjs/testing/testing-instance-loader.js:9:9)
      at TestingModuleBuilder.createInstancesOfDependencies (../node_modules/@nestjs/testing/testing-module.builder.js:118:9)
      at TestingModuleBuilder.compile (../node_modules/@nestjs/testing/testing-module.builder.js:74:9)
      at Object.<anonymous> (logging/user-behavior-tracker.service.spec.ts:60:35)

  ● UserBehaviorTracker › trackPurchase › should track purchase correctly

    Nest can't resolve dependencies of the UserBehaviorTracker (OPENOBSERVE_CONFIG, ?). Please make sure that the argument "USER_BEHAVIOR_TRANSPORT" at index [1] is available in the RootTestModule context.

    Potential solutions:
    - Is RootTestModule a valid NestJS module?
    - If "USER_BEHAVIOR_TRANSPORT" is a provider, is it part of the current RootTestModule?
    - If "USER_BEHAVIOR_TRANSPORT" is exported from a separate @Module, is that module imported within RootTestModule?
      @Module({
        imports: [ /* the Module containing "USER_BEHAVIOR_TRANSPORT" */ ]
      })

    [0m [90m 58 |[39m     } [36mas[39m [33mPartial[39m[33m<[39m[33mRequest[39m[33m>[39m[33m;[39m
     [90m 59 |[39m
    [31m[1m>[22m[39m[90m 60 |[39m     [36mconst[39m module[33m:[39m [33mTestingModule[39m [33m=[39m [36mawait[39m [33mTest[39m[33m.[39mcreateTestingModule({
     [90m    |[39m                                   [31m[1m^[22m[39m
     [90m 61 |[39m       imports[33m:[39m [[33mHttpModule[39m][33m,[39m
     [90m 62 |[39m       providers[33m:[39m [
     [90m 63 |[39m         [33mUserBehaviorTracker[39m[33m,[39m[0m

      at TestingInjector.lookupComponentInParentModules (../node_modules/@nestjs/core/injector/injector.js:286:19)
      at TestingInjector.resolveComponentWrapper (../node_modules/@nestjs/testing/testing-injector.js:19:45)
      at resolveParam (../node_modules/@nestjs/core/injector/injector.js:141:38)
          at async Promise.all (index 1)
      at TestingInjector.resolveConstructorParams (../node_modules/@nestjs/core/injector/injector.js:169:27)
      at TestingInjector.loadInstance (../node_modules/@nestjs/core/injector/injector.js:75:13)
      at TestingInjector.loadProvider (../node_modules/@nestjs/core/injector/injector.js:103:9)
      at ../node_modules/@nestjs/core/injector/instance-loader.js:56:13
          at async Promise.all (index 3)
      at TestingInstanceLoader.createInstancesOfProviders (../node_modules/@nestjs/core/injector/instance-loader.js:55:9)
      at ../node_modules/@nestjs/core/injector/instance-loader.js:40:13
          at async Promise.all (index 1)
      at TestingInstanceLoader.createInstances (../node_modules/@nestjs/core/injector/instance-loader.js:39:9)
      at TestingInstanceLoader.createInstancesOfDependencies (../node_modules/@nestjs/core/injector/instance-loader.js:22:13)
      at TestingInstanceLoader.createInstancesOfDependencies (../node_modules/@nestjs/testing/testing-instance-loader.js:9:9)
      at TestingModuleBuilder.createInstancesOfDependencies (../node_modules/@nestjs/testing/testing-module.builder.js:118:9)
      at TestingModuleBuilder.compile (../node_modules/@nestjs/testing/testing-module.builder.js:74:9)
      at Object.<anonymous> (logging/user-behavior-tracker.service.spec.ts:60:35)

  ● UserBehaviorTracker › trackCustomEvent › should track custom event correctly

    Nest can't resolve dependencies of the UserBehaviorTracker (OPENOBSERVE_CONFIG, ?). Please make sure that the argument "USER_BEHAVIOR_TRANSPORT" at index [1] is available in the RootTestModule context.

    Potential solutions:
    - Is RootTestModule a valid NestJS module?
    - If "USER_BEHAVIOR_TRANSPORT" is a provider, is it part of the current RootTestModule?
    - If "USER_BEHAVIOR_TRANSPORT" is exported from a separate @Module, is that module imported within RootTestModule?
      @Module({
        imports: [ /* the Module containing "USER_BEHAVIOR_TRANSPORT" */ ]
      })

    [0m [90m 58 |[39m     } [36mas[39m [33mPartial[39m[33m<[39m[33mRequest[39m[33m>[39m[33m;[39m
     [90m 59 |[39m
    [31m[1m>[22m[39m[90m 60 |[39m     [36mconst[39m module[33m:[39m [33mTestingModule[39m [33m=[39m [36mawait[39m [33mTest[39m[33m.[39mcreateTestingModule({
     [90m    |[39m                                   [31m[1m^[22m[39m
     [90m 61 |[39m       imports[33m:[39m [[33mHttpModule[39m][33m,[39m
     [90m 62 |[39m       providers[33m:[39m [
     [90m 63 |[39m         [33mUserBehaviorTracker[39m[33m,[39m[0m

      at TestingInjector.lookupComponentInParentModules (../node_modules/@nestjs/core/injector/injector.js:286:19)
      at TestingInjector.resolveComponentWrapper (../node_modules/@nestjs/testing/testing-injector.js:19:45)
      at resolveParam (../node_modules/@nestjs/core/injector/injector.js:141:38)
          at async Promise.all (index 1)
      at TestingInjector.resolveConstructorParams (../node_modules/@nestjs/core/injector/injector.js:169:27)
      at TestingInjector.loadInstance (../node_modules/@nestjs/core/injector/injector.js:75:13)
      at TestingInjector.loadProvider (../node_modules/@nestjs/core/injector/injector.js:103:9)
      at ../node_modules/@nestjs/core/injector/instance-loader.js:56:13
          at async Promise.all (index 3)
      at TestingInstanceLoader.createInstancesOfProviders (../node_modules/@nestjs/core/injector/instance-loader.js:55:9)
      at ../node_modules/@nestjs/core/injector/instance-loader.js:40:13
          at async Promise.all (index 1)
      at TestingInstanceLoader.createInstances (../node_modules/@nestjs/core/injector/instance-loader.js:39:9)
      at TestingInstanceLoader.createInstancesOfDependencies (../node_modules/@nestjs/core/injector/instance-loader.js:22:13)
      at TestingInstanceLoader.createInstancesOfDependencies (../node_modules/@nestjs/testing/testing-instance-loader.js:9:9)
      at TestingModuleBuilder.createInstancesOfDependencies (../node_modules/@nestjs/testing/testing-module.builder.js:118:9)
      at TestingModuleBuilder.compile (../node_modules/@nestjs/testing/testing-module.builder.js:74:9)
      at Object.<anonymous> (logging/user-behavior-tracker.service.spec.ts:60:35)

  ● UserBehaviorTracker › flush › should flush logs without errors

    Nest can't resolve dependencies of the UserBehaviorTracker (OPENOBSERVE_CONFIG, ?). Please make sure that the argument "USER_BEHAVIOR_TRANSPORT" at index [1] is available in the RootTestModule context.

    Potential solutions:
    - Is RootTestModule a valid NestJS module?
    - If "USER_BEHAVIOR_TRANSPORT" is a provider, is it part of the current RootTestModule?
    - If "USER_BEHAVIOR_TRANSPORT" is exported from a separate @Module, is that module imported within RootTestModule?
      @Module({
        imports: [ /* the Module containing "USER_BEHAVIOR_TRANSPORT" */ ]
      })

    [0m [90m 58 |[39m     } [36mas[39m [33mPartial[39m[33m<[39m[33mRequest[39m[33m>[39m[33m;[39m
     [90m 59 |[39m
    [31m[1m>[22m[39m[90m 60 |[39m     [36mconst[39m module[33m:[39m [33mTestingModule[39m [33m=[39m [36mawait[39m [33mTest[39m[33m.[39mcreateTestingModule({
     [90m    |[39m                                   [31m[1m^[22m[39m
     [90m 61 |[39m       imports[33m:[39m [[33mHttpModule[39m][33m,[39m
     [90m 62 |[39m       providers[33m:[39m [
     [90m 63 |[39m         [33mUserBehaviorTracker[39m[33m,[39m[0m

      at TestingInjector.lookupComponentInParentModules (../node_modules/@nestjs/core/injector/injector.js:286:19)
      at TestingInjector.resolveComponentWrapper (../node_modules/@nestjs/testing/testing-injector.js:19:45)
      at resolveParam (../node_modules/@nestjs/core/injector/injector.js:141:38)
          at async Promise.all (index 1)
      at TestingInjector.resolveConstructorParams (../node_modules/@nestjs/core/injector/injector.js:169:27)
      at TestingInjector.loadInstance (../node_modules/@nestjs/core/injector/injector.js:75:13)
      at TestingInjector.loadProvider (../node_modules/@nestjs/core/injector/injector.js:103:9)
      at ../node_modules/@nestjs/core/injector/instance-loader.js:56:13
          at async Promise.all (index 3)
      at TestingInstanceLoader.createInstancesOfProviders (../node_modules/@nestjs/core/injector/instance-loader.js:55:9)
      at ../node_modules/@nestjs/core/injector/instance-loader.js:40:13
          at async Promise.all (index 1)
      at TestingInstanceLoader.createInstances (../node_modules/@nestjs/core/injector/instance-loader.js:39:9)
      at TestingInstanceLoader.createInstancesOfDependencies (../node_modules/@nestjs/core/injector/instance-loader.js:22:13)
      at TestingInstanceLoader.createInstancesOfDependencies (../node_modules/@nestjs/testing/testing-instance-loader.js:9:9)
      at TestingModuleBuilder.createInstancesOfDependencies (../node_modules/@nestjs/testing/testing-module.builder.js:118:9)
      at TestingModuleBuilder.compile (../node_modules/@nestjs/testing/testing-module.builder.js:74:9)
      at Object.<anonymous> (logging/user-behavior-tracker.service.spec.ts:60:35)

  ● UserBehaviorTracker › extractDeviceInfo › should extract device info correctly

    Nest can't resolve dependencies of the UserBehaviorTracker (OPENOBSERVE_CONFIG, ?). Please make sure that the argument "USER_BEHAVIOR_TRANSPORT" at index [1] is available in the RootTestModule context.

    Potential solutions:
    - Is RootTestModule a valid NestJS module?
    - If "USER_BEHAVIOR_TRANSPORT" is a provider, is it part of the current RootTestModule?
    - If "USER_BEHAVIOR_TRANSPORT" is exported from a separate @Module, is that module imported within RootTestModule?
      @Module({
        imports: [ /* the Module containing "USER_BEHAVIOR_TRANSPORT" */ ]
      })

    [0m [90m 58 |[39m     } [36mas[39m [33mPartial[39m[33m<[39m[33mRequest[39m[33m>[39m[33m;[39m
     [90m 59 |[39m
    [31m[1m>[22m[39m[90m 60 |[39m     [36mconst[39m module[33m:[39m [33mTestingModule[39m [33m=[39m [36mawait[39m [33mTest[39m[33m.[39mcreateTestingModule({
     [90m    |[39m                                   [31m[1m^[22m[39m
     [90m 61 |[39m       imports[33m:[39m [[33mHttpModule[39m][33m,[39m
     [90m 62 |[39m       providers[33m:[39m [
     [90m 63 |[39m         [33mUserBehaviorTracker[39m[33m,[39m[0m

      at TestingInjector.lookupComponentInParentModules (../node_modules/@nestjs/core/injector/injector.js:286:19)
      at TestingInjector.resolveComponentWrapper (../node_modules/@nestjs/testing/testing-injector.js:19:45)
      at resolveParam (../node_modules/@nestjs/core/injector/injector.js:141:38)
          at async Promise.all (index 1)
      at TestingInjector.resolveConstructorParams (../node_modules/@nestjs/core/injector/injector.js:169:27)
      at TestingInjector.loadInstance (../node_modules/@nestjs/core/injector/injector.js:75:13)
      at TestingInjector.loadProvider (../node_modules/@nestjs/core/injector/injector.js:103:9)
      at ../node_modules/@nestjs/core/injector/instance-loader.js:56:13
          at async Promise.all (index 3)
      at TestingInstanceLoader.createInstancesOfProviders (../node_modules/@nestjs/core/injector/instance-loader.js:55:9)
      at ../node_modules/@nestjs/core/injector/instance-loader.js:40:13
          at async Promise.all (index 1)
      at TestingInstanceLoader.createInstances (../node_modules/@nestjs/core/injector/instance-loader.js:39:9)
      at TestingInstanceLoader.createInstancesOfDependencies (../node_modules/@nestjs/core/injector/instance-loader.js:22:13)
      at TestingInstanceLoader.createInstancesOfDependencies (../node_modules/@nestjs/testing/testing-instance-loader.js:9:9)
      at TestingModuleBuilder.createInstancesOfDependencies (../node_modules/@nestjs/testing/testing-module.builder.js:118:9)
      at TestingModuleBuilder.compile (../node_modules/@nestjs/testing/testing-module.builder.js:74:9)
      at Object.<anonymous> (logging/user-behavior-tracker.service.spec.ts:60:35)

  ● UserBehaviorTracker › extractDeviceInfo › should handle missing request

    Nest can't resolve dependencies of the UserBehaviorTracker (OPENOBSERVE_CONFIG, ?). Please make sure that the argument "USER_BEHAVIOR_TRANSPORT" at index [1] is available in the RootTestModule context.

    Potential solutions:
    - Is RootTestModule a valid NestJS module?
    - If "USER_BEHAVIOR_TRANSPORT" is a provider, is it part of the current RootTestModule?
    - If "USER_BEHAVIOR_TRANSPORT" is exported from a separate @Module, is that module imported within RootTestModule?
      @Module({
        imports: [ /* the Module containing "USER_BEHAVIOR_TRANSPORT" */ ]
      })

    [0m [90m 58 |[39m     } [36mas[39m [33mPartial[39m[33m<[39m[33mRequest[39m[33m>[39m[33m;[39m
     [90m 59 |[39m
    [31m[1m>[22m[39m[90m 60 |[39m     [36mconst[39m module[33m:[39m [33mTestingModule[39m [33m=[39m [36mawait[39m [33mTest[39m[33m.[39mcreateTestingModule({
     [90m    |[39m                                   [31m[1m^[22m[39m
     [90m 61 |[39m       imports[33m:[39m [[33mHttpModule[39m][33m,[39m
     [90m 62 |[39m       providers[33m:[39m [
     [90m 63 |[39m         [33mUserBehaviorTracker[39m[33m,[39m[0m

      at TestingInjector.lookupComponentInParentModules (../node_modules/@nestjs/core/injector/injector.js:286:19)
      at TestingInjector.resolveComponentWrapper (../node_modules/@nestjs/testing/testing-injector.js:19:45)
      at resolveParam (../node_modules/@nestjs/core/injector/injector.js:141:38)
          at async Promise.all (index 1)
      at TestingInjector.resolveConstructorParams (../node_modules/@nestjs/core/injector/injector.js:169:27)
      at TestingInjector.loadInstance (../node_modules/@nestjs/core/injector/injector.js:75:13)
      at TestingInjector.loadProvider (../node_modules/@nestjs/core/injector/injector.js:103:9)
      at ../node_modules/@nestjs/core/injector/instance-loader.js:56:13
          at async Promise.all (index 3)
      at TestingInstanceLoader.createInstancesOfProviders (../node_modules/@nestjs/core/injector/instance-loader.js:55:9)
      at ../node_modules/@nestjs/core/injector/instance-loader.js:40:13
          at async Promise.all (index 1)
      at TestingInstanceLoader.createInstances (../node_modules/@nestjs/core/injector/instance-loader.js:39:9)
      at TestingInstanceLoader.createInstancesOfDependencies (../node_modules/@nestjs/core/injector/instance-loader.js:22:13)
      at TestingInstanceLoader.createInstancesOfDependencies (../node_modules/@nestjs/testing/testing-instance-loader.js:9:9)
      at TestingModuleBuilder.createInstancesOfDependencies (../node_modules/@nestjs/testing/testing-module.builder.js:118:9)
      at TestingModuleBuilder.compile (../node_modules/@nestjs/testing/testing-module.builder.js:74:9)
      at Object.<anonymous> (logging/user-behavior-tracker.service.spec.ts:60:35)

  ● UserBehaviorTracker › getClientIp › should get client IP from x-forwarded-for header

    Nest can't resolve dependencies of the UserBehaviorTracker (OPENOBSERVE_CONFIG, ?). Please make sure that the argument "USER_BEHAVIOR_TRANSPORT" at index [1] is available in the RootTestModule context.

    Potential solutions:
    - Is RootTestModule a valid NestJS module?
    - If "USER_BEHAVIOR_TRANSPORT" is a provider, is it part of the current RootTestModule?
    - If "USER_BEHAVIOR_TRANSPORT" is exported from a separate @Module, is that module imported within RootTestModule?
      @Module({
        imports: [ /* the Module containing "USER_BEHAVIOR_TRANSPORT" */ ]
      })

    [0m [90m 58 |[39m     } [36mas[39m [33mPartial[39m[33m<[39m[33mRequest[39m[33m>[39m[33m;[39m
     [90m 59 |[39m
    [31m[1m>[22m[39m[90m 60 |[39m     [36mconst[39m module[33m:[39m [33mTestingModule[39m [33m=[39m [36mawait[39m [33mTest[39m[33m.[39mcreateTestingModule({
     [90m    |[39m                                   [31m[1m^[22m[39m
     [90m 61 |[39m       imports[33m:[39m [[33mHttpModule[39m][33m,[39m
     [90m 62 |[39m       providers[33m:[39m [
     [90m 63 |[39m         [33mUserBehaviorTracker[39m[33m,[39m[0m

      at TestingInjector.lookupComponentInParentModules (../node_modules/@nestjs/core/injector/injector.js:286:19)
      at TestingInjector.resolveComponentWrapper (../node_modules/@nestjs/testing/testing-injector.js:19:45)
      at resolveParam (../node_modules/@nestjs/core/injector/injector.js:141:38)
          at async Promise.all (index 1)
      at TestingInjector.resolveConstructorParams (../node_modules/@nestjs/core/injector/injector.js:169:27)
      at TestingInjector.loadInstance (../node_modules/@nestjs/core/injector/injector.js:75:13)
      at TestingInjector.loadProvider (../node_modules/@nestjs/core/injector/injector.js:103:9)
      at ../node_modules/@nestjs/core/injector/instance-loader.js:56:13
          at async Promise.all (index 3)
      at TestingInstanceLoader.createInstancesOfProviders (../node_modules/@nestjs/core/injector/instance-loader.js:55:9)
      at ../node_modules/@nestjs/core/injector/instance-loader.js:40:13
          at async Promise.all (index 1)
      at TestingInstanceLoader.createInstances (../node_modules/@nestjs/core/injector/instance-loader.js:39:9)
      at TestingInstanceLoader.createInstancesOfDependencies (../node_modules/@nestjs/core/injector/instance-loader.js:22:13)
      at TestingInstanceLoader.createInstancesOfDependencies (../node_modules/@nestjs/testing/testing-instance-loader.js:9:9)
      at TestingModuleBuilder.createInstancesOfDependencies (../node_modules/@nestjs/testing/testing-module.builder.js:118:9)
      at TestingModuleBuilder.compile (../node_modules/@nestjs/testing/testing-module.builder.js:74:9)
      at Object.<anonymous> (logging/user-behavior-tracker.service.spec.ts:60:35)

  ● UserBehaviorTracker › getClientIp › should get client IP from x-real-ip header

    Nest can't resolve dependencies of the UserBehaviorTracker (OPENOBSERVE_CONFIG, ?). Please make sure that the argument "USER_BEHAVIOR_TRANSPORT" at index [1] is available in the RootTestModule context.

    Potential solutions:
    - Is RootTestModule a valid NestJS module?
    - If "USER_BEHAVIOR_TRANSPORT" is a provider, is it part of the current RootTestModule?
    - If "USER_BEHAVIOR_TRANSPORT" is exported from a separate @Module, is that module imported within RootTestModule?
      @Module({
        imports: [ /* the Module containing "USER_BEHAVIOR_TRANSPORT" */ ]
      })

    [0m [90m 58 |[39m     } [36mas[39m [33mPartial[39m[33m<[39m[33mRequest[39m[33m>[39m[33m;[39m
     [90m 59 |[39m
    [31m[1m>[22m[39m[90m 60 |[39m     [36mconst[39m module[33m:[39m [33mTestingModule[39m [33m=[39m [36mawait[39m [33mTest[39m[33m.[39mcreateTestingModule({
     [90m    |[39m                                   [31m[1m^[22m[39m
     [90m 61 |[39m       imports[33m:[39m [[33mHttpModule[39m][33m,[39m
     [90m 62 |[39m       providers[33m:[39m [
     [90m 63 |[39m         [33mUserBehaviorTracker[39m[33m,[39m[0m

      at TestingInjector.lookupComponentInParentModules (../node_modules/@nestjs/core/injector/injector.js:286:19)
      at TestingInjector.resolveComponentWrapper (../node_modules/@nestjs/testing/testing-injector.js:19:45)
      at resolveParam (../node_modules/@nestjs/core/injector/injector.js:141:38)
          at async Promise.all (index 1)
      at TestingInjector.resolveConstructorParams (../node_modules/@nestjs/core/injector/injector.js:169:27)
      at TestingInjector.loadInstance (../node_modules/@nestjs/core/injector/injector.js:75:13)
      at TestingInjector.loadProvider (../node_modules/@nestjs/core/injector/injector.js:103:9)
      at ../node_modules/@nestjs/core/injector/instance-loader.js:56:13
          at async Promise.all (index 3)
      at TestingInstanceLoader.createInstancesOfProviders (../node_modules/@nestjs/core/injector/instance-loader.js:55:9)
      at ../node_modules/@nestjs/core/injector/instance-loader.js:40:13
          at async Promise.all (index 1)
      at TestingInstanceLoader.createInstances (../node_modules/@nestjs/core/injector/instance-loader.js:39:9)
      at TestingInstanceLoader.createInstancesOfDependencies (../node_modules/@nestjs/core/injector/instance-loader.js:22:13)
      at TestingInstanceLoader.createInstancesOfDependencies (../node_modules/@nestjs/testing/testing-instance-loader.js:9:9)
      at TestingModuleBuilder.createInstancesOfDependencies (../node_modules/@nestjs/testing/testing-module.builder.js:118:9)
      at TestingModuleBuilder.compile (../node_modules/@nestjs/testing/testing-module.builder.js:74:9)
      at Object.<anonymous> (logging/user-behavior-tracker.service.spec.ts:60:35)

  ● UserBehaviorTracker › getClientIp › should return unknown when no IP headers are present

    Nest can't resolve dependencies of the UserBehaviorTracker (OPENOBSERVE_CONFIG, ?). Please make sure that the argument "USER_BEHAVIOR_TRANSPORT" at index [1] is available in the RootTestModule context.

    Potential solutions:
    - Is RootTestModule a valid NestJS module?
    - If "USER_BEHAVIOR_TRANSPORT" is a provider, is it part of the current RootTestModule?
    - If "USER_BEHAVIOR_TRANSPORT" is exported from a separate @Module, is that module imported within RootTestModule?
      @Module({
        imports: [ /* the Module containing "USER_BEHAVIOR_TRANSPORT" */ ]
      })

    [0m [90m 58 |[39m     } [36mas[39m [33mPartial[39m[33m<[39m[33mRequest[39m[33m>[39m[33m;[39m
     [90m 59 |[39m
    [31m[1m>[22m[39m[90m 60 |[39m     [36mconst[39m module[33m:[39m [33mTestingModule[39m [33m=[39m [36mawait[39m [33mTest[39m[33m.[39mcreateTestingModule({
     [90m    |[39m                                   [31m[1m^[22m[39m
     [90m 61 |[39m       imports[33m:[39m [[33mHttpModule[39m][33m,[39m
     [90m 62 |[39m       providers[33m:[39m [
     [90m 63 |[39m         [33mUserBehaviorTracker[39m[33m,[39m[0m

      at TestingInjector.lookupComponentInParentModules (../node_modules/@nestjs/core/injector/injector.js:286:19)
      at TestingInjector.resolveComponentWrapper (../node_modules/@nestjs/testing/testing-injector.js:19:45)
      at resolveParam (../node_modules/@nestjs/core/injector/injector.js:141:38)
          at async Promise.all (index 1)
      at TestingInjector.resolveConstructorParams (../node_modules/@nestjs/core/injector/injector.js:169:27)
      at TestingInjector.loadInstance (../node_modules/@nestjs/core/injector/injector.js:75:13)
      at TestingInjector.loadProvider (../node_modules/@nestjs/core/injector/injector.js:103:9)
      at ../node_modules/@nestjs/core/injector/instance-loader.js:56:13
          at async Promise.all (index 3)
      at TestingInstanceLoader.createInstancesOfProviders (../node_modules/@nestjs/core/injector/instance-loader.js:55:9)
      at ../node_modules/@nestjs/core/injector/instance-loader.js:40:13
          at async Promise.all (index 1)
      at TestingInstanceLoader.createInstances (../node_modules/@nestjs/core/injector/instance-loader.js:39:9)
      at TestingInstanceLoader.createInstancesOfDependencies (../node_modules/@nestjs/core/injector/instance-loader.js:22:13)
      at TestingInstanceLoader.createInstancesOfDependencies (../node_modules/@nestjs/testing/testing-instance-loader.js:9:9)
      at TestingModuleBuilder.createInstancesOfDependencies (../node_modules/@nestjs/testing/testing-module.builder.js:118:9)
      at TestingModuleBuilder.compile (../node_modules/@nestjs/testing/testing-module.builder.js:74:9)
      at Object.<anonymous> (logging/user-behavior-tracker.service.spec.ts:60:35)

FAIL monitoring/monitoring.service.spec.ts
  ● MonitoringService › incrementActiveConnections › should increment active connections

    TypeError: Cannot read properties of undefined (reading 'activeConnections')

    [0m [90m 166 |[39m   incrementActiveConnections() {
     [90m 167 |[39m     [36mthis[39m[33m.[39mmetricsService[33m.[39mupdateActiveConnections(
    [31m[1m>[22m[39m[90m 168 |[39m       [36mthis[39m[33m.[39mmetricsService[[32m'metrics'[39m][33m.[39mactiveConnections [33m+[39m [35m1[39m[33m,[39m
     [90m     |[39m                                      [31m[1m^[22m[39m
     [90m 169 |[39m     )[33m;[39m
     [90m 170 |[39m   }
     [90m 171 |[39m[0m

      at MonitoringService.incrementActiveConnections (monitoring/monitoring.service.ts:168:38)
      at Object.<anonymous> (monitoring/monitoring.service.spec.ts:235:15)

  ● MonitoringService › decrementActiveConnections › should decrement active connections

    TypeError: Cannot read properties of undefined (reading 'activeConnections')

    [0m [90m 172 |[39m   decrementActiveConnections() {
     [90m 173 |[39m     [36mthis[39m[33m.[39mmetricsService[33m.[39mupdateActiveConnections(
    [31m[1m>[22m[39m[90m 174 |[39m       [33mMath[39m[33m.[39mmax([35m0[39m[33m,[39m [36mthis[39m[33m.[39mmetricsService[[32m'metrics'[39m][33m.[39mactiveConnections [33m-[39m [35m1[39m)[33m,[39m
     [90m     |[39m                                                  [31m[1m^[22m[39m
     [90m 175 |[39m     )[33m;[39m
     [90m 176 |[39m   }
     [90m 177 |[39m[0m

      at MonitoringService.decrementActiveConnections (monitoring/monitoring.service.ts:174:50)
      at Object.<anonymous> (monitoring/monitoring.service.spec.ts:243:15)

  ● MonitoringService › generatePerformanceReport › should generate performance report

    expect(received).toHaveProperty(path)

    Expected path: "period"
    Received path: []

    Received value: {"message": "No metrics data available for the selected period", "status": "no_data"}

    [0m [90m 252 |[39m
     [90m 253 |[39m       expect(report)[33m.[39mtoBeDefined()[33m;[39m
    [31m[1m>[22m[39m[90m 254 |[39m       expect(report)[33m.[39mtoHaveProperty([32m'period'[39m)[33m;[39m
     [90m     |[39m                      [31m[1m^[22m[39m
     [90m 255 |[39m       expect(report)[33m.[39mtoHaveProperty([32m'generatedAt'[39m)[33m;[39m
     [90m 256 |[39m       expect(report)[33m.[39mtoHaveProperty([32m'daily'[39m)[33m;[39m
     [90m 257 |[39m       expect(report)[33m.[39mtoHaveProperty([32m'weekly'[39m)[33m;[39m[0m

      at Object.<anonymous> (monitoring/monitoring.service.spec.ts:254:22)

FAIL logging/business-logger.service.spec.ts
  ● BusinessLoggerService › should be defined

    Nest can't resolve dependencies of the BusinessLoggerService (OPENOBSERVE_CONFIG, ?). Please make sure that the argument "OPENOBSERVE_TRANSPORT" at index [1] is available in the RootTestModule context.

    Potential solutions:
    - Is RootTestModule a valid NestJS module?
    - If "OPENOBSERVE_TRANSPORT" is a provider, is it part of the current RootTestModule?
    - If "OPENOBSERVE_TRANSPORT" is exported from a separate @Module, is that module imported within RootTestModule?
      @Module({
        imports: [ /* the Module containing "OPENOBSERVE_TRANSPORT" */ ]
      })

    [0m [90m 46 |[39m     }[33m;[39m
     [90m 47 |[39m
    [31m[1m>[22m[39m[90m 48 |[39m     [36mconst[39m module[33m:[39m [33mTestingModule[39m [33m=[39m [36mawait[39m [33mTest[39m[33m.[39mcreateTestingModule({
     [90m    |[39m                                   [31m[1m^[22m[39m
     [90m 49 |[39m       imports[33m:[39m [[33mHttpModule[39m][33m,[39m
     [90m 50 |[39m       providers[33m:[39m [
     [90m 51 |[39m         [33mBusinessLoggerService[39m[33m,[39m[0m

      at TestingInjector.lookupComponentInParentModules (../node_modules/@nestjs/core/injector/injector.js:286:19)
      at TestingInjector.resolveComponentWrapper (../node_modules/@nestjs/testing/testing-injector.js:19:45)
      at resolveParam (../node_modules/@nestjs/core/injector/injector.js:141:38)
          at async Promise.all (index 1)
      at TestingInjector.resolveConstructorParams (../node_modules/@nestjs/core/injector/injector.js:169:27)
      at TestingInjector.loadInstance (../node_modules/@nestjs/core/injector/injector.js:75:13)
      at TestingInjector.loadProvider (../node_modules/@nestjs/core/injector/injector.js:103:9)
      at ../node_modules/@nestjs/core/injector/instance-loader.js:56:13
          at async Promise.all (index 3)
      at TestingInstanceLoader.createInstancesOfProviders (../node_modules/@nestjs/core/injector/instance-loader.js:55:9)
      at ../node_modules/@nestjs/core/injector/instance-loader.js:40:13
          at async Promise.all (index 1)
      at TestingInstanceLoader.createInstances (../node_modules/@nestjs/core/injector/instance-loader.js:39:9)
      at TestingInstanceLoader.createInstancesOfDependencies (../node_modules/@nestjs/core/injector/instance-loader.js:22:13)
      at TestingInstanceLoader.createInstancesOfDependencies (../node_modules/@nestjs/testing/testing-instance-loader.js:9:9)
      at TestingModuleBuilder.createInstancesOfDependencies (../node_modules/@nestjs/testing/testing-module.builder.js:118:9)
      at TestingModuleBuilder.compile (../node_modules/@nestjs/testing/testing-module.builder.js:74:9)
      at Object.<anonymous> (logging/business-logger.service.spec.ts:48:35)

  ● BusinessLoggerService › logUserAction › should log user action correctly

    Nest can't resolve dependencies of the BusinessLoggerService (OPENOBSERVE_CONFIG, ?). Please make sure that the argument "OPENOBSERVE_TRANSPORT" at index [1] is available in the RootTestModule context.

    Potential solutions:
    - Is RootTestModule a valid NestJS module?
    - If "OPENOBSERVE_TRANSPORT" is a provider, is it part of the current RootTestModule?
    - If "OPENOBSERVE_TRANSPORT" is exported from a separate @Module, is that module imported within RootTestModule?
      @Module({
        imports: [ /* the Module containing "OPENOBSERVE_TRANSPORT" */ ]
      })

    [0m [90m 46 |[39m     }[33m;[39m
     [90m 47 |[39m
    [31m[1m>[22m[39m[90m 48 |[39m     [36mconst[39m module[33m:[39m [33mTestingModule[39m [33m=[39m [36mawait[39m [33mTest[39m[33m.[39mcreateTestingModule({
     [90m    |[39m                                   [31m[1m^[22m[39m
     [90m 49 |[39m       imports[33m:[39m [[33mHttpModule[39m][33m,[39m
     [90m 50 |[39m       providers[33m:[39m [
     [90m 51 |[39m         [33mBusinessLoggerService[39m[33m,[39m[0m

      at TestingInjector.lookupComponentInParentModules (../node_modules/@nestjs/core/injector/injector.js:286:19)
      at TestingInjector.resolveComponentWrapper (../node_modules/@nestjs/testing/testing-injector.js:19:45)
      at resolveParam (../node_modules/@nestjs/core/injector/injector.js:141:38)
          at async Promise.all (index 1)
      at TestingInjector.resolveConstructorParams (../node_modules/@nestjs/core/injector/injector.js:169:27)
      at TestingInjector.loadInstance (../node_modules/@nestjs/core/injector/injector.js:75:13)
      at TestingInjector.loadProvider (../node_modules/@nestjs/core/injector/injector.js:103:9)
      at ../node_modules/@nestjs/core/injector/instance-loader.js:56:13
          at async Promise.all (index 3)
      at TestingInstanceLoader.createInstancesOfProviders (../node_modules/@nestjs/core/injector/instance-loader.js:55:9)
      at ../node_modules/@nestjs/core/injector/instance-loader.js:40:13
          at async Promise.all (index 1)
      at TestingInstanceLoader.createInstances (../node_modules/@nestjs/core/injector/instance-loader.js:39:9)
      at TestingInstanceLoader.createInstancesOfDependencies (../node_modules/@nestjs/core/injector/instance-loader.js:22:13)
      at TestingInstanceLoader.createInstancesOfDependencies (../node_modules/@nestjs/testing/testing-instance-loader.js:9:9)
      at TestingModuleBuilder.createInstancesOfDependencies (../node_modules/@nestjs/testing/testing-module.builder.js:118:9)
      at TestingModuleBuilder.compile (../node_modules/@nestjs/testing/testing-module.builder.js:74:9)
      at Object.<anonymous> (logging/business-logger.service.spec.ts:48:35)

  ● BusinessLoggerService › logOrderEvent › should log order event correctly

    Nest can't resolve dependencies of the BusinessLoggerService (OPENOBSERVE_CONFIG, ?). Please make sure that the argument "OPENOBSERVE_TRANSPORT" at index [1] is available in the RootTestModule context.

    Potential solutions:
    - Is RootTestModule a valid NestJS module?
    - If "OPENOBSERVE_TRANSPORT" is a provider, is it part of the current RootTestModule?
    - If "OPENOBSERVE_TRANSPORT" is exported from a separate @Module, is that module imported within RootTestModule?
      @Module({
        imports: [ /* the Module containing "OPENOBSERVE_TRANSPORT" */ ]
      })

    [0m [90m 46 |[39m     }[33m;[39m
     [90m 47 |[39m
    [31m[1m>[22m[39m[90m 48 |[39m     [36mconst[39m module[33m:[39m [33mTestingModule[39m [33m=[39m [36mawait[39m [33mTest[39m[33m.[39mcreateTestingModule({
     [90m    |[39m                                   [31m[1m^[22m[39m
     [90m 49 |[39m       imports[33m:[39m [[33mHttpModule[39m][33m,[39m
     [90m 50 |[39m       providers[33m:[39m [
     [90m 51 |[39m         [33mBusinessLoggerService[39m[33m,[39m[0m

      at TestingInjector.lookupComponentInParentModules (../node_modules/@nestjs/core/injector/injector.js:286:19)
      at TestingInjector.resolveComponentWrapper (../node_modules/@nestjs/testing/testing-injector.js:19:45)
      at resolveParam (../node_modules/@nestjs/core/injector/injector.js:141:38)
          at async Promise.all (index 1)
      at TestingInjector.resolveConstructorParams (../node_modules/@nestjs/core/injector/injector.js:169:27)
      at TestingInjector.loadInstance (../node_modules/@nestjs/core/injector/injector.js:75:13)
      at TestingInjector.loadProvider (../node_modules/@nestjs/core/injector/injector.js:103:9)
      at ../node_modules/@nestjs/core/injector/instance-loader.js:56:13
          at async Promise.all (index 3)
      at TestingInstanceLoader.createInstancesOfProviders (../node_modules/@nestjs/core/injector/instance-loader.js:55:9)
      at ../node_modules/@nestjs/core/injector/instance-loader.js:40:13
          at async Promise.all (index 1)
      at TestingInstanceLoader.createInstances (../node_modules/@nestjs/core/injector/instance-loader.js:39:9)
      at TestingInstanceLoader.createInstancesOfDependencies (../node_modules/@nestjs/core/injector/instance-loader.js:22:13)
      at TestingInstanceLoader.createInstancesOfDependencies (../node_modules/@nestjs/testing/testing-instance-loader.js:9:9)
      at TestingModuleBuilder.createInstancesOfDependencies (../node_modules/@nestjs/testing/testing-module.builder.js:118:9)
      at TestingModuleBuilder.compile (../node_modules/@nestjs/testing/testing-module.builder.js:74:9)
      at Object.<anonymous> (logging/business-logger.service.spec.ts:48:35)

  ● BusinessLoggerService › logPaymentEvent › should log payment event correctly

    Nest can't resolve dependencies of the BusinessLoggerService (OPENOBSERVE_CONFIG, ?). Please make sure that the argument "OPENOBSERVE_TRANSPORT" at index [1] is available in the RootTestModule context.

    Potential solutions:
    - Is RootTestModule a valid NestJS module?
    - If "OPENOBSERVE_TRANSPORT" is a provider, is it part of the current RootTestModule?
    - If "OPENOBSERVE_TRANSPORT" is exported from a separate @Module, is that module imported within RootTestModule?
      @Module({
        imports: [ /* the Module containing "OPENOBSERVE_TRANSPORT" */ ]
      })

    [0m [90m 46 |[39m     }[33m;[39m
     [90m 47 |[39m
    [31m[1m>[22m[39m[90m 48 |[39m     [36mconst[39m module[33m:[39m [33mTestingModule[39m [33m=[39m [36mawait[39m [33mTest[39m[33m.[39mcreateTestingModule({
     [90m    |[39m                                   [31m[1m^[22m[39m
     [90m 49 |[39m       imports[33m:[39m [[33mHttpModule[39m][33m,[39m
     [90m 50 |[39m       providers[33m:[39m [
     [90m 51 |[39m         [33mBusinessLoggerService[39m[33m,[39m[0m

      at TestingInjector.lookupComponentInParentModules (../node_modules/@nestjs/core/injector/injector.js:286:19)
      at TestingInjector.resolveComponentWrapper (../node_modules/@nestjs/testing/testing-injector.js:19:45)
      at resolveParam (../node_modules/@nestjs/core/injector/injector.js:141:38)
          at async Promise.all (index 1)
      at TestingInjector.resolveConstructorParams (../node_modules/@nestjs/core/injector/injector.js:169:27)
      at TestingInjector.loadInstance (../node_modules/@nestjs/core/injector/injector.js:75:13)
      at TestingInjector.loadProvider (../node_modules/@nestjs/core/injector/injector.js:103:9)
      at ../node_modules/@nestjs/core/injector/instance-loader.js:56:13
          at async Promise.all (index 3)
      at TestingInstanceLoader.createInstancesOfProviders (../node_modules/@nestjs/core/injector/instance-loader.js:55:9)
      at ../node_modules/@nestjs/core/injector/instance-loader.js:40:13
          at async Promise.all (index 1)
      at TestingInstanceLoader.createInstances (../node_modules/@nestjs/core/injector/instance-loader.js:39:9)
      at TestingInstanceLoader.createInstancesOfDependencies (../node_modules/@nestjs/core/injector/instance-loader.js:22:13)
      at TestingInstanceLoader.createInstancesOfDependencies (../node_modules/@nestjs/testing/testing-instance-loader.js:9:9)
      at TestingModuleBuilder.createInstancesOfDependencies (../node_modules/@nestjs/testing/testing-module.builder.js:118:9)
      at TestingModuleBuilder.compile (../node_modules/@nestjs/testing/testing-module.builder.js:74:9)
      at Object.<anonymous> (logging/business-logger.service.spec.ts:48:35)

  ● BusinessLoggerService › logInventoryEvent › should log inventory event correctly

    Nest can't resolve dependencies of the BusinessLoggerService (OPENOBSERVE_CONFIG, ?). Please make sure that the argument "OPENOBSERVE_TRANSPORT" at index [1] is available in the RootTestModule context.

    Potential solutions:
    - Is RootTestModule a valid NestJS module?
    - If "OPENOBSERVE_TRANSPORT" is a provider, is it part of the current RootTestModule?
    - If "OPENOBSERVE_TRANSPORT" is exported from a separate @Module, is that module imported within RootTestModule?
      @Module({
        imports: [ /* the Module containing "OPENOBSERVE_TRANSPORT" */ ]
      })

    [0m [90m 46 |[39m     }[33m;[39m
     [90m 47 |[39m
    [31m[1m>[22m[39m[90m 48 |[39m     [36mconst[39m module[33m:[39m [33mTestingModule[39m [33m=[39m [36mawait[39m [33mTest[39m[33m.[39mcreateTestingModule({
     [90m    |[39m                                   [31m[1m^[22m[39m
     [90m 49 |[39m       imports[33m:[39m [[33mHttpModule[39m][33m,[39m
     [90m 50 |[39m       providers[33m:[39m [
     [90m 51 |[39m         [33mBusinessLoggerService[39m[33m,[39m[0m

      at TestingInjector.lookupComponentInParentModules (../node_modules/@nestjs/core/injector/injector.js:286:19)
      at TestingInjector.resolveComponentWrapper (../node_modules/@nestjs/testing/testing-injector.js:19:45)
      at resolveParam (../node_modules/@nestjs/core/injector/injector.js:141:38)
          at async Promise.all (index 1)
      at TestingInjector.resolveConstructorParams (../node_modules/@nestjs/core/injector/injector.js:169:27)
      at TestingInjector.loadInstance (../node_modules/@nestjs/core/injector/injector.js:75:13)
      at TestingInjector.loadProvider (../node_modules/@nestjs/core/injector/injector.js:103:9)
      at ../node_modules/@nestjs/core/injector/instance-loader.js:56:13
          at async Promise.all (index 3)
      at TestingInstanceLoader.createInstancesOfProviders (../node_modules/@nestjs/core/injector/instance-loader.js:55:9)
      at ../node_modules/@nestjs/core/injector/instance-loader.js:40:13
          at async Promise.all (index 1)
      at TestingInstanceLoader.createInstances (../node_modules/@nestjs/core/injector/instance-loader.js:39:9)
      at TestingInstanceLoader.createInstancesOfDependencies (../node_modules/@nestjs/core/injector/instance-loader.js:22:13)
      at TestingInstanceLoader.createInstancesOfDependencies (../node_modules/@nestjs/testing/testing-instance-loader.js:9:9)
      at TestingModuleBuilder.createInstancesOfDependencies (../node_modules/@nestjs/testing/testing-module.builder.js:118:9)
      at TestingModuleBuilder.compile (../node_modules/@nestjs/testing/testing-module.builder.js:74:9)
      at Object.<anonymous> (logging/business-logger.service.spec.ts:48:35)

  ● BusinessLoggerService › logSystemEvent › should log system event correctly

    Nest can't resolve dependencies of the BusinessLoggerService (OPENOBSERVE_CONFIG, ?). Please make sure that the argument "OPENOBSERVE_TRANSPORT" at index [1] is available in the RootTestModule context.

    Potential solutions:
    - Is RootTestModule a valid NestJS module?
    - If "OPENOBSERVE_TRANSPORT" is a provider, is it part of the current RootTestModule?
    - If "OPENOBSERVE_TRANSPORT" is exported from a separate @Module, is that module imported within RootTestModule?
      @Module({
        imports: [ /* the Module containing "OPENOBSERVE_TRANSPORT" */ ]
      })

    [0m [90m 46 |[39m     }[33m;[39m
     [90m 47 |[39m
    [31m[1m>[22m[39m[90m 48 |[39m     [36mconst[39m module[33m:[39m [33mTestingModule[39m [33m=[39m [36mawait[39m [33mTest[39m[33m.[39mcreateTestingModule({
     [90m    |[39m                                   [31m[1m^[22m[39m
     [90m 49 |[39m       imports[33m:[39m [[33mHttpModule[39m][33m,[39m
     [90m 50 |[39m       providers[33m:[39m [
     [90m 51 |[39m         [33mBusinessLoggerService[39m[33m,[39m[0m

      at TestingInjector.lookupComponentInParentModules (../node_modules/@nestjs/core/injector/injector.js:286:19)
      at TestingInjector.resolveComponentWrapper (../node_modules/@nestjs/testing/testing-injector.js:19:45)
      at resolveParam (../node_modules/@nestjs/core/injector/injector.js:141:38)
          at async Promise.all (index 1)
      at TestingInjector.resolveConstructorParams (../node_modules/@nestjs/core/injector/injector.js:169:27)
      at TestingInjector.loadInstance (../node_modules/@nestjs/core/injector/injector.js:75:13)
      at TestingInjector.loadProvider (../node_modules/@nestjs/core/injector/injector.js:103:9)
      at ../node_modules/@nestjs/core/injector/instance-loader.js:56:13
          at async Promise.all (index 3)
      at TestingInstanceLoader.createInstancesOfProviders (../node_modules/@nestjs/core/injector/instance-loader.js:55:9)
      at ../node_modules/@nestjs/core/injector/instance-loader.js:40:13
          at async Promise.all (index 1)
      at TestingInstanceLoader.createInstances (../node_modules/@nestjs/core/injector/instance-loader.js:39:9)
      at TestingInstanceLoader.createInstancesOfDependencies (../node_modules/@nestjs/core/injector/instance-loader.js:22:13)
      at TestingInstanceLoader.createInstancesOfDependencies (../node_modules/@nestjs/testing/testing-instance-loader.js:9:9)
      at TestingModuleBuilder.createInstancesOfDependencies (../node_modules/@nestjs/testing/testing-module.builder.js:118:9)
      at TestingModuleBuilder.compile (../node_modules/@nestjs/testing/testing-module.builder.js:74:9)
      at Object.<anonymous> (logging/business-logger.service.spec.ts:48:35)

  ● BusinessLoggerService › logError › should log error correctly

    Nest can't resolve dependencies of the BusinessLoggerService (OPENOBSERVE_CONFIG, ?). Please make sure that the argument "OPENOBSERVE_TRANSPORT" at index [1] is available in the RootTestModule context.

    Potential solutions:
    - Is RootTestModule a valid NestJS module?
    - If "OPENOBSERVE_TRANSPORT" is a provider, is it part of the current RootTestModule?
    - If "OPENOBSERVE_TRANSPORT" is exported from a separate @Module, is that module imported within RootTestModule?
      @Module({
        imports: [ /* the Module containing "OPENOBSERVE_TRANSPORT" */ ]
      })

    [0m [90m 46 |[39m     }[33m;[39m
     [90m 47 |[39m
    [31m[1m>[22m[39m[90m 48 |[39m     [36mconst[39m module[33m:[39m [33mTestingModule[39m [33m=[39m [36mawait[39m [33mTest[39m[33m.[39mcreateTestingModule({
     [90m    |[39m                                   [31m[1m^[22m[39m
     [90m 49 |[39m       imports[33m:[39m [[33mHttpModule[39m][33m,[39m
     [90m 50 |[39m       providers[33m:[39m [
     [90m 51 |[39m         [33mBusinessLoggerService[39m[33m,[39m[0m

      at TestingInjector.lookupComponentInParentModules (../node_modules/@nestjs/core/injector/injector.js:286:19)
      at TestingInjector.resolveComponentWrapper (../node_modules/@nestjs/testing/testing-injector.js:19:45)
      at resolveParam (../node_modules/@nestjs/core/injector/injector.js:141:38)
          at async Promise.all (index 1)
      at TestingInjector.resolveConstructorParams (../node_modules/@nestjs/core/injector/injector.js:169:27)
      at TestingInjector.loadInstance (../node_modules/@nestjs/core/injector/injector.js:75:13)
      at TestingInjector.loadProvider (../node_modules/@nestjs/core/injector/injector.js:103:9)
      at ../node_modules/@nestjs/core/injector/instance-loader.js:56:13
          at async Promise.all (index 3)
      at TestingInstanceLoader.createInstancesOfProviders (../node_modules/@nestjs/core/injector/instance-loader.js:55:9)
      at ../node_modules/@nestjs/core/injector/instance-loader.js:40:13
          at async Promise.all (index 1)
      at TestingInstanceLoader.createInstances (../node_modules/@nestjs/core/injector/instance-loader.js:39:9)
      at TestingInstanceLoader.createInstancesOfDependencies (../node_modules/@nestjs/core/injector/instance-loader.js:22:13)
      at TestingInstanceLoader.createInstancesOfDependencies (../node_modules/@nestjs/testing/testing-instance-loader.js:9:9)
      at TestingModuleBuilder.createInstancesOfDependencies (../node_modules/@nestjs/testing/testing-module.builder.js:118:9)
      at TestingModuleBuilder.compile (../node_modules/@nestjs/testing/testing-module.builder.js:74:9)
      at Object.<anonymous> (logging/business-logger.service.spec.ts:48:35)

  ● BusinessLoggerService › flush › should flush logs without errors

    Nest can't resolve dependencies of the BusinessLoggerService (OPENOBSERVE_CONFIG, ?). Please make sure that the argument "OPENOBSERVE_TRANSPORT" at index [1] is available in the RootTestModule context.

    Potential solutions:
    - Is RootTestModule a valid NestJS module?
    - If "OPENOBSERVE_TRANSPORT" is a provider, is it part of the current RootTestModule?
    - If "OPENOBSERVE_TRANSPORT" is exported from a separate @Module, is that module imported within RootTestModule?
      @Module({
        imports: [ /* the Module containing "OPENOBSERVE_TRANSPORT" */ ]
      })

    [0m [90m 46 |[39m     }[33m;[39m
     [90m 47 |[39m
    [31m[1m>[22m[39m[90m 48 |[39m     [36mconst[39m module[33m:[39m [33mTestingModule[39m [33m=[39m [36mawait[39m [33mTest[39m[33m.[39mcreateTestingModule({
     [90m    |[39m                                   [31m[1m^[22m[39m
     [90m 49 |[39m       imports[33m:[39m [[33mHttpModule[39m][33m,[39m
     [90m 50 |[39m       providers[33m:[39m [
     [90m 51 |[39m         [33mBusinessLoggerService[39m[33m,[39m[0m

      at TestingInjector.lookupComponentInParentModules (../node_modules/@nestjs/core/injector/injector.js:286:19)
      at TestingInjector.resolveComponentWrapper (../node_modules/@nestjs/testing/testing-injector.js:19:45)
      at resolveParam (../node_modules/@nestjs/core/injector/injector.js:141:38)
          at async Promise.all (index 1)
      at TestingInjector.resolveConstructorParams (../node_modules/@nestjs/core/injector/injector.js:169:27)
      at TestingInjector.loadInstance (../node_modules/@nestjs/core/injector/injector.js:75:13)
      at TestingInjector.loadProvider (../node_modules/@nestjs/core/injector/injector.js:103:9)
      at ../node_modules/@nestjs/core/injector/instance-loader.js:56:13
          at async Promise.all (index 3)
      at TestingInstanceLoader.createInstancesOfProviders (../node_modules/@nestjs/core/injector/instance-loader.js:55:9)
      at ../node_modules/@nestjs/core/injector/instance-loader.js:40:13
          at async Promise.all (index 1)
      at TestingInstanceLoader.createInstances (../node_modules/@nestjs/core/injector/instance-loader.js:39:9)
      at TestingInstanceLoader.createInstancesOfDependencies (../node_modules/@nestjs/core/injector/instance-loader.js:22:13)
      at TestingInstanceLoader.createInstancesOfDependencies (../node_modules/@nestjs/testing/testing-instance-loader.js:9:9)
      at TestingModuleBuilder.createInstancesOfDependencies (../node_modules/@nestjs/testing/testing-module.builder.js:118:9)
      at TestingModuleBuilder.compile (../node_modules/@nestjs/testing/testing-module.builder.js:74:9)
      at Object.<anonymous> (logging/business-logger.service.spec.ts:48:35)

FAIL logging/log-analytics.service.spec.ts
  ● LogAnalyticsService › getLogStats › should return log stats successfully

    expect(jest.fn()).toHaveBeenCalledWith(...expected)

    - Expected
    + Received

      "http://localhost:5080/api/test-org/_search",
      {"query": "
          SELECT 
            level,
            category,
            COUNT(*) as count,
            COUNT(DISTINCT userId) as unique_users
          FROM business-events 
          WHERE timestamp >= '2023-01-01T00:00:00Z' AND timestamp <= '2023-01-02T00:00:00Z' AND level = 'INFO'
          GROUP BY level, category
          ORDER BY count DESC
        "},
      Object {
        "headers": Object {
          "Authorization": "Bearer test-token",
          "Content-Type": "application/json",
        },
    +   "timeout": 30000,
      },

    Number of calls: 1

    [0m [90m 129 |[39m       })[33m;[39m
     [90m 130 |[39m
    [31m[1m>[22m[39m[90m 131 |[39m       expect(mockHttpService[33m.[39mpost)[33m.[39mtoHaveBeenCalledWith(
     [90m     |[39m                                    [31m[1m^[22m[39m
     [90m 132 |[39m         [32m`${mockConfig.url}/api/${mockConfig.organization}/_search`[39m[33m,[39m
     [90m 133 |[39m         {
     [90m 134 |[39m           query[33m:[39m [32m`[39m[0m

      at Object.<anonymous> (logging/log-analytics.service.spec.ts:131:36)

  ● LogAnalyticsService › getLogStats › should throw error when request fails

    expect(received).rejects.toThrow(expected)

    Expected substring: "No response received from OpenObserve"
    Received message:   "Cannot read properties of null (reading 'hits')"

        [0m [90m 272 |[39m   [36mprivate[39m formatStatsResult(data[33m:[39m any)[33m:[39m [33mLogStatsResult[39m {
         [90m 273 |[39m     [36mreturn[39m {
        [31m[1m>[22m[39m[90m 274 |[39m       total[33m:[39m data[33m.[39mhits[33m?[39m[33m.[39mtotal[33m?[39m[33m.[39mvalue [33m||[39m [35m0[39m[33m,[39m
         [90m     |[39m                   [31m[1m^[22m[39m
         [90m 275 |[39m       stats[33m:[39m data[33m.[39mhits[33m?[39m[33m.[39mhits[33m?[39m[33m.[39mmap((hit[33m:[39m any) [33m=>[39m hit[33m.[39m_source) [33m||[39m [][33m,[39m
         [90m 276 |[39m       aggregations[33m:[39m data[33m.[39maggregations [33m||[39m {}[33m,[39m
         [90m 277 |[39m     }[33m;[39m[0m

      at LogAnalyticsService.formatStatsResult (logging/log-analytics.service.ts:274:19)
      at LogAnalyticsService.getLogStats (logging/log-analytics.service.ts:44:19)
      at Object.<anonymous> (logging/log-analytics.service.spec.ts:160:7)
      at Object.toThrow (../node_modules/expect/build/index.js:2155:20)
      at Object.<anonymous> (logging/log-analytics.service.spec.ts:160:60)

  ● LogAnalyticsService › getUserBehaviorAnalytics › should return user behavior analytics successfully

    expect(jest.fn()).toHaveBeenCalledWith(...expected)

    - Expected
    + Received

      "http://localhost:5080/api/test-org/_search",
      {"query": "
          SELECT 
            eventType,
            COUNT(*) as count,
            COUNT(DISTINCT sessionId) as unique_sessions,
            COUNT(DISTINCT userId) as unique_users
          FROM user-behavior 
          WHERE timestamp >= '2023-01-01T00:00:00Z' AND timestamp <= '2023-01-02T00:00:00Z' AND userId = 'user123'
          GROUP BY eventType
          ORDER BY count DESC
        "},
      Object {
        "headers": Object {
          "Authorization": "Bearer test-token",
          "Content-Type": "application/json",
        },
    +   "timeout": 30000,
      },

    Number of calls: 1

    [0m [90m 217 |[39m       })[33m;[39m
     [90m 218 |[39m
    [31m[1m>[22m[39m[90m 219 |[39m       expect(mockHttpService[33m.[39mpost)[33m.[39mtoHaveBeenCalledWith(
     [90m     |[39m                                    [31m[1m^[22m[39m
     [90m 220 |[39m         [32m`${mockConfig.url}/api/${mockConfig.organization}/_search`[39m[33m,[39m
     [90m 221 |[39m         {
     [90m 222 |[39m           query[33m:[39m [32m`[39m[0m

      at Object.<anonymous> (logging/log-analytics.service.spec.ts:219:36)

  ● LogAnalyticsService › detectAnomalousPatterns › should return anomaly detection results successfully

    expect(jest.fn()).toHaveBeenCalledWith(...expected)

    - Expected
    + Received

      "http://localhost:5080/api/test-org/_search",
      {"query": "
          SELECT 
            level,
            category,
            action,
            COUNT(*) as count,
            COUNT(*) / (SELECT COUNT(*) FROM business-events WHERE timestamp >= '2023-01-01T00:00:00Z' AND timestamp <= '2023-01-02T00:00:00Z') as percentage
          FROM business-events 
          WHERE timestamp >= '2023-01-01T00:00:00Z' AND timestamp <= '2023-01-02T00:00:00Z' AND level = 'ERROR'
          GROUP BY level, category, action
          HAVING percentage > 0.05  -- 超过5%的错误率视为异常
          ORDER BY percentage DESC
        "},
      Object {
        "headers": Object {
          "Authorization": "Bearer test-token",
          "Content-Type": "application/json",
        },
    +   "timeout": 30000,
      },

    Number of calls: 1

    [0m [90m 300 |[39m       })[33m;[39m
     [90m 301 |[39m
    [31m[1m>[22m[39m[90m 302 |[39m       expect(mockHttpService[33m.[39mpost)[33m.[39mtoHaveBeenCalledWith(
     [90m     |[39m                                    [31m[1m^[22m[39m
     [90m 303 |[39m         [32m`${mockConfig.url}/api/${mockConfig.organization}/_search`[39m[33m,[39m
     [90m 304 |[39m         {
     [90m 305 |[39m           query[33m:[39m [32m`[39m[0m

      at Object.<anonymous> (logging/log-analytics.service.spec.ts:302:36)

  ● LogAnalyticsService › getPopularPages › should return popular pages successfully

    expect(jest.fn()).toHaveBeenCalledWith(...expected)

    - Expected
    + Received

      "http://localhost:5080/api/test-org/_search",
      {"query": "
          SELECT eventData.page as page,
                 COUNT(*) as view_count,
                 COUNT(DISTINCT userId) as unique_users
          FROM user-behavior
          WHERE eventType = 'PAGE_VIEW' 
            AND timestamp >= '2023-01-01T00:00:00Z' 
            AND timestamp <= '2023-01-02T00:00:00Z'
          GROUP BY page
          ORDER BY view_count DESC
          LIMIT 5
        "},
      Object {
        "headers": Object {
          "Authorization": "Bearer test-token",
          "Content-Type": "application/json",
        },
    +   "timeout": 30000,
      },

    Number of calls: 1

    [0m [90m 372 |[39m       ])[33m;[39m
     [90m 373 |[39m
    [31m[1m>[22m[39m[90m 374 |[39m       expect(mockHttpService[33m.[39mpost)[33m.[39mtoHaveBeenCalledWith(
     [90m     |[39m                                    [31m[1m^[22m[39m
     [90m 375 |[39m         [32m`${mockConfig.url}/api/${mockConfig.organization}/_search`[39m[33m,[39m
     [90m 376 |[39m         {
     [90m 377 |[39m           query[33m:[39m [32m`[39m[0m

      at Object.<anonymous> (logging/log-analytics.service.spec.ts:374:36)

  ● LogAnalyticsService › getConversionFunnel › should return conversion funnel successfully

    expect(jest.fn()).toHaveBeenCalledWith(...expected)

    - Expected
    + Received

      "http://localhost:5080/api/test-org/_search",
      {"query": "
          SELECT eventType,
                 COUNT(DISTINCT userId) as user_count
          FROM user-behavior
          WHERE eventType IN ('PRODUCT_VIEW', 'CART_ADD', 'CHECKOUT', 'PURCHASE')
            AND timestamp >= '2023-01-01T00:00:00Z' 
            AND timestamp <= '2023-01-02T00:00:00Z'
          GROUP BY eventType
          ORDER BY 
            CASE eventType 
              WHEN 'PRODUCT_VIEW' THEN 1
              WHEN 'CART_ADD' THEN 2
              WHEN 'CHECKOUT' THEN 3
              WHEN 'PURCHASE' THEN 4
            END
        "},
      Object {
        "headers": Object {
          "Authorization": "Bearer test-token",
          "Content-Type": "application/json",
        },
    +   "timeout": 30000,
      },

    Number of calls: 1

    [0m [90m 458 |[39m       ])[33m;[39m
     [90m 459 |[39m
    [31m[1m>[22m[39m[90m 460 |[39m       expect(mockHttpService[33m.[39mpost)[33m.[39mtoHaveBeenCalledWith(
     [90m     |[39m                                    [31m[1m^[22m[39m
     [90m 461 |[39m         [32m`${mockConfig.url}/api/${mockConfig.organization}/_search`[39m[33m,[39m
     [90m 462 |[39m         {
     [90m 463 |[39m           query[33m:[39m [32m`[39m[0m

      at Object.<anonymous> (logging/log-analytics.service.spec.ts:460:36)

FAIL common/filters/global-exception.filter.spec.ts
  ● GlobalExceptionFilter › catch › should categorize errors correctly

    expect(jest.fn()).toHaveBeenCalledWith(...expected)

    Expected: ObjectContaining {"category": "business"}
    Received: {"category": "validation", "errorCode": "40401001", "message": "Test error", "requestId": undefined, "success": false, "timestamp": "2021-01-01T00:00:00.000Z"}

    Number of calls: 1

    [0m [90m 160 |[39m         [36mconst[39m exception [33m=[39m [36mnew[39m [33mHttpException[39m([32m'Test error'[39m[33m,[39m status)[33m;[39m
     [90m 161 |[39m         filter[33m.[39m[36mcatch[39m(exception[33m,[39m mockArgumentsHost)[33m;[39m
    [31m[1m>[22m[39m[90m 162 |[39m         expect(mockResponse[33m.[39mjson)[33m.[39mtoHaveBeenCalledWith(
     [90m     |[39m                                   [31m[1m^[22m[39m
     [90m 163 |[39m           expect[33m.[39mobjectContaining({
     [90m 164 |[39m             category[33m:[39m expectedCategory[33m,[39m
     [90m 165 |[39m           })[33m,[39m[0m

      at common/filters/global-exception.filter.spec.ts:162:35
          at Array.forEach (<anonymous>)
      at Object.<anonymous> (common/filters/global-exception.filter.spec.ts:159:17)

FAIL cqrs/bus/query.bus.spec.ts
  ● Test suite failed to run

    [96msrc/cqrs/bus/query.bus.spec.ts[0m:[93m21[0m:[93m5[0m - [91merror[0m[90m TS2322: [0mType '{ handle: jest.MockInstance<Promise<{ success: boolean; data: any; fromCache: boolean; }>, [], any>; getName: jest.MockInstance<string, [], any>; }' is not assignable to type 'IQueryHandler<IQuery<any>, any>'.
      Types of property 'handle' are incompatible.
        Type 'MockInstance<Promise<{ success: boolean; data: any; fromCache: boolean; }>, [], any>' is not assignable to type '(query: IQuery<any>) => Promise<IQueryResult<any>>'.
          Type 'MockInstance<Promise<{ success: boolean; data: any; fromCache: boolean; }>, [], any>' provides no match for the signature '(query: IQuery<any>): Promise<IQueryResult<any>>'.

    [7m21[0m     mockHandler = TestMocker.mockQueryHandler();
    [7m  [0m [91m    ~~~~~~~~~~~[0m
    [96msrc/cqrs/bus/query.bus.spec.ts[0m:[93m32[0m:[93m45[0m - [91merror[0m[90m TS2345: [0mArgument of type '(key: string, value: any, ttl?: number) => Promise<string>' is not assignable to parameter of type '(key: string, value: any, ttl?: number | undefined) => Promise<boolean>'.
      Type 'Promise<string>' is not assignable to type 'Promise<boolean>'.
        Type 'string' is not assignable to type 'boolean'.

    [7m32[0m     mockCacheService.set.mockImplementation(async (key: string, value: any, ttl?: number) => {
    [7m  [0m [91m                                            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~[0m
    [96msrc/cqrs/bus/query.bus.spec.ts[0m:[93m37[0m:[93m48[0m - [91merror[0m[90m TS2345: [0mArgument of type '(key: string) => Promise<number>' is not assignable to parameter of type '(key: string) => Promise<boolean>'.
      Type 'Promise<number>' is not assignable to type 'Promise<boolean>'.
        Type 'number' is not assignable to type 'boolean'.

    [7m37[0m     mockCacheService.delete.mockImplementation(async (key: string) => {
    [7m  [0m [91m                                               ~~~~~~~~~~~~~~~~~~~~~~~~[0m
    [96msrc/cqrs/bus/query.bus.spec.ts[0m:[93m43[0m:[93m54[0m - [91merror[0m[90m TS2345: [0mArgument of type '(pattern: string) => Promise<void>' is not assignable to parameter of type '(pattern: string) => Promise<number>'.
      Type 'Promise<void>' is not assignable to type 'Promise<number>'.
        Type 'void' is not assignable to type 'number'.

    [7m43[0m     mockCacheService.clearPattern.mockImplementation(async (pattern: string) => {
    [7m  [0m [91m                                                     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~[0m
    [96msrc/cqrs/bus/query.bus.spec.ts[0m:[93m54[0m:[93m28[0m - [91merror[0m[90m TS2345: [0mArgument of type '{ get: jest.MockInstance<Promise<any>, [key: string], any>; set: jest.MockInstance<Promise<boolean>, [key: string, value: any, ttl?: number | undefined], any>; del: jest.MockInstance<...>; delete: jest.MockInstance<...>; exists: jest.MockInstance<...>; clearPattern: jest.MockInstance<...>; clear: jest.MockInstance<....' is not assignable to parameter of type 'IQueryCache'.
      Types of property 'get' are incompatible.
        Type 'MockInstance<Promise<any>, [key: string], any>' is not assignable to type '<T>(key: string) => Promise<T | null>'.
          Type 'MockInstance<Promise<any>, [key: string], any>' provides no match for the signature '<T>(key: string): Promise<T | null>'.

    [7m54[0m     queryBus.setQueryCache(mockCacheService);
    [7m  [0m [91m                           ~~~~~~~~~~~~~~~~[0m
    [96msrc/cqrs/bus/query.bus.spec.ts[0m:[93m195[0m:[93m36[0m - [91merror[0m[90m TS2345: [0mArgument of type '{ handle: jest.MockInstance<Promise<{ success: boolean; data: any; fromCache: boolean; }>, [], any>; getName: jest.MockInstance<string, [], any>; }' is not assignable to parameter of type 'IQueryHandler<IQuery<any>, any>'.
      Types of property 'handle' are incompatible.
        Type 'MockInstance<Promise<{ success: boolean; data: any; fromCache: boolean; }>, [], any>' is not assignable to type '(query: IQuery<any>) => Promise<IQueryResult<any>>'.
          Type 'MockInstance<Promise<{ success: boolean; data: any; fromCache: boolean; }>, [], any>' provides no match for the signature '(query: IQuery<any>): Promise<IQueryResult<any>>'.

    [7m195[0m       queryBus.register(queryType, secondHandler);
    [7m   [0m [91m                                   ~~~~~~~~~~~~~[0m
    [96msrc/cqrs/bus/query.bus.spec.ts[0m:[93m209[0m:[93m30[0m - [91merror[0m[90m TS2345: [0mArgument of type '{ get: jest.MockInstance<Promise<any>, [key: string], any>; set: jest.MockInstance<Promise<boolean>, [key: string, value: any, ttl?: number | undefined], any>; del: jest.MockInstance<...>; delete: jest.MockInstance<...>; exists: jest.MockInstance<...>; clearPattern: jest.MockInstance<...>; clear: jest.MockInstance<....' is not assignable to parameter of type 'IQueryCache'.
      Types of property 'get' are incompatible.
        Type 'MockInstance<Promise<any>, [key: string], any>' is not assignable to type '<T>(key: string) => Promise<T | null>'.
          Type 'MockInstance<Promise<any>, [key: string], any>' provides no match for the signature '<T>(key: string): Promise<T | null>'.

    [7m209[0m       queryBus.setQueryCache(cacheService);
    [7m   [0m [91m                             ~~~~~~~~~~~~[0m

FAIL cqrs/bus/event.bus.spec.ts
  ● Test suite failed to run

    [96msrc/cqrs/bus/event.bus.spec.ts[0m:[93m21[0m:[93m5[0m - [91merror[0m[90m TS2322: [0mType '{ handle: jest.MockInstance<Promise<{ success: boolean; }>, [], any>; getName: jest.MockInstance<string, [], any>; getEventType: jest.MockInstance<string, [], any>; }' is not assignable to type 'IEventHandler<IEvent>'.
      Types of property 'handle' are incompatible.
        Type 'MockInstance<Promise<{ success: boolean; }>, [], any>' is not assignable to type '(event: IEvent) => Promise<IEventHandlerResult>'.
          Type 'MockInstance<Promise<{ success: boolean; }>, [], any>' provides no match for the signature '(event: IEvent): Promise<IEventHandlerResult>'.

    [7m21[0m     mockHandler = TestMocker.mockEventHandler();
    [7m  [0m [91m    ~~~~~~~~~~~[0m
    [96msrc/cqrs/bus/event.bus.spec.ts[0m:[93m95[0m:[93m41[0m - [91merror[0m[90m TS2345: [0mArgument of type '{ handle: jest.MockInstance<Promise<{ success: boolean; }>, [], any>; getName: jest.MockInstance<string, [], any>; getEventType: jest.MockInstance<string, [], any>; }' is not assignable to parameter of type 'IEventHandler<IEvent>'.
      Types of property 'handle' are incompatible.
        Type 'MockInstance<Promise<{ success: boolean; }>, [], any>' is not assignable to type '(event: IEvent) => Promise<IEventHandlerResult>'.
          Type 'MockInstance<Promise<{ success: boolean; }>, [], any>' provides no match for the signature '(event: IEvent): Promise<IEventHandlerResult>'.

    [7m95[0m       eventBus.register('user-created', firstHandler);
    [7m  [0m [91m                                        ~~~~~~~~~~~~[0m
    [96msrc/cqrs/bus/event.bus.spec.ts[0m:[93m96[0m:[93m41[0m - [91merror[0m[90m TS2345: [0mArgument of type '{ handle: jest.MockInstance<Promise<{ success: boolean; }>, [], any>; getName: jest.MockInstance<string, [], any>; getEventType: jest.MockInstance<string, [], any>; }' is not assignable to parameter of type 'IEventHandler<IEvent>'.
      Types of property 'handle' are incompatible.
        Type 'MockInstance<Promise<{ success: boolean; }>, [], any>' is not assignable to type '(event: IEvent) => Promise<IEventHandlerResult>'.
          Type 'MockInstance<Promise<{ success: boolean; }>, [], any>' provides no match for the signature '(event: IEvent): Promise<IEventHandlerResult>'.

    [7m96[0m       eventBus.register('user-created', secondHandler);
    [7m  [0m [91m                                        ~~~~~~~~~~~~~[0m
    [96msrc/cqrs/bus/event.bus.spec.ts[0m:[93m133[0m:[93m36[0m - [91merror[0m[90m TS2345: [0mArgument of type '{ handle: jest.MockInstance<Promise<{ success: boolean; }>, [], any>; getName: jest.MockInstance<string, [], any>; getEventType: jest.MockInstance<string, [], any>; }' is not assignable to parameter of type 'IEventHandler<IEvent>'.
      Types of property 'handle' are incompatible.
        Type 'MockInstance<Promise<{ success: boolean; }>, [], any>' is not assignable to type '(event: IEvent) => Promise<IEventHandlerResult>'.
          Type 'MockInstance<Promise<{ success: boolean; }>, [], any>' provides no match for the signature '(event: IEvent): Promise<IEventHandlerResult>'.

    [7m133[0m       eventBus.register(eventType, secondHandler);
    [7m   [0m [91m                                   ~~~~~~~~~~~~~[0m
    [96msrc/cqrs/bus/event.bus.spec.ts[0m:[93m149[0m:[93m36[0m - [91merror[0m[90m TS2345: [0mArgument of type '{ handle: jest.MockInstance<Promise<{ success: boolean; }>, [], any>; getName: jest.MockInstance<string, [], any>; getEventType: jest.MockInstance<string, [], any>; }' is not assignable to parameter of type 'IEventHandler<IEvent>'.
      Types of property 'handle' are incompatible.
        Type 'MockInstance<Promise<{ success: boolean; }>, [], any>' is not assignable to type '(event: IEvent) => Promise<IEventHandlerResult>'.
          Type 'MockInstance<Promise<{ success: boolean; }>, [], any>' provides no match for the signature '(event: IEvent): Promise<IEventHandlerResult>'.

    [7m149[0m       eventBus.register(eventType, secondHandler);
    [7m   [0m [91m                                   ~~~~~~~~~~~~~[0m

FAIL cqrs/bus/command.bus.spec.ts
  ● Test suite failed to run

    [96msrc/cqrs/bus/command.bus.spec.ts[0m:[93m28[0m:[93m42[0m - [91merror[0m[90m TS2345: [0mArgument of type 'Mock<ICommandHandler<ICommand>, any, any>' is not assignable to parameter of type 'ICommandHandler<ICommand>'.
      Type 'Mock<ICommandHandler<ICommand>, any, any>' is missing the following properties from type 'ICommandHandler<ICommand>': handle, getName

    [7m28[0m       commandBus.register('TestCommand', mockHandler);
    [7m  [0m [91m                                         ~~~~~~~~~~~[0m

      [96msrc/cqrs/bus/command.bus.spec.ts[0m:[93m28[0m:[93m42[0m
        [7m28[0m       commandBus.register('TestCommand', mockHandler);
        [7m  [0m [96m                                         ~~~~~~~~~~~[0m
        Did you mean to use 'new' with this expression?
    [96msrc/cqrs/bus/command.bus.spec.ts[0m:[93m35[0m:[93m26[0m - [91merror[0m[90m TS2339: [0mProperty 'handle' does not exist on type 'Mock<ICommandHandler<ICommand>, any, any>'.

    [7m35[0m       expect(mockHandler.handle).toHaveBeenCalledWith(command);
    [7m  [0m [91m                         ~~~~~~[0m
    [96msrc/cqrs/bus/command.bus.spec.ts[0m:[93m53[0m:[93m19[0m - [91merror[0m[90m TS2339: [0mProperty 'handle' does not exist on type 'Mock<ICommandHandler<ICommand>, any, any>'.

    [7m53[0m       mockHandler.handle.mockRejectedValue(error);
    [7m  [0m [91m                  ~~~~~~[0m
    [96msrc/cqrs/bus/command.bus.spec.ts[0m:[93m55[0m:[93m42[0m - [91merror[0m[90m TS2345: [0mArgument of type 'Mock<ICommandHandler<ICommand>, any, any>' is not assignable to parameter of type 'ICommandHandler<ICommand>'.
      Type 'Mock<ICommandHandler<ICommand>, any, any>' is missing the following properties from type 'ICommandHandler<ICommand>': handle, getName

    [7m55[0m       commandBus.register('TestCommand', mockHandler);
    [7m  [0m [91m                                         ~~~~~~~~~~~[0m

      [96msrc/cqrs/bus/command.bus.spec.ts[0m:[93m55[0m:[93m42[0m
        [7m55[0m       commandBus.register('TestCommand', mockHandler);
        [7m  [0m [96m                                         ~~~~~~~~~~~[0m
        Did you mean to use 'new' with this expression?
    [96msrc/cqrs/bus/command.bus.spec.ts[0m:[93m69[0m:[93m42[0m - [91merror[0m[90m TS2345: [0mArgument of type 'Mock<ICommandHandler<ICommand>, any, any>' is not assignable to parameter of type 'ICommandHandler<ICommand>'.
      Type 'Mock<ICommandHandler<ICommand>, any, any>' is missing the following properties from type 'ICommandHandler<ICommand>': handle, getName

    [7m69[0m       commandBus.register('TestCommand', mockHandler);
    [7m  [0m [91m                                         ~~~~~~~~~~~[0m

      [96msrc/cqrs/bus/command.bus.spec.ts[0m:[93m69[0m:[93m42[0m
        [7m69[0m       commandBus.register('TestCommand', mockHandler);
        [7m  [0m [96m                                         ~~~~~~~~~~~[0m
        Did you mean to use 'new' with this expression?
    [96msrc/cqrs/bus/command.bus.spec.ts[0m:[93m83[0m:[93m42[0m - [91merror[0m[90m TS2345: [0mArgument of type 'Mock<ICommandHandler<ICommand>, any, any>' is not assignable to parameter of type 'ICommandHandler<ICommand>'.
      Type 'Mock<ICommandHandler<ICommand>, any, any>' is missing the following properties from type 'ICommandHandler<ICommand>': handle, getName

    [7m83[0m       commandBus.register('TestCommand', mockHandler);
    [7m  [0m [91m                                         ~~~~~~~~~~~[0m

      [96msrc/cqrs/bus/command.bus.spec.ts[0m:[93m83[0m:[93m42[0m
        [7m83[0m       commandBus.register('TestCommand', mockHandler);
        [7m  [0m [96m                                         ~~~~~~~~~~~[0m
        Did you mean to use 'new' with this expression?
    [96msrc/cqrs/bus/command.bus.spec.ts[0m:[93m100[0m:[93m42[0m - [91merror[0m[90m TS2345: [0mArgument of type 'Mock<ICommandHandler<ICommand>, any, any>' is not assignable to parameter of type 'ICommandHandler<ICommand>'.
      Type 'Mock<ICommandHandler<ICommand>, any, any>' is missing the following properties from type 'ICommandHandler<ICommand>': handle, getName

    [7m100[0m       commandBus.register('TestCommand', mockHandler);
    [7m   [0m [91m                                         ~~~~~~~~~~~[0m

      [96msrc/cqrs/bus/command.bus.spec.ts[0m:[93m100[0m:[93m42[0m
        [7m100[0m       commandBus.register('TestCommand', mockHandler);
        [7m   [0m [96m                                         ~~~~~~~~~~~[0m
        Did you mean to use 'new' with this expression?
    [96msrc/cqrs/bus/command.bus.spec.ts[0m:[93m130[0m:[93m40[0m - [91merror[0m[90m TS2345: [0mArgument of type 'Mock<ICommandHandler<ICommand>, any, any>' is not assignable to parameter of type 'ICommandHandler<ICommand>'.
      Type 'Mock<ICommandHandler<ICommand>, any, any>' is missing the following properties from type 'ICommandHandler<ICommand>': handle, getName

    [7m130[0m       commandBus.register(commandType, handler);
    [7m   [0m [91m                                       ~~~~~~~[0m

      [96msrc/cqrs/bus/command.bus.spec.ts[0m:[93m130[0m:[93m40[0m
        [7m130[0m       commandBus.register(commandType, handler);
        [7m   [0m [96m                                       ~~~~~~~[0m
        Did you mean to use 'new' with this expression?
    [96msrc/cqrs/bus/command.bus.spec.ts[0m:[93m144[0m:[93m40[0m - [91merror[0m[90m TS2345: [0mArgument of type 'Mock<ICommandHandler<ICommand>, any, any>' is not assignable to parameter of type 'ICommandHandler<ICommand>'.
      Type 'Mock<ICommandHandler<ICommand>, any, any>' is missing the following properties from type 'ICommandHandler<ICommand>': handle, getName

    [7m144[0m       commandBus.register(commandType, firstHandler);
    [7m   [0m [91m                                       ~~~~~~~~~~~~[0m

      [96msrc/cqrs/bus/command.bus.spec.ts[0m:[93m144[0m:[93m40[0m
        [7m144[0m       commandBus.register(commandType, firstHandler);
        [7m   [0m [96m                                       ~~~~~~~~~~~~[0m
        Did you mean to use 'new' with this expression?
    [96msrc/cqrs/bus/command.bus.spec.ts[0m:[93m145[0m:[93m40[0m - [91merror[0m[90m TS2345: [0mArgument of type 'Mock<ICommandHandler<ICommand>, any, any>' is not assignable to parameter of type 'ICommandHandler<ICommand>'.
      Type 'Mock<ICommandHandler<ICommand>, any, any>' is missing the following properties from type 'ICommandHandler<ICommand>': handle, getName

    [7m145[0m       commandBus.register(commandType, secondHandler);
    [7m   [0m [91m                                       ~~~~~~~~~~~~~[0m

      [96msrc/cqrs/bus/command.bus.spec.ts[0m:[93m145[0m:[93m40[0m
        [7m145[0m       commandBus.register(commandType, secondHandler);
        [7m   [0m [96m                                       ~~~~~~~~~~~~~[0m
        Did you mean to use 'new' with this expression?
    [96msrc/cqrs/bus/command.bus.spec.ts[0m:[93m159[0m:[93m32[0m - [91merror[0m[90m TS2345: [0mArgument of type '{ name: string; execute: jest.MockInstance<Promise<any>, [command: any, next: () => Promise<any>], any>; }' is not assignable to parameter of type 'ICommandMiddleware'.
      Types of property 'execute' are incompatible.
        Type 'MockInstance<Promise<any>, [command: any, next: () => Promise<any>], any>' is not assignable to type '<TCommand extends ICommand>(command: TCommand, next: () => Promise<ICommandResult<any>>) => Promise<ICommandResult<any>>'.
          Type 'MockInstance<Promise<any>, [command: any, next: () => Promise<any>], any>' provides no match for the signature '<TCommand extends ICommand>(command: TCommand, next: () => Promise<ICommandResult<any>>): Promise<ICommandResult<any>>'.

    [7m159[0m       commandBus.addMiddleware(middleware);
    [7m   [0m [91m                               ~~~~~~~~~~[0m
    [96msrc/cqrs/bus/command.bus.spec.ts[0m:[93m171[0m:[93m32[0m - [91merror[0m[90m TS2345: [0mArgument of type '{ name: string; execute: jest.MockInstance<Promise<any>, [command: any, next: () => Promise<any>], any>; }' is not assignable to parameter of type 'ICommandMiddleware'.
      Types of property 'execute' are incompatible.
        Type 'MockInstance<Promise<any>, [command: any, next: () => Promise<any>], any>' is not assignable to type '<TCommand extends ICommand>(command: TCommand, next: () => Promise<ICommandResult<any>>) => Promise<ICommandResult<any>>'.
          Type 'MockInstance<Promise<any>, [command: any, next: () => Promise<any>], any>' provides no match for the signature '<TCommand extends ICommand>(command: TCommand, next: () => Promise<ICommandResult<any>>): Promise<ICommandResult<any>>'.

    [7m171[0m       commandBus.addMiddleware(middleware);
    [7m   [0m [91m                               ~~~~~~~~~~[0m
    [96msrc/cqrs/bus/command.bus.spec.ts[0m:[93m186[0m:[93m42[0m - [91merror[0m[90m TS2345: [0mArgument of type 'Mock<ICommandHandler<ICommand>, any, any>' is not assignable to parameter of type 'ICommandHandler<ICommand>'.
      Type 'Mock<ICommandHandler<ICommand>, any, any>' is missing the following properties from type 'ICommandHandler<ICommand>': handle, getName

    [7m186[0m       commandBus.register('TestCommand', mockHandler);
    [7m   [0m [91m                                         ~~~~~~~~~~~[0m

      [96msrc/cqrs/bus/command.bus.spec.ts[0m:[93m186[0m:[93m42[0m
        [7m186[0m       commandBus.register('TestCommand', mockHandler);
        [7m   [0m [96m                                         ~~~~~~~~~~~[0m
        Did you mean to use 'new' with this expression?
    [96msrc/cqrs/bus/command.bus.spec.ts[0m:[93m223[0m:[93m35[0m - [91merror[0m[90m TS2345: [0mArgument of type 'Mock<ICommandHandler<ICommand>, any, any>' is not assignable to parameter of type 'ICommandHandler<ICommand>'.
      Type 'Mock<ICommandHandler<ICommand>, any, any>' is missing the following properties from type 'ICommandHandler<ICommand>': handle, getName

    [7m223[0m         commandBus.register(type, mockHandler);
    [7m   [0m [91m                                  ~~~~~~~~~~~[0m

      [96msrc/cqrs/bus/command.bus.spec.ts[0m:[93m223[0m:[93m35[0m
        [7m223[0m         commandBus.register(type, mockHandler);
        [7m   [0m [96m                                  ~~~~~~~~~~~[0m
        Did you mean to use 'new' with this expression?
    [96msrc/cqrs/bus/command.bus.spec.ts[0m:[93m241[0m:[93m32[0m - [91merror[0m[90m TS2345: [0mArgument of type '{ name: string; execute: jest.MockInstance<Promise<any>, [command: any, next: () => Promise<any>], any>; }' is not assignable to parameter of type 'ICommandMiddleware'.
      Types of property 'execute' are incompatible.
        Type 'MockInstance<Promise<any>, [command: any, next: () => Promise<any>], any>' is not assignable to type '<TCommand extends ICommand>(command: TCommand, next: () => Promise<ICommandResult<any>>) => Promise<ICommandResult<any>>'.
          Type 'MockInstance<Promise<any>, [command: any, next: () => Promise<any>], any>' provides no match for the signature '<TCommand extends ICommand>(command: TCommand, next: () => Promise<ICommandResult<any>>): Promise<ICommandResult<any>>'.

    [7m241[0m       commandBus.addMiddleware(middleware1);
    [7m   [0m [91m                               ~~~~~~~~~~~[0m
    [96msrc/cqrs/bus/command.bus.spec.ts[0m:[93m242[0m:[93m32[0m - [91merror[0m[90m TS2345: [0mArgument of type '{ name: string; execute: jest.MockInstance<Promise<any>, [command: any, next: () => Promise<any>], any>; }' is not assignable to parameter of type 'ICommandMiddleware'.
      Types of property 'execute' are incompatible.
        Type 'MockInstance<Promise<any>, [command: any, next: () => Promise<any>], any>' is not assignable to type '<TCommand extends ICommand>(command: TCommand, next: () => Promise<ICommandResult<any>>) => Promise<ICommandResult<any>>'.
          Type 'MockInstance<Promise<any>, [command: any, next: () => Promise<any>], any>' provides no match for the signature '<TCommand extends ICommand>(command: TCommand, next: () => Promise<ICommandResult<any>>): Promise<ICommandResult<any>>'.

    [7m242[0m       commandBus.addMiddleware(middleware2);
    [7m   [0m [91m                               ~~~~~~~~~~~[0m
    [96msrc/cqrs/bus/command.bus.spec.ts[0m:[93m259[0m:[93m42[0m - [91merror[0m[90m TS2345: [0mArgument of type 'Mock<ICommandHandler<ICommand>, any, any>' is not assignable to parameter of type 'ICommandHandler<ICommand>'.
      Type 'Mock<ICommandHandler<ICommand>, any, any>' is missing the following properties from type 'ICommandHandler<ICommand>': handle, getName

    [7m259[0m       commandBus.register('TestCommand', mockHandler);
    [7m   [0m [91m                                         ~~~~~~~~~~~[0m

      [96msrc/cqrs/bus/command.bus.spec.ts[0m:[93m259[0m:[93m42[0m
        [7m259[0m       commandBus.register('TestCommand', mockHandler);
        [7m   [0m [96m                                         ~~~~~~~~~~~[0m
        Did you mean to use 'new' with this expression?

FAIL products/products.service.spec.ts
  ● Test suite failed to run

    [96msrc/products/products.service.spec.ts[0m:[93m263[0m:[93m56[0m - [91merror[0m[90m TS2345: [0mArgument of type '{ id: number; name: string; description: string; isActive: boolean; sortOrder: number; createdAt: Date; updatedAt: Date; }' is not assignable to parameter of type 'Category | Promise<Category | null> | null'.
      Type '{ id: number; name: string; description: string; isActive: boolean; sortOrder: number; createdAt: Date; updatedAt: Date; }' is missing the following properties from type 'Category': slug, icon, children, parent, products

    [7m263[0m       mockCategoryRepository.findOne.mockResolvedValue(mockCategory);
    [7m   [0m [91m                                                       ~~~~~~~~~~~~[0m
    [96msrc/products/products.service.spec.ts[0m:[93m264[0m:[93m52[0m - [91merror[0m[90m TS2345: [0mArgument of type '{ id: number; name: string; description: string; price: number; originalPrice: number; stock: number; views: number; sales: number; isActive: boolean; publishedAt: Date; tags: string[]; specifications: { ...; }; category: { ...; }; images: never[]; createdAt: Date; updatedAt: Date; }' is not assignable to parameter of type 'Product'.
      Type '{ id: number; name: string; description: string; price: number; originalPrice: number; stock: number; views: number; sales: number; isActive: boolean; publishedAt: Date; tags: string[]; specifications: { ...; }; category: { ...; }; images: never[]; createdAt: Date; updatedAt: Date; }' is missing the following properties from type 'Product': favorites, mainImage, version

    [7m264[0m       mockProductRepository.create.mockReturnValue(mockProduct);
    [7m   [0m [91m                                                   ~~~~~~~~~~~[0m
    [96msrc/products/products.service.spec.ts[0m:[93m265[0m:[93m52[0m - [91merror[0m[90m TS2345: [0mArgument of type '{ id: number; name: string; description: string; price: number; originalPrice: number; stock: number; views: number; sales: number; isActive: boolean; publishedAt: Date; tags: string[]; specifications: { ...; }; category: { ...; }; images: never[]; createdAt: Date; updatedAt: Date; }' is not assignable to parameter of type 'Product | Promise<Product>'.
      Type '{ id: number; name: string; description: string; price: number; originalPrice: number; stock: number; views: number; sales: number; isActive: boolean; publishedAt: Date; tags: string[]; specifications: { ...; }; category: { ...; }; images: never[]; createdAt: Date; updatedAt: Date; }' is missing the following properties from type 'Product': favorites, mainImage, version

    [7m265[0m       mockProductRepository.save.mockResolvedValue(mockProduct);
    [7m   [0m [91m                                                   ~~~~~~~~~~~[0m
    [96msrc/products/products.service.spec.ts[0m:[93m297[0m:[93m56[0m - [91merror[0m[90m TS2345: [0mArgument of type '{ id: number; name: string; description: string; isActive: boolean; sortOrder: number; createdAt: Date; updatedAt: Date; }' is not assignable to parameter of type 'Category | Promise<Category | null> | null'.
      Type '{ id: number; name: string; description: string; isActive: boolean; sortOrder: number; createdAt: Date; updatedAt: Date; }' is missing the following properties from type 'Category': slug, icon, children, parent, products

    [7m297[0m       mockCategoryRepository.findOne.mockResolvedValue(mockCategory);
    [7m   [0m [91m                                                       ~~~~~~~~~~~~[0m
    [96msrc/products/products.service.spec.ts[0m:[93m298[0m:[93m52[0m - [91merror[0m[90m TS2345: [0mArgument of type '{ id: number; name: string; description: string; price: number; originalPrice: number; stock: number; views: number; sales: number; isActive: boolean; publishedAt: Date; tags: string[]; specifications: { ...; }; category: { ...; }; images: never[]; createdAt: Date; updatedAt: Date; }' is not assignable to parameter of type 'Product'.
      Type '{ id: number; name: string; description: string; price: number; originalPrice: number; stock: number; views: number; sales: number; isActive: boolean; publishedAt: Date; tags: string[]; specifications: { ...; }; category: { ...; }; images: never[]; createdAt: Date; updatedAt: Date; }' is missing the following properties from type 'Product': favorites, mainImage, version

    [7m298[0m       mockProductRepository.create.mockReturnValue(mockProduct);
    [7m   [0m [91m                                                   ~~~~~~~~~~~[0m
    [96msrc/products/products.service.spec.ts[0m:[93m299[0m:[93m52[0m - [91merror[0m[90m TS2345: [0mArgument of type '{ id: number; name: string; description: string; price: number; originalPrice: number; stock: number; views: number; sales: number; isActive: boolean; publishedAt: Date; tags: string[]; specifications: { ...; }; category: { ...; }; images: never[]; createdAt: Date; updatedAt: Date; }' is not assignable to parameter of type 'Product | Promise<Product>'.
      Type '{ id: number; name: string; description: string; price: number; originalPrice: number; stock: number; views: number; sales: number; isActive: boolean; publishedAt: Date; tags: string[]; specifications: { ...; }; category: { ...; }; images: never[]; createdAt: Date; updatedAt: Date; }' is missing the following properties from type 'Product': favorites, mainImage, version

    [7m299[0m       mockProductRepository.save.mockResolvedValue(mockProduct);
    [7m   [0m [91m                                                   ~~~~~~~~~~~[0m
    [96msrc/products/products.service.spec.ts[0m:[93m311[0m:[93m56[0m - [91merror[0m[90m TS2345: [0mArgument of type '{ id: number; name: string; description: string; isActive: boolean; sortOrder: number; createdAt: Date; updatedAt: Date; }' is not assignable to parameter of type 'Category | Promise<Category | null> | null'.
      Type '{ id: number; name: string; description: string; isActive: boolean; sortOrder: number; createdAt: Date; updatedAt: Date; }' is missing the following properties from type 'Category': slug, icon, children, parent, products

    [7m311[0m       mockCategoryRepository.findOne.mockResolvedValue(mockCategory);
    [7m   [0m [91m                                                       ~~~~~~~~~~~~[0m
    [96msrc/products/products.service.spec.ts[0m:[93m312[0m:[93m52[0m - [91merror[0m[90m TS2345: [0mArgument of type '{ id: number; name: string; description: string; price: number; originalPrice: number; stock: number; views: number; sales: number; isActive: boolean; publishedAt: Date; tags: string[]; specifications: { ...; }; category: { ...; }; images: never[]; createdAt: Date; updatedAt: Date; }' is not assignable to parameter of type 'Product'.
      Type '{ id: number; name: string; description: string; price: number; originalPrice: number; stock: number; views: number; sales: number; isActive: boolean; publishedAt: Date; tags: string[]; specifications: { ...; }; category: { ...; }; images: never[]; createdAt: Date; updatedAt: Date; }' is missing the following properties from type 'Product': favorites, mainImage, version

    [7m312[0m       mockProductRepository.create.mockReturnValue(mockProduct);
    [7m   [0m [91m                                                   ~~~~~~~~~~~[0m
    [96msrc/products/products.service.spec.ts[0m:[93m313[0m:[93m52[0m - [91merror[0m[90m TS2345: [0mArgument of type '{ id: number; name: string; description: string; price: number; originalPrice: number; stock: number; views: number; sales: number; isActive: boolean; publishedAt: Date; tags: string[]; specifications: { ...; }; category: { ...; }; images: never[]; createdAt: Date; updatedAt: Date; }' is not assignable to parameter of type 'Product | Promise<Product>'.
      Type '{ id: number; name: string; description: string; price: number; originalPrice: number; stock: number; views: number; sales: number; isActive: boolean; publishedAt: Date; tags: string[]; specifications: { ...; }; category: { ...; }; images: never[]; createdAt: Date; updatedAt: Date; }' is missing the following properties from type 'Product': favorites, mainImage, version

    [7m313[0m       mockProductRepository.save.mockResolvedValue(mockProduct);
    [7m   [0m [91m                                                   ~~~~~~~~~~~[0m
    [96msrc/products/products.service.spec.ts[0m:[93m340[0m:[93m55[0m - [91merror[0m[90m TS2345: [0mArgument of type '{ id: number; name: string; description: string; price: number; originalPrice: number; stock: number; views: number; sales: number; isActive: boolean; publishedAt: Date; tags: string[]; specifications: { ...; }; category: { ...; }; images: never[]; createdAt: Date; updatedAt: Date; }' is not assignable to parameter of type 'Product | Promise<Product | null> | null'.
      Type '{ id: number; name: string; description: string; price: number; originalPrice: number; stock: number; views: number; sales: number; isActive: boolean; publishedAt: Date; tags: string[]; specifications: { ...; }; category: { ...; }; images: never[]; createdAt: Date; updatedAt: Date; }' is missing the following properties from type 'Product': favorites, mainImage, version

    [7m340[0m       mockProductRepository.findOne.mockResolvedValue(mockProduct);
    [7m   [0m [91m                                                      ~~~~~~~~~~~[0m
    [96msrc/products/products.service.spec.ts[0m:[93m394[0m:[93m53[0m - [91merror[0m[90m TS2739: [0mType '{ id: number; name: string; description: string; price: number; originalPrice: number; stock: number; views: number; sales: number; isActive: boolean; publishedAt: Date; tags: string[]; specifications: { ...; }; category: { ...; }; images: never[]; createdAt: Date; updatedAt: Date; }' is missing the following properties from type 'Product': favorites, mainImage, version

    [7m394[0m       mockProductRepository.find.mockResolvedValue([mockProduct]);
    [7m   [0m [91m                                                    ~~~~~~~~~~~[0m
    [96msrc/products/products.service.spec.ts[0m:[93m502[0m:[93m53[0m - [91merror[0m[90m TS2739: [0mType '{ id: number; name: string; description: string; price: number; originalPrice: number; stock: number; views: number; sales: number; isActive: boolean; publishedAt: Date; tags: string[]; specifications: { ...; }; category: { ...; }; images: never[]; createdAt: Date; updatedAt: Date; }' is missing the following properties from type 'Product': favorites, mainImage, version

    [7m502[0m       mockProductRepository.find.mockResolvedValue([mockProduct]);
    [7m   [0m [91m                                                    ~~~~~~~~~~~[0m
    [96msrc/products/products.service.spec.ts[0m:[93m535[0m:[93m55[0m - [91merror[0m[90m TS2345: [0mArgument of type '{ id: number; name: string; description: string; price: number; originalPrice: number; stock: number; views: number; sales: number; isActive: boolean; publishedAt: Date; tags: string[]; specifications: { ...; }; category: { ...; }; images: never[]; createdAt: Date; updatedAt: Date; }' is not assignable to parameter of type 'Product | Promise<Product | null> | null'.
      Type '{ id: number; name: string; description: string; price: number; originalPrice: number; stock: number; views: number; sales: number; isActive: boolean; publishedAt: Date; tags: string[]; specifications: { ...; }; category: { ...; }; images: never[]; createdAt: Date; updatedAt: Date; }' is missing the following properties from type 'Product': favorites, mainImage, version

    [7m535[0m       mockProductRepository.findOne.mockResolvedValue(mockProduct);
    [7m   [0m [91m                                                      ~~~~~~~~~~~[0m
    [96msrc/products/products.service.spec.ts[0m:[93m536[0m:[93m56[0m - [91merror[0m[90m TS2345: [0mArgument of type '{ id: number; name: string; description: string; isActive: boolean; sortOrder: number; createdAt: Date; updatedAt: Date; }' is not assignable to parameter of type 'Category | Promise<Category | null> | null'.
      Type '{ id: number; name: string; description: string; isActive: boolean; sortOrder: number; createdAt: Date; updatedAt: Date; }' is missing the following properties from type 'Category': slug, icon, children, parent, products

    [7m536[0m       mockCategoryRepository.findOne.mockResolvedValue(mockCategory);
    [7m   [0m [91m                                                       ~~~~~~~~~~~~[0m
    [96msrc/products/products.service.spec.ts[0m:[93m544[0m:[93m56[0m - [91merror[0m[90m TS2345: [0mArgument of type '() => { id: number; name: string; description: string; price: number; originalPrice: number; stock: number; views: number; sales: number; isActive: boolean; publishedAt: Date; tags: string[]; specifications: { ...; }; category: { ...; }; images: never[]; createdAt: Date; updatedAt: Date; }' is not assignable to parameter of type '(options: any) => Promise<Product | null>'.
      Type '{ id: number; name: string; description: string; price: number; originalPrice: number; stock: number; views: number; sales: number; isActive: boolean; publishedAt: Date; tags: string[]; specifications: { ...; }; category: { ...; }; images: never[]; createdAt: Date; updatedAt: Date; }' is missing the following properties from type 'Promise<Product | null>': then, catch, finally, [Symbol.toStringTag]

    [7m544[0m       mockProductRepository.findOne.mockImplementation(() => {
    [7m   [0m [91m                                                       ~~~~~~~[0m
    [96msrc/products/products.service.spec.ts[0m:[93m572[0m:[93m59[0m - [91merror[0m[90m TS2345: [0mArgument of type '{ id: number; name: string; description: string; price: number; originalPrice: number; stock: number; views: number; sales: number; isActive: boolean; publishedAt: Date; tags: string[]; specifications: { ...; }; category: { ...; }; images: never[]; createdAt: Date; updatedAt: Date; }' is not assignable to parameter of type 'Product | Promise<Product | null> | null'.
      Type '{ id: number; name: string; description: string; price: number; originalPrice: number; stock: number; views: number; sales: number; isActive: boolean; publishedAt: Date; tags: string[]; specifications: { ...; }; category: { ...; }; images: never[]; createdAt: Date; updatedAt: Date; }' is missing the following properties from type 'Product': favorites, mainImage, version

    [7m572[0m       mockProductRepository.findOne.mockResolvedValueOnce(mockProduct);
    [7m   [0m [91m                                                          ~~~~~~~~~~~[0m
    [96msrc/products/products.service.spec.ts[0m:[93m588[0m:[93m55[0m - [91merror[0m[90m TS2345: [0mArgument of type '{ id: number; name: string; description: string; price: number; originalPrice: number; stock: number; views: number; sales: number; isActive: boolean; publishedAt: Date; tags: string[]; specifications: { ...; }; category: { ...; }; images: never[]; createdAt: Date; updatedAt: Date; }' is not assignable to parameter of type 'Product | Promise<Product | null> | null'.
      Type '{ id: number; name: string; description: string; price: number; originalPrice: number; stock: number; views: number; sales: number; isActive: boolean; publishedAt: Date; tags: string[]; specifications: { ...; }; category: { ...; }; images: never[]; createdAt: Date; updatedAt: Date; }' is missing the following properties from type 'Product': favorites, mainImage, version

    [7m588[0m       mockProductRepository.findOne.mockResolvedValue(mockProduct);
    [7m   [0m [91m                                                      ~~~~~~~~~~~[0m
    [96msrc/products/products.service.spec.ts[0m:[93m626[0m:[93m55[0m - [91merror[0m[90m TS2345: [0mArgument of type '{ id: number; name: string; description: string; price: number; originalPrice: number; stock: number; views: number; sales: number; isActive: boolean; publishedAt: Date; tags: string[]; specifications: { ...; }; category: { ...; }; images: never[]; createdAt: Date; updatedAt: Date; }' is not assignable to parameter of type 'Product | Promise<Product | null> | null'.
      Type '{ id: number; name: string; description: string; price: number; originalPrice: number; stock: number; views: number; sales: number; isActive: boolean; publishedAt: Date; tags: string[]; specifications: { ...; }; category: { ...; }; images: never[]; createdAt: Date; updatedAt: Date; }' is missing the following properties from type 'Product': favorites, mainImage, version

    [7m626[0m       mockProductRepository.findOne.mockResolvedValue(mockProduct);
    [7m   [0m [91m                                                      ~~~~~~~~~~~[0m
    [96msrc/products/products.service.spec.ts[0m:[93m798[0m:[93m54[0m - [91merror[0m[90m TS2739: [0mType '{ id: number; name: string; description: string; isActive: boolean; sortOrder: number; createdAt: Date; updatedAt: Date; }' is missing the following properties from type 'Category': slug, icon, children, parent, products

    [7m798[0m       mockCategoryRepository.find.mockResolvedValue([mockCategory]);
    [7m   [0m [91m                                                     ~~~~~~~~~~~~[0m
    [96msrc/products/products.service.spec.ts[0m:[93m823[0m:[93m53[0m - [91merror[0m[90m TS2739: [0mType '{ id: number; name: string; description: string; price: number; originalPrice: number; stock: number; views: number; sales: number; isActive: boolean; publishedAt: Date; tags: string[]; specifications: { ...; }; category: { ...; }; images: never[]; createdAt: Date; updatedAt: Date; }' is missing the following properties from type 'Product': favorites, mainImage, version

    [7m823[0m       mockProductRepository.find.mockResolvedValue([mockProduct]);
    [7m   [0m [91m                                                    ~~~~~~~~~~~[0m
    [96msrc/products/products.service.spec.ts[0m:[93m863[0m:[93m60[0m - [91merror[0m[90m TS2345: [0mArgument of type '{ status: string; uptime: number; }' is not assignable to parameter of type '{ healthy: boolean; } | Promise<{ healthy: boolean; }>'.

    [7m863[0m       mockSearchManagerService.getStatus.mockResolvedValue(status);
    [7m   [0m [91m                                                           ~~~~~~[0m
    [96msrc/products/products.service.spec.ts[0m:[93m881[0m:[93m56[0m - [91merror[0m[90m TS2345: [0mArgument of type '{ id: number; name: string; description: string; isActive: boolean; sortOrder: number; createdAt: Date; updatedAt: Date; }' is not assignable to parameter of type 'Category | Promise<Category | null> | null'.
      Type '{ id: number; name: string; description: string; isActive: boolean; sortOrder: number; createdAt: Date; updatedAt: Date; }' is missing the following properties from type 'Category': slug, icon, children, parent, products

    [7m881[0m       mockCategoryRepository.findOne.mockResolvedValue(mockCategory);
    [7m   [0m [91m                                                       ~~~~~~~~~~~~[0m
    [96msrc/products/products.service.spec.ts[0m:[93m882[0m:[93m52[0m - [91merror[0m[90m TS2345: [0mArgument of type '{ id: number; name: string; description: string; price: number; originalPrice: number; stock: number; views: number; sales: number; isActive: boolean; publishedAt: Date; tags: string[]; specifications: { ...; }; category: { ...; }; images: never[]; createdAt: Date; updatedAt: Date; }' is not assignable to parameter of type 'Product'.
      Type '{ id: number; name: string; description: string; price: number; originalPrice: number; stock: number; views: number; sales: number; isActive: boolean; publishedAt: Date; tags: string[]; specifications: { ...; }; category: { ...; }; images: never[]; createdAt: Date; updatedAt: Date; }' is missing the following properties from type 'Product': favorites, mainImage, version

    [7m882[0m       mockProductRepository.create.mockReturnValue(mockProduct);
    [7m   [0m [91m                                                   ~~~~~~~~~~~[0m
    [96msrc/products/products.service.spec.ts[0m:[93m883[0m:[93m52[0m - [91merror[0m[90m TS2345: [0mArgument of type '{ id: number; name: string; description: string; price: number; originalPrice: number; stock: number; views: number; sales: number; isActive: boolean; publishedAt: Date; tags: string[]; specifications: { ...; }; category: { ...; }; images: never[]; createdAt: Date; updatedAt: Date; }' is not assignable to parameter of type 'Product | Promise<Product>'.
      Type '{ id: number; name: string; description: string; price: number; originalPrice: number; stock: number; views: number; sales: number; isActive: boolean; publishedAt: Date; tags: string[]; specifications: { ...; }; category: { ...; }; images: never[]; createdAt: Date; updatedAt: Date; }' is missing the following properties from type 'Product': favorites, mainImage, version

    [7m883[0m       mockProductRepository.save.mockResolvedValue(mockProduct);
    [7m   [0m [91m                                                   ~~~~~~~~~~~[0m
    [96msrc/products/products.service.spec.ts[0m:[93m900[0m:[93m55[0m - [91merror[0m[90m TS2345: [0mArgument of type '{ id: number; name: string; description: string; price: number; originalPrice: number; stock: number; views: number; sales: number; isActive: boolean; publishedAt: Date; tags: string[]; specifications: { ...; }; category: { ...; }; images: never[]; createdAt: Date; updatedAt: Date; }' is not assignable to parameter of type 'Product | Promise<Product | null> | null'.
      Type '{ id: number; name: string; description: string; price: number; originalPrice: number; stock: number; views: number; sales: number; isActive: boolean; publishedAt: Date; tags: string[]; specifications: { ...; }; category: { ...; }; images: never[]; createdAt: Date; updatedAt: Date; }' is missing the following properties from type 'Product': favorites, mainImage, version

    [7m900[0m       mockProductRepository.findOne.mockResolvedValue(mockProduct);
    [7m   [0m [91m                                                      ~~~~~~~~~~~[0m
    [96msrc/products/products.service.spec.ts[0m:[93m907[0m:[93m55[0m - [91merror[0m[90m TS2345: [0mArgument of type '{ id: number; name: string; description: string; price: number; originalPrice: number; stock: number; views: number; sales: number; isActive: boolean; publishedAt: Date; tags: string[]; specifications: { ...; }; category: { ...; }; images: never[]; createdAt: Date; updatedAt: Date; }' is not assignable to parameter of type 'Product | Promise<Product | null> | null'.
      Type '{ id: number; name: string; description: string; price: number; originalPrice: number; stock: number; views: number; sales: number; isActive: boolean; publishedAt: Date; tags: string[]; specifications: { ...; }; category: { ...; }; images: never[]; createdAt: Date; updatedAt: Date; }' is missing the following properties from type 'Product': favorites, mainImage, version

    [7m907[0m       mockProductRepository.findOne.mockResolvedValue(mockProduct);
    [7m   [0m [91m                                                      ~~~~~~~~~~~[0m
    [96msrc/products/products.service.spec.ts[0m:[93m908[0m:[93m56[0m - [91merror[0m[90m TS2345: [0mArgument of type '{ id: number; name: string; description: string; isActive: boolean; sortOrder: number; createdAt: Date; updatedAt: Date; }' is not assignable to parameter of type 'Category | Promise<Category | null> | null'.
      Type '{ id: number; name: string; description: string; isActive: boolean; sortOrder: number; createdAt: Date; updatedAt: Date; }' is missing the following properties from type 'Category': slug, icon, children, parent, products

    [7m908[0m       mockCategoryRepository.findOne.mockResolvedValue(mockCategory);
    [7m   [0m [91m                                                       ~~~~~~~~~~~~[0m
    [96msrc/products/products.service.spec.ts[0m:[93m917[0m:[93m55[0m - [91merror[0m[90m TS2345: [0mArgument of type '{ id: number; name: string; description: string; price: number; originalPrice: number; stock: number; views: number; sales: number; isActive: boolean; publishedAt: Date; tags: string[]; specifications: { ...; }; category: { ...; }; images: never[]; createdAt: Date; updatedAt: Date; }' is not assignable to parameter of type 'Product | Promise<Product | null> | null'.
      Type '{ id: number; name: string; description: string; price: number; originalPrice: number; stock: number; views: number; sales: number; isActive: boolean; publishedAt: Date; tags: string[]; specifications: { ...; }; category: { ...; }; images: never[]; createdAt: Date; updatedAt: Date; }' is missing the following properties from type 'Product': favorites, mainImage, version

    [7m917[0m       mockProductRepository.findOne.mockResolvedValue(mockProduct);
    [7m   [0m [91m                                                      ~~~~~~~~~~~[0m
    [96msrc/products/products.service.spec.ts[0m:[93m925[0m:[93m56[0m - [91merror[0m[90m TS2345: [0mArgument of type '{ id: number; name: string; description: string; isActive: boolean; sortOrder: number; createdAt: Date; updatedAt: Date; }' is not assignable to parameter of type 'Category | Promise<Category | null> | null'.
      Type '{ id: number; name: string; description: string; isActive: boolean; sortOrder: number; createdAt: Date; updatedAt: Date; }' is missing the following properties from type 'Category': slug, icon, children, parent, products

    [7m925[0m       mockCategoryRepository.findOne.mockResolvedValue(mockCategory);
    [7m   [0m [91m                                                       ~~~~~~~~~~~~[0m
    [96msrc/products/products.service.spec.ts[0m:[93m926[0m:[93m52[0m - [91merror[0m[90m TS2345: [0mArgument of type '{ id: number; name: string; description: string; price: number; originalPrice: number; stock: number; views: number; sales: number; isActive: boolean; publishedAt: Date; tags: string[]; specifications: { ...; }; category: { ...; }; images: never[]; createdAt: Date; updatedAt: Date; }' is not assignable to parameter of type 'Product'.
      Type '{ id: number; name: string; description: string; price: number; originalPrice: number; stock: number; views: number; sales: number; isActive: boolean; publishedAt: Date; tags: string[]; specifications: { ...; }; category: { ...; }; images: never[]; createdAt: Date; updatedAt: Date; }' is missing the following properties from type 'Product': favorites, mainImage, version

    [7m926[0m       mockProductRepository.create.mockReturnValue(mockProduct);
    [7m   [0m [91m                                                   ~~~~~~~~~~~[0m
    [96msrc/products/products.service.spec.ts[0m:[93m927[0m:[93m52[0m - [91merror[0m[90m TS2345: [0mArgument of type '{ id: number; name: string; description: string; price: number; originalPrice: number; stock: number; views: number; sales: number; isActive: boolean; publishedAt: Date; tags: string[]; specifications: { ...; }; category: { ...; }; images: never[]; createdAt: Date; updatedAt: Date; }' is not assignable to parameter of type 'Product | Promise<Product>'.
      Type '{ id: number; name: string; description: string; price: number; originalPrice: number; stock: number; views: number; sales: number; isActive: boolean; publishedAt: Date; tags: string[]; specifications: { ...; }; category: { ...; }; images: never[]; createdAt: Date; updatedAt: Date; }' is missing the following properties from type 'Product': favorites, mainImage, version

    [7m927[0m       mockProductRepository.save.mockResolvedValue(mockProduct);
    [7m   [0m [91m                                                   ~~~~~~~~~~~[0m
    [96msrc/products/products.service.spec.ts[0m:[93m952[0m:[93m55[0m - [91merror[0m[90m TS2345: [0mArgument of type '{ id: number; name: string; description: string; price: number; originalPrice: number; stock: number; views: number; sales: number; isActive: boolean; publishedAt: Date; tags: string[]; specifications: { ...; }; category: { ...; }; images: never[]; createdAt: Date; updatedAt: Date; }' is not assignable to parameter of type 'Product | Promise<Product | null> | null'.
      Type '{ id: number; name: string; description: string; price: number; originalPrice: number; stock: number; views: number; sales: number; isActive: boolean; publishedAt: Date; tags: string[]; specifications: { ...; }; category: { ...; }; images: never[]; createdAt: Date; updatedAt: Date; }' is missing the following properties from type 'Product': favorites, mainImage, version

    [7m952[0m       mockProductRepository.findOne.mockResolvedValue(mockProduct);
    [7m   [0m [91m                                                      ~~~~~~~~~~~[0m
    [96msrc/products/products.service.spec.ts[0m:[93m1010[0m:[93m55[0m - [91merror[0m[90m TS2345: [0mArgument of type '{ id: number; name: string; description: string; price: number; originalPrice: number; stock: number; views: number; sales: number; isActive: boolean; publishedAt: Date; tags: string[]; specifications: { ...; }; category: { ...; }; images: never[]; createdAt: Date; updatedAt: Date; }' is not assignable to parameter of type 'Product | Promise<Product | null> | null'.
      Type '{ id: number; name: string; description: string; price: number; originalPrice: number; stock: number; views: number; sales: number; isActive: boolean; publishedAt: Date; tags: string[]; specifications: { ...; }; category: { ...; }; images: never[]; createdAt: Date; updatedAt: Date; }' is missing the following properties from type 'Product': favorites, mainImage, version

    [7m1010[0m       mockProductRepository.findOne.mockResolvedValue(mockProduct);
    [7m    [0m [91m                                                      ~~~~~~~~~~~[0m
    [96msrc/products/products.service.spec.ts[0m:[93m1023[0m:[93m55[0m - [91merror[0m[90m TS2345: [0mArgument of type '{ id: number; name: string; description: string; price: number; originalPrice: number; stock: number; views: number; sales: number; isActive: boolean; publishedAt: Date; tags: string[]; specifications: { ...; }; category: { ...; }; images: never[]; createdAt: Date; updatedAt: Date; }' is not assignable to parameter of type 'Product | Promise<Product | null> | null'.
      Type '{ id: number; name: string; description: string; price: number; originalPrice: number; stock: number; views: number; sales: number; isActive: boolean; publishedAt: Date; tags: string[]; specifications: { ...; }; category: { ...; }; images: never[]; createdAt: Date; updatedAt: Date; }' is missing the following properties from type 'Product': favorites, mainImage, version

    [7m1023[0m       mockProductRepository.findOne.mockResolvedValue(mockProduct);
    [7m    [0m [91m                                                      ~~~~~~~~~~~[0m

FAIL cqrs/cqrs.module.integration.spec.ts
  ● Test suite failed to run

    [96msrc/cqrs/cqrs.module.integration.spec.ts[0m:[93m139[0m:[93m32[0m - [91merror[0m[90m TS2345: [0mArgument of type '{ name: string; execute: jest.MockInstance<Promise<any>, [command: any, next: () => Promise<any>], any>; }' is not assignable to parameter of type 'ICommandMiddleware'.
      Types of property 'execute' are incompatible.
        Type 'MockInstance<Promise<any>, [command: any, next: () => Promise<any>], any>' is not assignable to type '<TCommand extends ICommand>(command: TCommand, next: () => Promise<ICommandResult<any>>) => Promise<ICommandResult<any>>'.
          Type 'MockInstance<Promise<any>, [command: any, next: () => Promise<any>], any>' provides no match for the signature '<TCommand extends ICommand>(command: TCommand, next: () => Promise<ICommandResult<any>>): Promise<ICommandResult<any>>'.

    [7m139[0m       commandBus.addMiddleware(middleware1);
    [7m   [0m [91m                               ~~~~~~~~~~~[0m
    [96msrc/cqrs/cqrs.module.integration.spec.ts[0m:[93m140[0m:[93m32[0m - [91merror[0m[90m TS2345: [0mArgument of type '{ name: string; execute: jest.MockInstance<Promise<any>, [command: any, next: () => Promise<any>], any>; }' is not assignable to parameter of type 'ICommandMiddleware'.
      Types of property 'execute' are incompatible.
        Type 'MockInstance<Promise<any>, [command: any, next: () => Promise<any>], any>' is not assignable to type '<TCommand extends ICommand>(command: TCommand, next: () => Promise<ICommandResult<any>>) => Promise<ICommandResult<any>>'.
          Type 'MockInstance<Promise<any>, [command: any, next: () => Promise<any>], any>' provides no match for the signature '<TCommand extends ICommand>(command: TCommand, next: () => Promise<ICommandResult<any>>): Promise<ICommandResult<any>>'.

    [7m140[0m       commandBus.addMiddleware(middleware2);
    [7m   [0m [91m                               ~~~~~~~~~~~[0m


Test Suites: 18 failed, 24 passed, 42 total
Tests:       69 failed, 681 passed, 750 total
Snapshots:   0 total
Time:        130.66 s
Ran all test suites matching .*\.(spec|test)\.ts$|src/logging/user-behavior-tracker.service.spec.ts.

Jest has detected the following 3 open handles potentially keeping Jest from exiting:

  ●  bound-anonymous-fn,finish

    [0m [90m 24 |[39m     
     [90m 25 |[39m     [36mtry[39m {
    [31m[1m>[22m[39m[90m 26 |[39m       [36mconst[39m response [33m=[39m [36mawait[39m firstValueFrom(
     [90m    |[39m                                            [31m[1m^[22m[39m
     [90m 27 |[39m         [36mthis[39m[33m.[39mhttpService[33m.[39mpost(
     [90m 28 |[39m           [32m`${this.config.url}/api/${this.config.organization}/_search`[39m[33m,[39m
     [90m 29 |[39m           { query }[33m,[39m[0m

      at RedirectableRequest._performRequest (../node_modules/follow-redirects/index.js:337:24)
      at new RedirectableRequest (../node_modules/follow-redirects/index.js:111:8)
      at Object.request (../node_modules/follow-redirects/index.js:543:14)
      at dispatchHttpRequest (../node_modules/axios/lib/adapters/http.js:482:21)
      at ../node_modules/axios/lib/adapters/http.js:155:5
      at wrapAsync (../node_modules/axios/lib/adapters/http.js:135:10)
      at http (../node_modules/axios/lib/adapters/http.js:173:10)
      at Axios.dispatchRequest (../node_modules/axios/lib/core/dispatchRequest.js:51:10)
      at Axios._request (../node_modules/axios/lib/core/Axios.js:185:33)
      at Axios.request (../node_modules/axios/lib/core/Axios.js:40:25)
      at Axios.httpMethod [as post] (../node_modules/axios/lib/core/Axios.js:224:19)
      at wrap (../node_modules/axios/lib/helpers/bind.js:5:15)
      at Observable._subscribe (../node_modules/@nestjs/axios/dist/http.service.js:71:13)
      at Observable._trySubscribe (../node_modules/rxjs/src/internal/Observable.ts:235:19)
      at ../node_modules/rxjs/src/internal/Observable.ts:225:18
      at Object.errorContext (../node_modules/rxjs/src/internal/util/errorContext.ts:29:5)
      at Observable.subscribe (../node_modules/rxjs/src/internal/Observable.ts:211:5)
      at ../node_modules/rxjs/src/internal/firstValueFrom.ts:73:12
      at firstValueFrom (../node_modules/rxjs/src/internal/firstValueFrom.ts:58:10)
      at LogAnalyticsService.getLogStats (logging/log-analytics.service.ts:26:44)
      at LoggingController.getLogStats (logging/logging.controller.ts:312:50)
      at Object.<anonymous> (logging/logging.integration.spec.ts:272:46)


  ●  bound-anonymous-fn,finish

    [0m [90m 75 |[39m     
     [90m 76 |[39m     [36mtry[39m {
    [31m[1m>[22m[39m[90m 77 |[39m       [36mawait[39m axios[33m.[39mpost([36mthis[39m[33m.[39mendpoint[33m,[39m batch[33m,[39m {
     [90m    |[39m                   [31m[1m^[22m[39m
     [90m 78 |[39m         headers[33m:[39m {
     [90m 79 |[39m           [32m'Content-Type'[39m[33m:[39m [32m'application/json'[39m[33m,[39m
     [90m 80 |[39m           [32m'Authorization'[39m[33m:[39m [32m`Bearer ${this.options.token}`[39m[0m

      at RedirectableRequest._performRequest (../node_modules/follow-redirects/index.js:337:24)
      at new RedirectableRequest (../node_modules/follow-redirects/index.js:111:8)
      at Object.request (../node_modules/follow-redirects/index.js:543:14)
      at dispatchHttpRequest (../node_modules/axios/lib/adapters/http.js:482:21)
      at ../node_modules/axios/lib/adapters/http.js:155:5
      at wrapAsync (../node_modules/axios/lib/adapters/http.js:135:10)
      at http (../node_modules/axios/lib/adapters/http.js:173:10)
      at Axios.dispatchRequest (../node_modules/axios/lib/core/dispatchRequest.js:51:10)
      at Axios._request (../node_modules/axios/lib/core/Axios.js:185:33)
      at Axios.request (../node_modules/axios/lib/core/Axios.js:40:25)
      at Axios.httpMethod [as post] (../node_modules/axios/lib/core/Axios.js:224:19)
      at Function.wrap (../node_modules/axios/lib/helpers/bind.js:5:15)
      at OpenObserveTransport.flush (logging/openobserve-transport.js:77:19)
      at BusinessLoggerService.flush (logging/business-logger.service.ts:160:35)
      at LoggingController.flushLogs (logging/logging.controller.ts:422:34)
      at Object.<anonymous> (logging/logging.integration.spec.ts:388:46)


  ●  bound-anonymous-fn,finish

    [0m [90m 75 |[39m     
     [90m 76 |[39m     [36mtry[39m {
    [31m[1m>[22m[39m[90m 77 |[39m       [36mawait[39m axios[33m.[39mpost([36mthis[39m[33m.[39mendpoint[33m,[39m batch[33m,[39m {
     [90m    |[39m                   [31m[1m^[22m[39m
     [90m 78 |[39m         headers[33m:[39m {
     [90m 79 |[39m           [32m'Content-Type'[39m[33m:[39m [32m'application/json'[39m[33m,[39m
     [90m 80 |[39m           [32m'Authorization'[39m[33m:[39m [32m`Bearer ${this.options.token}`[39m[0m

      at RedirectableRequest._performRequest (../node_modules/follow-redirects/index.js:337:24)
      at new RedirectableRequest (../node_modules/follow-redirects/index.js:111:8)
      at Object.request (../node_modules/follow-redirects/index.js:543:14)
      at dispatchHttpRequest (../node_modules/axios/lib/adapters/http.js:482:21)
      at ../node_modules/axios/lib/adapters/http.js:155:5
      at wrapAsync (../node_modules/axios/lib/adapters/http.js:135:10)
      at http (../node_modules/axios/lib/adapters/http.js:173:10)
      at Axios.dispatchRequest (../node_modules/axios/lib/core/dispatchRequest.js:51:10)
      at Axios._request (../node_modules/axios/lib/core/Axios.js:185:33)
      at Axios.request (../node_modules/axios/lib/core/Axios.js:40:25)
      at Axios.httpMethod [as post] (../node_modules/axios/lib/core/Axios.js:224:19)
      at Function.wrap (../node_modules/axios/lib/helpers/bind.js:5:15)
      at OpenObserveTransport.flush (logging/openobserve-transport.js:77:19)
      at UserBehaviorTracker.flush (logging/user-behavior-tracker.service.ts:177:35)
      at LoggingController.flushLogs (logging/logging.controller.ts:423:32)
      at Object.<anonymous> (logging/logging.integration.spec.ts:388:46)

