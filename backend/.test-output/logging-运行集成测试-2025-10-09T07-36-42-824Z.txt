# 运行集成测试 @ 2025-10-09T07:36:42.825Z
# Command: npx jest --config=jest.config.cjs --testPathPatterns=".*\.integration\.spec\.ts$" --testPathPatterns="src/logging/logging.integration.spec.ts"

  console.log
    [dotenv@17.2.3] injecting env (84) from .env.test -- tip: 🔐 prevent committing .env to code: https://dotenvx.com/precommit

      at _log (../node_modules/dotenv/lib/main.js:142:11)

  console.log
    [dotenv@17.2.3] injecting env (84) from .env.test -- tip: ⚙️  write to custom object with { processEnv: myObject }

      at _log (../node_modules/dotenv/lib/main.js:142:11)

  console.log
    [dotenv@17.2.3] injecting env (84) from .env.test -- tip: ⚙️  enable debug logging with { debug: true }

      at _log (../node_modules/dotenv/lib/main.js:142:11)



--- STDERR ---
[31m[Nest] 13280  - [39m2025/10/09 15:36:39 [31m  ERROR[39m [38;5;3m[LogAnalyticsService] [39m[31mFailed to get log stats[39m
AxiosError: Request failed with status code 403
    at settle (D:\onlinestore\backend\node_modules\axios\lib\core\settle.js:19:12)
    at BrotliDecompress.handleStreamEnd (D:\onlinestore\backend\node_modules\axios\lib\adapters\http.js:617:11)
    at BrotliDecompress.emit (node:events:531:35)
    at endReadableNT (node:internal/streams/readable:1698:12)
    at processTicksAndRejections (node:internal/process/task_queues:90:21)
    at Axios.request (D:\onlinestore\backend\node_modules\axios\lib\core\Axios.js:45:41)
    at processTicksAndRejections (node:internal/process/task_queues:105:5)
[31m[Nest] 13280  - [39m2025/10/09 15:36:39 [31m  ERROR[39m [38;5;3m[LogAnalyticsService] [39m[31mFailed to get user behavior analytics[39m
AxiosError: Request failed with status code 403
    at settle (D:\onlinestore\backend\node_modules\axios\lib\core\settle.js:19:12)
    at BrotliDecompress.handleStreamEnd (D:\onlinestore\backend\node_modules\axios\lib\adapters\http.js:617:11)
    at BrotliDecompress.emit (node:events:531:35)
    at endReadableNT (node:internal/streams/readable:1698:12)
    at processTicksAndRejections (node:internal/process/task_queues:90:21)
    at Axios.request (D:\onlinestore\backend\node_modules\axios\lib\core\Axios.js:45:41)
    at processTicksAndRejections (node:internal/process/task_queues:105:5)
[31m[Nest] 13280  - [39m2025/10/09 15:36:39 [31m  ERROR[39m [38;5;3m[LoggingController] [39m[31mFailed to get user behavior analytics[39m
AxiosError: Request failed with status code 403
    at settle (D:\onlinestore\backend\node_modules\axios\lib\core\settle.js:19:12)
    at BrotliDecompress.handleStreamEnd (D:\onlinestore\backend\node_modules\axios\lib\adapters\http.js:617:11)
    at BrotliDecompress.emit (node:events:531:35)
    at endReadableNT (node:internal/streams/readable:1698:12)
    at processTicksAndRejections (node:internal/process/task_queues:90:21)
    at Axios.request (D:\onlinestore\backend\node_modules\axios\lib\core\Axios.js:45:41)
    at processTicksAndRejections (node:internal/process/task_queues:105:5)
[31m[Nest] 13280  - [39m2025/10/09 15:36:39 [31m  ERROR[39m [38;5;3m[LogAnalyticsService] [39m[31mFailed to detect anomalous patterns[39m
AxiosError: Request failed with status code 403
    at settle (D:\onlinestore\backend\node_modules\axios\lib\core\settle.js:19:12)
    at BrotliDecompress.handleStreamEnd (D:\onlinestore\backend\node_modules\axios\lib\adapters\http.js:617:11)
    at BrotliDecompress.emit (node:events:531:35)
    at endReadableNT (node:internal/streams/readable:1698:12)
    at processTicksAndRejections (node:internal/process/task_queues:90:21)
    at Axios.request (D:\onlinestore\backend\node_modules\axios\lib\core\Axios.js:45:41)
    at processTicksAndRejections (node:internal/process/task_queues:105:5)
[31m[Nest] 13280  - [39m2025/10/09 15:36:39 [31m  ERROR[39m [38;5;3m[LoggingController] [39m[31mFailed to detect anomalous patterns[39m
AxiosError: Request failed with status code 403
    at settle (D:\onlinestore\backend\node_modules\axios\lib\core\settle.js:19:12)
    at BrotliDecompress.handleStreamEnd (D:\onlinestore\backend\node_modules\axios\lib\adapters\http.js:617:11)
    at BrotliDecompress.emit (node:events:531:35)
    at endReadableNT (node:internal/streams/readable:1698:12)
    at processTicksAndRejections (node:internal/process/task_queues:90:21)
    at Axios.request (D:\onlinestore\backend\node_modules\axios\lib\core\Axios.js:45:41)
    at processTicksAndRejections (node:internal/process/task_queues:105:5)
[31m[Nest] 13280  - [39m2025/10/09 15:36:39 [31m  ERROR[39m [38;5;3m[LogAnalyticsService] [39m[31mFailed to get popular pages[39m
[31m[Nest] 13280  - [39m2025/10/09 15:36:39 [31m  ERROR[39m [38;5;3m[LogAnalyticsService] [39mAxiosError {
  message: [32m'Request failed with status code 403'[39m,
  name: [32m'AxiosError'[39m,
  code: [32m'ERR_BAD_REQUEST'[39m,
  config: {
    transitional: {
      silentJSONParsing: [33mtrue[39m,
      forcedJSONParsing: [33mtrue[39m,
      clarifyTimeoutError: [33mfalse[39m
    },
    adapter: [
      [32m'xhr'[39m,
      [32m'http'[39m,
      [32m'fetch'[39m
    ],
    transformRequest: [
      [36m[Function: transformRequest][39m
    ],
    transformResponse: [
      [36m[Function: transformResponse][39m
    ],
    timeout: [33m30000[39m,
    xsrfCookieName: [32m'XSRF-TOKEN'[39m,
    xsrfHeaderName: [32m'X-XSRF-TOKEN'[39m,
    maxContentLength: [33m-1[39m,
    maxBodyLength: [33m-1[39m,
    env: {
      FormData: [Function: FormData] [FormData] {
        LINE_BREAK: [32m'\r\n'[39m,
        DEFAULT_CONTENT_TYPE: [32m'application/octet-stream'[39m
      },
      Blob: [36m[class Blob][39m
    },
    validateStatus: [36m[Function: validateStatus][39m,
    headers: Object [AxiosHeaders] {
      Accept: [32m'application/json, text/plain, */*'[39m,
      [32m'Content-Type'[39m: [32m'application/json'[39m,
      Authorization: [32m'Bearer '[39m,
      [32m'User-Agent'[39m: [32m'axios/1.12.2'[39m,
      [32m'Content-Length'[39m: [32m'379'[39m,
      [32m'Accept-Encoding'[39m: [32m'gzip, compress, deflate, br'[39m
    },
    cancelToken: CancelToken {
      promise: Promise {
        CanceledError {
          message: [32m'canceled'[39m,
          name: [32m'CanceledError'[39m,
          code: [32m'ERR_CANCELED'[39m
        },
        then: [36m[Function (anonymous)][39m,
        [[32mSymbol(async_id_symbol)[39m]: [33m5816[39m,
        [[32mSymbol(trigger_async_id_symbol)[39m]: [33m5798[39m,
        [[32mSymbol(kResourceStore)[39m]: [32m'Logging Integration Log Analytics Integration should get popular pages through controller'[39m
      },
      _listeners: [],
      reason: CanceledError {
        message: [32m'canceled'[39m,
        name: [32m'CanceledError'[39m,
        code: [32m'ERR_CANCELED'[39m
      }
    },
    method: [32m'post'[39m,
    url: [32m'http://localhost:5080/api/default/_search'[39m,
    data: [32m`{"query":"\\n      SELECT eventData.page as page,\\n             COUNT(*) as view_count,\\n             COUNT(DISTINCT userId) as unique_users\\n      FROM user-behavior\\n      WHERE eventType = 'PAGE_VIEW' \\n        AND timestamp >= '2023-01-01T00:00:00Z' \\n        AND timestamp <= '2023-01-02T00:00:00Z'\\n      GROUP BY page\\n      ORDER BY view_count DESC\\n      LIMIT 10\\n    "}`[39m,
    allowAbsoluteUrls: [33mtrue[39m
  },
  request: [36m<ref *1>[39m ClientRequest {
    _events: [Object: null prototype] {
      abort: [36m[Function (anonymous)][39m,
      aborted: [36m[Function (anonymous)][39m,
      connect: [36m[Function (anonymous)][39m,
      error: [36m[Function (anonymous)][39m,
      socket: [36m[Function (anonymous)][39m,
      timeout: [36m[Function (anonymous)][39m,
      finish: [36m[Function: requestOnFinish][39m
    },
    _eventsCount: [33m7[39m,
    _maxListeners: [90mundefined[39m,
    outputData: [],
    outputSize: [33m0[39m,
    writable: [33mtrue[39m,
    destroyed: [33mtrue[39m,
    _last: [33mfalse[39m,
    chunkedEncoding: [33mfalse[39m,
    shouldKeepAlive: [33mfalse[39m,
    maxRequestsOnConnectionReached: [33mfalse[39m,
    _defaultKeepAlive: [33mtrue[39m,
    useChunkedEncodingByDefault: [33mtrue[39m,
    sendDate: [33mfalse[39m,
    _removedConnection: [33mfalse[39m,
    _removedContLen: [33mfalse[39m,
    _removedTE: [33mfalse[39m,
    strictContentLength: [33mfalse[39m,
    _contentLength: [33m379[39m,
    _hasBody: [33mtrue[39m,
    _trailer: [32m''[39m,
    finished: [33mtrue[39m,
    _headerSent: [33mtrue[39m,
    _closed: [33mtrue[39m,
    _header: [32m'POST /api/default/_search HTTP/1.1\r\nAccept: application/json, text/plain, */*\r\nContent-Type: application/json\r\nAuthorization: Bearer \r\nUser-Agent: axios/1.12.2\r\nContent-Length: 379\r\nAccept-Encoding: gzip, compress, deflate, br\r\nHost: localhost:5080\r\nConnection: keep-alive\r\n\r\n'[39m,
    _keepAliveTimeout: [33m0[39m,
    _onPendingData: [36m[Function: nop][39m,
    agent: Agent {
      _events: [Object: null prototype] {
        free: [36m[Function (anonymous)][39m,
        newListener: [36m[Function: maybeEnableKeylog][39m
      },
      _eventsCount: [33m2[39m,
      _maxListeners: [90mundefined[39m,
      defaultPort: [33m80[39m,
      protocol: [32m'http:'[39m,
      options: [Object: null prototype] {
        keepAlive: [33mtrue[39m,
        scheduling: [32m'lifo'[39m,
        timeout: [33m5000[39m,
        noDelay: [33mtrue[39m,
        path: [1mnull[22m
      },
      requests: [Object: null prototype] {},
      sockets: [Object: null prototype] {},
      freeSockets: [Object: null prototype] {},
      keepAliveMsecs: [33m1000[39m,
      keepAlive: [33mtrue[39m,
      maxSockets: [33mInfinity[39m,
      maxFreeSockets: [33m256[39m,
      scheduling: [32m'lifo'[39m,
      maxTotalSockets: [33mInfinity[39m,
      totalSocketCount: [33m0[39m,
      agentKeepAliveTimeoutBuffer: [33m1000[39m,
      [[32mSymbol(shapeMode)[39m]: [33mfalse[39m,
      [[32mSymbol(kCapture)[39m]: [33mfalse[39m
    },
    socketPath: [90mundefined[39m,
    method: [32m'POST'[39m,
    maxHeaderSize: [90mundefined[39m,
    insecureHTTPParser: [90mundefined[39m,
    joinDuplicateHeaders: [90mundefined[39m,
    path: [32m'/api/default/_search'[39m,
    _ended: [33mtrue[39m,
    res: IncomingMessage {
      _events: {
        close: [
          [36m[Function (anonymous)][39m,
          [36m[Function: onclose][39m,
          [36m[Function: onclose][39m
        ],
        error: [
          [36m[Function: onerror][39m,
          [36m[Function: onError][39m,
          [36m[Function: onerror][39m
        ],
        data: [90mundefined[39m,
        end: [
          [36m[Function: responseOnEnd][39m,
          [36m[Function: onend][39m,
          [36m[Function: onend][39m
        ],
        readable: [90mundefined[39m,
        finish: [
          [36m[Function: onfinish][39m,
          [36m[Function: onfinish][39m
        ]
      },
      _readableState: ReadableState {
        highWaterMark: [33m16384[39m,
        buffer: [],
        bufferIndex: [33m0[39m,
        length: [33m0[39m,
        pipes: [],
        awaitDrainWriters: [1mnull[22m,
        [[32mSymbol(kState)[39m]: [33m110892924[39m
      },
      _maxListeners: [90mundefined[39m,
      socket: Socket {
        connecting: [33mfalse[39m,
        _hadError: [33mfalse[39m,
        _parent: [1mnull[22m,
        _host: [32m'localhost'[39m,
        _closeAfterHandlingError: [33mfalse[39m,
        _events: {
          close: [
            [36m[Function: onClose][39m,
            [36m[Function: socketCloseListener][39m
          ],
          error: [36m[Function: socketErrorListener][39m,
          prefinish: [90mundefined[39m,
          finish: [90mundefined[39m,
          drain: [90mundefined[39m,
          data: [90mundefined[39m,
          end: [36m[Function: onReadableStreamEnd][39m,
          readable: [90mundefined[39m,
          connect: [90mundefined[39m,
          free: [36m[Function: onFree][39m,
          timeout: [
            [36m[Function: onTimeout][39m,
            [36m[Function (anonymous)][39m
          ],
          agentRemove: [36m[Function: onRemove][39m
        },
        _readableState: ReadableState {
          highWaterMark: [33m16384[39m,
          buffer: [],
          bufferIndex: [33m0[39m,
          length: [33m0[39m,
          pipes: [],
          awaitDrainWriters: [1mnull[22m,
          [[32mSymbol(kState)[39m]: [33m60303732[39m
        },
        _writableState: WritableState {
          highWaterMark: [33m16384[39m,
          length: [33m0[39m,
          corked: [33m0[39m,
          onwrite: [36m[Function: bound onwrite][39m,
          writelen: [33m0[39m,
          bufferedIndex: [33m0[39m,
          pendingcb: [33m0[39m,
          [[32mSymbol(kState)[39m]: [33m1091450228[39m,
          [[32mSymbol(kBufferedValue)[39m]: [1mnull[22m,
          [[32mSymbol(kWriteCbValue)[39m]: [1mnull[22m
        },
        allowHalfOpen: [33mfalse[39m,
        _maxListeners: [90mundefined[39m,
        _eventsCount: [33m6[39m,
        _sockname: [1mnull[22m,
        _pendingData: [1mnull[22m,
        _pendingEncoding: [32m''[39m,
        server: [1mnull[22m,
        _server: [1mnull[22m,
        timeout: [33m30000[39m,
        parser: [1mnull[22m,
        _httpMessage: [36m[Circular *1][39m,
        autoSelectFamilyAttemptedAddresses: [
          [32m'::1:5080'[39m
        ],
        [[32mSymbol(async_id_symbol)[39m]: [33m5822[39m,
        [[32mSymbol(kHandle)[39m]: [1mnull[22m,
        [[32mSymbol(lastWriteQueueSize)[39m]: [33m0[39m,
        [[32mSymbol(timeout)[39m]: Timeout {
          _idleTimeout: [33m-1[39m,
          _idlePrev: [1mnull[22m,
          _idleNext: [1mnull[22m,
          _idleStart: [33m13154[39m,
          _onTimeout: [1mnull[22m,
          _timerArgs: [90mundefined[39m,
          _repeat: [1mnull[22m,
          _destroyed: [33mtrue[39m,
          [[32mSymbol(refed)[39m]: [33mfalse[39m,
          [[32mSymbol(kHasPrimitive)[39m]: [33mfalse[39m,
          [[32mSymbol(asyncId)[39m]: [33m5842[39m,
          [[32mSymbol(triggerId)[39m]: [33m5824[39m,
          [[32mSymbol(kAsyncContextFrame)[39m]: [90mundefined[39m,
          [[32mSymbol(kResourceStore)[39m]: [32m'Logging Integration Log Analytics Integration should get popular pages through controller'[39m
        },
        [[32mSymbol(kBuffer)[39m]: [1mnull[22m,
        [[32mSymbol(kBufferCb)[39m]: [1mnull[22m,
        [[32mSymbol(kBufferGen)[39m]: [1mnull[22m,
        [[32mSymbol(shapeMode)[39m]: [33mtrue[39m,
        [[32mSymbol(kCapture)[39m]: [33mfalse[39m,
        [[32mSymbol(kSetNoDelay)[39m]: [33mtrue[39m,
        [[32mSymbol(kSetKeepAlive)[39m]: [33mtrue[39m,
        [[32mSymbol(kSetKeepAliveInitialDelay)[39m]: [33m60[39m,
        [[32mSymbol(kBytesRead)[39m]: [33m372[39m,
        [[32mSymbol(kBytesWritten)[39m]: [33m655[39m
      },
      httpVersionMajor: [33m1[39m,
      httpVersionMinor: [33m1[39m,
      httpVersion: [32m'1.1'[39m,
      complete: [33mtrue[39m,
      rawHeaders: [
        [32m'transfer-encoding'[39m,
        [32m'chunked'[39m,
        [32m'connection'[39m,
        [32m'close'[39m,
        [32m'vary'[39m,
        [32m'Origin, Access-Control-Request-Method, Access-Control-Request-Headers'[39m,
        [32m'vary'[39m,
        [32m'accept-encoding'[39m,
        [32m'content-encoding'[39m,
        [32m'br'[39m,
        [32m'content-type'[39m,
        [32m'text/plain; charset=utf-8'[39m,
        [32m'x-api-node'[39m,
        [32m'995170affe05'[39m,
        [32m'access-control-allow-credentials'[39m,
        [32m'true'[39m,
        [32m'date'[39m,
        [32m'Thu, 09 Oct 2025 07:36:39 GMT'[39m
      ],
      rawTrailers: [],
      joinDuplicateHeaders: [90mundefined[39m,
      aborted: [33mfalse[39m,
      upgrade: [33mfalse[39m,
      url: [32m''[39m,
      method: [1mnull[22m,
      statusCode: [33m403[39m,
      statusMessage: [32m'Forbidden'[39m,
      client: Socket {
        connecting: [33mfalse[39m,
        _hadError: [33mfalse[39m,
        _parent: [1mnull[22m,
        _host: [32m'localhost'[39m,
        _closeAfterHandlingError: [33mfalse[39m,
        _events: {
          close: [
            [36m[Function: onClose][39m,
            [36m[Function: socketCloseListener][39m
          ],
          error: [36m[Function: socketErrorListener][39m,
          prefinish: [90mundefined[39m,
          finish: [90mundefined[39m,
          drain: [90mundefined[39m,
          data: [90mundefined[39m,
          end: [36m[Function: onReadableStreamEnd][39m,
          readable: [90mundefined[39m,
          connect: [90mundefined[39m,
          free: [36m[Function: onFree][39m,
          timeout: [
            [36m[Function: onTimeout][39m,
            [36m[Function (anonymous)][39m
          ],
          agentRemove: [36m[Function: onRemove][39m
        },
        _readableState: ReadableState {
          highWaterMark: [33m16384[39m,
          buffer: [],
          bufferIndex: [33m0[39m,
          length: [33m0[39m,
          pipes: [],
          awaitDrainWriters: [1mnull[22m,
          [[32mSymbol(kState)[39m]: [33m60303732[39m
        },
        _writableState: WritableState {
          highWaterMark: [33m16384[39m,
          length: [33m0[39m,
          corked: [33m0[39m,
          onwrite: [36m[Function: bound onwrite][39m,
          writelen: [33m0[39m,
          bufferedIndex: [33m0[39m,
          pendingcb: [33m0[39m,
          [[32mSymbol(kState)[39m]: [33m1091450228[39m,
          [[32mSymbol(kBufferedValue)[39m]: [1mnull[22m,
          [[32mSymbol(kWriteCbValue)[39m]: [1mnull[22m
        },
        allowHalfOpen: [33mfalse[39m,
        _maxListeners: [90mundefined[39m,
        _eventsCount: [33m6[39m,
        _sockname: [1mnull[22m,
        _pendingData: [1mnull[22m,
        _pendingEncoding: [32m''[39m,
        server: [1mnull[22m,
        _server: [1mnull[22m,
        timeout: [33m30000[39m,
        parser: [1mnull[22m,
        _httpMessage: [36m[Circular *1][39m,
        autoSelectFamilyAttemptedAddresses: [
          [32m'::1:5080'[39m
        ],
        [[32mSymbol(async_id_symbol)[39m]: [33m5822[39m,
        [[32mSymbol(kHandle)[39m]: [1mnull[22m,
        [[32mSymbol(lastWriteQueueSize)[39m]: [33m0[39m,
        [[32mSymbol(timeout)[39m]: Timeout {
          _idleTimeout: [33m-1[39m,
          _idlePrev: [1mnull[22m,
          _idleNext: [1mnull[22m,
          _idleStart: [33m13154[39m,
          _onTimeout: [1mnull[22m,
          _timerArgs: [90mundefined[39m,
          _repeat: [1mnull[22m,
          _destroyed: [33mtrue[39m,
          [[32mSymbol(refed)[39m]: [33mfalse[39m,
          [[32mSymbol(kHasPrimitive)[39m]: [33mfalse[39m,
          [[32mSymbol(asyncId)[39m]: [33m5842[39m,
          [[32mSymbol(triggerId)[39m]: [33m5824[39m,
          [[32mSymbol(kAsyncContextFrame)[39m]: [90mundefined[39m,
          [[32mSymbol(kResourceStore)[39m]: [32m'Logging Integration Log Analytics Integration should get popular pages through controller'[39m
        },
        [[32mSymbol(kBuffer)[39m]: [1mnull[22m,
        [[32mSymbol(kBufferCb)[39m]: [1mnull[22m,
        [[32mSymbol(kBufferGen)[39m]: [1mnull[22m,
        [[32mSymbol(shapeMode)[39m]: [33mtrue[39m,
        [[32mSymbol(kCapture)[39m]: [33mfalse[39m,
        [[32mSymbol(kSetNoDelay)[39m]: [33mtrue[39m,
        [[32mSymbol(kSetKeepAlive)[39m]: [33mtrue[39m,
        [[32mSymbol(kSetKeepAliveInitialDelay)[39m]: [33m60[39m,
        [[32mSymbol(kBytesRead)[39m]: [33m372[39m,
        [[32mSymbol(kBytesWritten)[39m]: [33m655[39m
      },
      _consuming: [33mfalse[39m,
      _dumped: [33mfalse[39m,
      req: [36m[Circular *1][39m,
      _eventsCount: [33m4[39m,
      responseUrl: [32m'http://localhost:5080/api/default/_search'[39m,
      redirects: [],
      [[32mSymbol(shapeMode)[39m]: [33mtrue[39m,
      [[32mSymbol(kCapture)[39m]: [33mfalse[39m,
      [[32mSymbol(kHeaders)[39m]: {
        [32m'transfer-encoding'[39m: [32m'chunked'[39m,
        connection: [32m'close'[39m,
        vary: [32m'Origin, Access-Control-Request-Method, Access-Control-Request-Headers, accept-encoding'[39m,
        [32m'content-type'[39m: [32m'text/plain; charset=utf-8'[39m,
        [32m'x-api-node'[39m: [32m'995170affe05'[39m,
        [32m'access-control-allow-credentials'[39m: [32m'true'[39m,
        date: [32m'Thu, 09 Oct 2025 07:36:39 GMT'[39m
      },
      [[32mSymbol(kHeadersCount)[39m]: [33m18[39m,
      [[32mSymbol(kTrailers)[39m]: [1mnull[22m,
      [[32mSymbol(kTrailersCount)[39m]: [33m0[39m
    },
    aborted: [33mfalse[39m,
    timeoutCb: [36m[Function: emitRequestTimeout][39m,
    upgradeOrConnect: [33mfalse[39m,
    parser: [1mnull[22m,
    maxHeadersCount: [1mnull[22m,
    reusedSocket: [33mfalse[39m,
    host: [32m'localhost'[39m,
    protocol: [32m'http:'[39m,
    _redirectable: Writable {
      _events: {
        close: [90mundefined[39m,
        error: [36m[Function: handleRequestError][39m,
        prefinish: [90mundefined[39m,
        finish: [90mundefined[39m,
        drain: [90mundefined[39m,
        response: [36m[Function: handleResponse][39m,
        socket: [
          [36m[Function: handleRequestSocket][39m,
          [36m[Function: destroyOnTimeout][39m
        ],
        timeout: [90mundefined[39m,
        abort: [90mundefined[39m
      },
      _writableState: WritableState {
        highWaterMark: [33m16384[39m,
        length: [33m0[39m,
        corked: [33m0[39m,
        onwrite: [36m[Function: bound onwrite][39m,
        writelen: [33m0[39m,
        bufferedIndex: [33m0[39m,
        pendingcb: [33m0[39m,
        [[32mSymbol(kState)[39m]: [33m17580812[39m,
        [[32mSymbol(kBufferedValue)[39m]: [1mnull[22m
      },
      _maxListeners: [90mundefined[39m,
      _options: {
        maxRedirects: [33m21[39m,
        maxBodyLength: [33mInfinity[39m,
        protocol: [32m'http:'[39m,
        path: [32m'/api/default/_search'[39m,
        method: [32m'POST'[39m,
        headers: [Object: null prototype] {
          Accept: [32m'application/json, text/plain, */*'[39m,
          [32m'Content-Type'[39m: [32m'application/json'[39m,
          Authorization: [32m'Bearer '[39m,
          [32m'User-Agent'[39m: [32m'axios/1.12.2'[39m,
          [32m'Content-Length'[39m: [32m'379'[39m,
          [32m'Accept-Encoding'[39m: [32m'gzip, compress, deflate, br'[39m
        },
        agents: {
          http: [90mundefined[39m,
          https: [90mundefined[39m
        },
        auth: [90mundefined[39m,
        family: [90mundefined[39m,
        beforeRedirect: [36m[Function: dispatchBeforeRedirect][39m,
        beforeRedirects: {
          proxy: [36m[Function: beforeRedirect][39m
        },
        hostname: [32m'localhost'[39m,
        port: [32m'5080'[39m,
        agent: [90mundefined[39m,
        nativeProtocols: {
          [32m'http:'[39m: {
            _connectionListener: [36m[Function: connectionListener][39m,
            METHODS: [36m[Array][39m,
            STATUS_CODES: [36m[Object][39m,
            Agent: [36m[Function][39m,
            ClientRequest: [36m[Function: ClientRequest][39m,
            IncomingMessage: [36m[Function: IncomingMessage][39m,
            OutgoingMessage: [36m[Function: OutgoingMessage][39m,
            Server: [36m[Function: Server][39m,
            ServerResponse: [36m[Function: ServerResponse][39m,
            createServer: [36m[Function: createServer][39m,
            validateHeaderName: [36m[Function][39m,
            validateHeaderValue: [36m[Function][39m,
            get: [36m[Function: get][39m,
            request: [36m[Function: request][39m,
            setMaxIdleHTTPParsers: [36m[Function: setMaxIdleHTTPParsers][39m,
            maxHeaderSize: [36m[Getter][39m,
            globalAgent: [36m[Getter/Setter][39m,
            WebSocket: [36m[Getter][39m,
            CloseEvent: [36m[Getter][39m,
            MessageEvent: [36m[Getter][39m
          },
          [32m'https:'[39m: {
            Agent: [36m[Function: Agent][39m,
            globalAgent: [36m[Agent][39m,
            Server: [36m[Function: Server][39m,
            createServer: [36m[Function: createServer][39m,
            get: [36m[Function: get][39m,
            request: [36m[Function: request][39m
          }
        },
        pathname: [32m'/api/default/_search'[39m
      },
      _ended: [33mtrue[39m,
      _ending: [33mtrue[39m,
      _redirectCount: [33m0[39m,
      _redirects: [],
      _requestBodyLength: [33m379[39m,
      _requestBodyBuffers: [],
      _eventsCount: [33m3[39m,
      _onNativeResponse: [36m[Function (anonymous)][39m,
      _currentRequest: [36m[Circular *1][39m,
      _currentUrl: [32m'http://localhost:5080/api/default/_search'[39m,
      _timeout: [1mnull[22m,
      [[32mSymbol(shapeMode)[39m]: [33mtrue[39m,
      [[32mSymbol(kCapture)[39m]: [33mfalse[39m
    },
    [[32mSymbol(shapeMode)[39m]: [33mfalse[39m,
    [[32mSymbol(kCapture)[39m]: [33mfalse[39m,
    [[32mSymbol(kBytesWritten)[39m]: [33m0[39m,
    [[32mSymbol(kNeedDrain)[39m]: [33mfalse[39m,
    [[32mSymbol(corked)[39m]: [33m0[39m,
    [[32mSymbol(kChunkedBuffer)[39m]: [],
    [[32mSymbol(kChunkedLength)[39m]: [33m0[39m,
    [[32mSymbol(kSocket)[39m]: Socket {
      connecting: [33mfalse[39m,
      _hadError: [33mfalse[39m,
      _parent: [1mnull[22m,
      _host: [32m'localhost'[39m,
      _closeAfterHandlingError: [33mfalse[39m,
      _events: {
        close: [
          [36m[Function: onClose][39m,
          [36m[Function: socketCloseListener][39m
        ],
        error: [36m[Function: socketErrorListener][39m,
        prefinish: [90mundefined[39m,
        finish: [90mundefined[39m,
        drain: [90mundefined[39m,
        data: [90mundefined[39m,
        end: [36m[Function: onReadableStreamEnd][39m,
        readable: [90mundefined[39m,
        connect: [90mundefined[39m,
        free: [36m[Function: onFree][39m,
        timeout: [
          [36m[Function: onTimeout][39m,
          [36m[Function (anonymous)][39m
        ],
        agentRemove: [36m[Function: onRemove][39m
      },
      _readableState: ReadableState {
        highWaterMark: [33m16384[39m,
        buffer: [],
        bufferIndex: [33m0[39m,
        length: [33m0[39m,
        pipes: [],
        awaitDrainWriters: [1mnull[22m,
        [[32mSymbol(kState)[39m]: [33m60303732[39m
      },
      _writableState: WritableState {
        highWaterMark: [33m16384[39m,
        length: [33m0[39m,
        corked: [33m0[39m,
        onwrite: [36m[Function: bound onwrite][39m,
        writelen: [33m0[39m,
        bufferedIndex: [33m0[39m,
        pendingcb: [33m0[39m,
        [[32mSymbol(kState)[39m]: [33m1091450228[39m,
        [[32mSymbol(kBufferedValue)[39m]: [1mnull[22m,
        [[32mSymbol(kWriteCbValue)[39m]: [1mnull[22m
      },
      allowHalfOpen: [33mfalse[39m,
      _maxListeners: [90mundefined[39m,
      _eventsCount: [33m6[39m,
      _sockname: [1mnull[22m,
      _pendingData: [1mnull[22m,
      _pendingEncoding: [32m''[39m,
      server: [1mnull[22m,
      _server: [1mnull[22m,
      timeout: [33m30000[39m,
      parser: [1mnull[22m,
      _httpMessage: [36m[Circular *1][39m,
      autoSelectFamilyAttemptedAddresses: [
        [32m'::1:5080'[39m
      ],
      [[32mSymbol(async_id_symbol)[39m]: [33m5822[39m,
      [[32mSymbol(kHandle)[39m]: [1mnull[22m,
      [[32mSymbol(lastWriteQueueSize)[39m]: [33m0[39m,
      [[32mSymbol(timeout)[39m]: Timeout {
        _idleTimeout: [33m-1[39m,
        _idlePrev: [1mnull[22m,
        _idleNext: [1mnull[22m,
        _idleStart: [33m13154[39m,
        _onTimeout: [1mnull[22m,
        _timerArgs: [90mundefined[39m,
        _repeat: [1mnull[22m,
        _destroyed: [33mtrue[39m,
        [[32mSymbol(refed)[39m]: [33mfalse[39m,
        [[32mSymbol(kHasPrimitive)[39m]: [33mfalse[39m,
        [[32mSymbol(asyncId)[39m]: [33m5842[39m,
        [[32mSymbol(triggerId)[39m]: [33m5824[39m,
        [[32mSymbol(kAsyncContextFrame)[39m]: [90mundefined[39m,
        [[32mSymbol(kResourceStore)[39m]: [32m'Logging Integration Log Analytics Integration should get popular pages through controller'[39m
      },
      [[32mSymbol(kBuffer)[39m]: [1mnull[22m,
      [[32mSymbol(kBufferCb)[39m]: [1mnull[22m,
      [[32mSymbol(kBufferGen)[39m]: [1mnull[22m,
      [[32mSymbol(shapeMode)[39m]: [33mtrue[39m,
      [[32mSymbol(kCapture)[39m]: [33mfalse[39m,
      [[32mSymbol(kSetNoDelay)[39m]: [33mtrue[39m,
      [[32mSymbol(kSetKeepAlive)[39m]: [33mtrue[39m,
      [[32mSymbol(kSetKeepAliveInitialDelay)[39m]: [33m60[39m,
      [[32mSymbol(kBytesRead)[39m]: [33m372[39m,
      [[32mSymbol(kBytesWritten)[39m]: [33m655[39m
    },
    [[32mSymbol(kOutHeaders)[39m]: [Object: null prototype] {
      accept: [
        [32m'Accept'[39m,
        [32m'application/json, text/plain, */*'[39m
      ],
      [32m'content-type'[39m: [
        [32m'Content-Type'[39m,
        [32m'application/json'[39m
      ],
      authorization: [
        [32m'Authorization'[39m,
        [32m'Bearer '[39m
      ],
      [32m'user-agent'[39m: [
        [32m'User-Agent'[39m,
        [32m'axios/1.12.2'[39m
      ],
      [32m'content-length'[39m: [
        [32m'Content-Length'[39m,
        [32m'379'[39m
      ],
      [32m'accept-encoding'[39m: [
        [32m'Accept-Encoding'[39m,
        [32m'gzip, compress, deflate, br'[39m
      ],
      host: [
        [32m'Host'[39m,
        [32m'localhost:5080'[39m
      ]
    },
    [[32mSymbol(errored)[39m]: [1mnull[22m,
    [[32mSymbol(kHighWaterMark)[39m]: [33m16384[39m,
    [[32mSymbol(kRejectNonStandardBodyWrites)[39m]: [33mfalse[39m,
    [[32mSymbol(kUniqueHeaders)[39m]: [1mnull[22m
  },
  response: {
    status: [33m403[39m,
    statusText: [32m'Forbidden'[39m,
    headers: Object [AxiosHeaders] {
      [32m'transfer-encoding'[39m: [32m'chunked'[39m,
      connection: [32m'close'[39m,
      vary: [32m'Origin, Access-Control-Request-Method, Access-Control-Request-Headers, accept-encoding'[39m,
      [32m'content-type'[39m: [32m'text/plain; charset=utf-8'[39m,
      [32m'x-api-node'[39m: [32m'995170affe05'[39m,
      [32m'access-control-allow-credentials'[39m: [32m'true'[39m,
      date: [32m'Thu, 09 Oct 2025 07:36:39 GMT'[39m
    },
    config: {
      transitional: {
        silentJSONParsing: [33mtrue[39m,
        forcedJSONParsing: [33mtrue[39m,
        clarifyTimeoutError: [33mfalse[39m
      },
      adapter: [
        [32m'xhr'[39m,
        [32m'http'[39m,
        [32m'fetch'[39m
      ],
      transformRequest: [
        [36m[Function: transformRequest][39m
      ],
      transformResponse: [
        [36m[Function: transformResponse][39m
      ],
      timeout: [33m30000[39m,
      xsrfCookieName: [32m'XSRF-TOKEN'[39m,
      xsrfHeaderName: [32m'X-XSRF-TOKEN'[39m,
      maxContentLength: [33m-1[39m,
      maxBodyLength: [33m-1[39m,
      env: {
        FormData: [Function: FormData] [FormData] {
          LINE_BREAK: [32m'\r\n'[39m,
          DEFAULT_CONTENT_TYPE: [32m'application/octet-stream'[39m
        },
        Blob: [36m[class Blob][39m
      },
      validateStatus: [36m[Function: validateStatus][39m,
      headers: Object [AxiosHeaders] {
        Accept: [32m'application/json, text/plain, */*'[39m,
        [32m'Content-Type'[39m: [32m'application/json'[39m,
        Authorization: [32m'Bearer '[39m,
        [32m'User-Agent'[39m: [32m'axios/1.12.2'[39m,
        [32m'Content-Length'[39m: [32m'379'[39m,
        [32m'Accept-Encoding'[39m: [32m'gzip, compress, deflate, br'[39m
      },
      cancelToken: CancelToken {
        promise: Promise {
          CanceledError {
            message: [32m'canceled'[39m,
            name: [32m'CanceledError'[39m,
            code: [32m'ERR_CANCELED'[39m
          },
          then: [36m[Function (anonymous)][39m,
          [[32mSymbol(async_id_symbol)[39m]: [33m5816[39m,
          [[32mSymbol(trigger_async_id_symbol)[39m]: [33m5798[39m,
          [[32mSymbol(kResourceStore)[39m]: [32m'Logging Integration Log Analytics Integration should get popular pages through controller'[39m
        },
        _listeners: [],
        reason: CanceledError {
          message: [32m'canceled'[39m,
          name: [32m'CanceledError'[39m,
          code: [32m'ERR_CANCELED'[39m
        }
      },
      method: [32m'post'[39m,
      url: [32m'http://localhost:5080/api/default/_search'[39m,
      data: [32m`{"query":"\\n      SELECT eventData.page as page,\\n             COUNT(*) as view_count,\\n             COUNT(DISTINCT userId) as unique_users\\n      FROM user-behavior\\n      WHERE eventType = 'PAGE_VIEW' \\n        AND timestamp >= '2023-01-01T00:00:00Z' \\n        AND timestamp <= '2023-01-02T00:00:00Z'\\n      GROUP BY page\\n      ORDER BY view_count DESC\\n      LIMIT 10\\n    "}`[39m,
      allowAbsoluteUrls: [33mtrue[39m
    },
    request: [36m<ref *1>[39m ClientRequest {
      _events: [Object: null prototype] {
        abort: [36m[Function (anonymous)][39m,
        aborted: [36m[Function (anonymous)][39m,
        connect: [36m[Function (anonymous)][39m,
        error: [36m[Function (anonymous)][39m,
        socket: [36m[Function (anonymous)][39m,
        timeout: [36m[Function (anonymous)][39m,
        finish: [36m[Function: requestOnFinish][39m
      },
      _eventsCount: [33m7[39m,
      _maxListeners: [90mundefined[39m,
      outputData: [],
      outputSize: [33m0[39m,
      writable: [33mtrue[39m,
      destroyed: [33mtrue[39m,
      _last: [33mfalse[39m,
      chunkedEncoding: [33mfalse[39m,
      shouldKeepAlive: [33mfalse[39m,
      maxRequestsOnConnectionReached: [33mfalse[39m,
      _defaultKeepAlive: [33mtrue[39m,
      useChunkedEncodingByDefault: [33mtrue[39m,
      sendDate: [33mfalse[39m,
      _removedConnection: [33mfalse[39m,
      _removedContLen: [33mfalse[39m,
      _removedTE: [33mfalse[39m,
      strictContentLength: [33mfalse[39m,
      _contentLength: [33m379[39m,
      _hasBody: [33mtrue[39m,
      _trailer: [32m''[39m,
      finished: [33mtrue[39m,
      _headerSent: [33mtrue[39m,
      _closed: [33mtrue[39m,
      _header: [32m'POST /api/default/_search HTTP/1.1\r\nAccept: application/json, text/plain, */*\r\nContent-Type: application/json\r\nAuthorization: Bearer \r\nUser-Agent: axios/1.12.2\r\nContent-Length: 379\r\nAccept-Encoding: gzip, compress, deflate, br\r\nHost: localhost:5080\r\nConnection: keep-alive\r\n\r\n'[39m,
      _keepAliveTimeout: [33m0[39m,
      _onPendingData: [36m[Function: nop][39m,
      agent: Agent {
        _events: [Object: null prototype] {
          free: [36m[Function (anonymous)][39m,
          newListener: [36m[Function: maybeEnableKeylog][39m
        },
        _eventsCount: [33m2[39m,
        _maxListeners: [90mundefined[39m,
        defaultPort: [33m80[39m,
        protocol: [32m'http:'[39m,
        options: [Object: null prototype] {
          keepAlive: [33mtrue[39m,
          scheduling: [32m'lifo'[39m,
          timeout: [33m5000[39m,
          noDelay: [33mtrue[39m,
          path: [1mnull[22m
        },
        requests: [Object: null prototype] {},
        sockets: [Object: null prototype] {},
        freeSockets: [Object: null prototype] {},
        keepAliveMsecs: [33m1000[39m,
        keepAlive: [33mtrue[39m,
        maxSockets: [33mInfinity[39m,
        maxFreeSockets: [33m256[39m,
        scheduling: [32m'lifo'[39m,
        maxTotalSockets: [33mInfinity[39m,
        totalSocketCount: [33m0[39m,
        agentKeepAliveTimeoutBuffer: [33m1000[39m,
        [[32mSymbol(shapeMode)[39m]: [33mfalse[39m,
        [[32mSymbol(kCapture)[39m]: [33mfalse[39m
      },
      socketPath: [90mundefined[39m,
      method: [32m'POST'[39m,
      maxHeaderSize: [90mundefined[39m,
      insecureHTTPParser: [90mundefined[39m,
      joinDuplicateHeaders: [90mundefined[39m,
      path: [32m'/api/default/_search'[39m,
      _ended: [33mtrue[39m,
      res: IncomingMessage {
        _events: {
          close: [
            [36m[Function (anonymous)][39m,
            [36m[Function: onclose][39m,
            [36m[Function: onclose][39m
          ],
          error: [
            [36m[Function: onerror][39m,
            [36m[Function: onError][39m,
            [36m[Function: onerror][39m
          ],
          data: [90mundefined[39m,
          end: [
            [36m[Function: responseOnEnd][39m,
            [36m[Function: onend][39m,
            [36m[Function: onend][39m
          ],
          readable: [90mundefined[39m,
          finish: [
            [36m[Function: onfinish][39m,
            [36m[Function: onfinish][39m
          ]
        },
        _readableState: ReadableState {
          highWaterMark: [33m16384[39m,
          buffer: [],
          bufferIndex: [33m0[39m,
          length: [33m0[39m,
          pipes: [],
          awaitDrainWriters: [1mnull[22m,
          [[32mSymbol(kState)[39m]: [33m110892924[39m
        },
        _maxListeners: [90mundefined[39m,
        socket: Socket {
          connecting: [33mfalse[39m,
          _hadError: [33mfalse[39m,
          _parent: [1mnull[22m,
          _host: [32m'localhost'[39m,
          _closeAfterHandlingError: [33mfalse[39m,
          _events: {
            close: [36m[Array][39m,
            error: [36m[Function: socketErrorListener][39m,
            prefinish: [90mundefined[39m,
            finish: [90mundefined[39m,
            drain: [90mundefined[39m,
            data: [90mundefined[39m,
            end: [36m[Function: onReadableStreamEnd][39m,
            readable: [90mundefined[39m,
            connect: [90mundefined[39m,
            free: [36m[Function: onFree][39m,
            timeout: [36m[Array][39m,
            agentRemove: [36m[Function: onRemove][39m
          },
          _readableState: ReadableState {
            highWaterMark: [33m16384[39m,
            buffer: [],
            bufferIndex: [33m0[39m,
            length: [33m0[39m,
            pipes: [],
            awaitDrainWriters: [1mnull[22m,
            [[32mSymbol(kState)[39m]: [33m60303732[39m
          },
          _writableState: WritableState {
            highWaterMark: [33m16384[39m,
            length: [33m0[39m,
            corked: [33m0[39m,
            onwrite: [36m[Function: bound onwrite][39m,
            writelen: [33m0[39m,
            bufferedIndex: [33m0[39m,
            pendingcb: [33m0[39m,
            [[32mSymbol(kState)[39m]: [33m1091450228[39m,
            [[32mSymbol(kBufferedValue)[39m]: [1mnull[22m,
            [[32mSymbol(kWriteCbValue)[39m]: [1mnull[22m
          },
          allowHalfOpen: [33mfalse[39m,
          _maxListeners: [90mundefined[39m,
          _eventsCount: [33m6[39m,
          _sockname: [1mnull[22m,
          _pendingData: [1mnull[22m,
          _pendingEncoding: [32m''[39m,
          server: [1mnull[22m,
          _server: [1mnull[22m,
          timeout: [33m30000[39m,
          parser: [1mnull[22m,
          _httpMessage: [36m[Circular *1][39m,
          autoSelectFamilyAttemptedAddresses: [
            [32m'::1:5080'[39m
          ],
          [[32mSymbol(async_id_symbol)[39m]: [33m5822[39m,
          [[32mSymbol(kHandle)[39m]: [1mnull[22m,
          [[32mSymbol(lastWriteQueueSize)[39m]: [33m0[39m,
          [[32mSymbol(timeout)[39m]: Timeout {
            _idleTimeout: [33m-1[39m,
            _idlePrev: [1mnull[22m,
            _idleNext: [1mnull[22m,
            _idleStart: [33m13154[39m,
            _onTimeout: [1mnull[22m,
            _timerArgs: [90mundefined[39m,
            _repeat: [1mnull[22m,
            _destroyed: [33mtrue[39m,
            [[32mSymbol(refed)[39m]: [33mfalse[39m,
            [[32mSymbol(kHasPrimitive)[39m]: [33mfalse[39m,
            [[32mSymbol(asyncId)[39m]: [33m5842[39m,
            [[32mSymbol(triggerId)[39m]: [33m5824[39m,
            [[32mSymbol(kAsyncContextFrame)[39m]: [90mundefined[39m,
            [[32mSymbol(kResourceStore)[39m]: [32m'Logging Integration Log Analytics Integration should get popular pages through controller'[39m
          },
          [[32mSymbol(kBuffer)[39m]: [1mnull[22m,
          [[32mSymbol(kBufferCb)[39m]: [1mnull[22m,
          [[32mSymbol(kBufferGen)[39m]: [1mnull[22m,
          [[32mSymbol(shapeMode)[39m]: [33mtrue[39m,
          [[32mSymbol(kCapture)[39m]: [33mfalse[39m,
          [[32mSymbol(kSetNoDelay)[39m]: [33mtrue[39m,
          [[32mSymbol(kSetKeepAlive)[39m]: [33mtrue[39m,
          [[32mSymbol(kSetKeepAliveInitialDelay)[39m]: [33m60[39m,
          [[32mSymbol(kBytesRead)[39m]: [33m372[39m,
          [[32mSymbol(kBytesWritten)[39m]: [33m655[39m
        },
        httpVersionMajor: [33m1[39m,
        httpVersionMinor: [33m1[39m,
        httpVersion: [32m'1.1'[39m,
        complete: [33mtrue[39m,
        rawHeaders: [
          [32m'transfer-encoding'[39m,
          [32m'chunked'[39m,
          [32m'connection'[39m,
          [32m'close'[39m,
          [32m'vary'[39m,
          [32m'Origin, Access-Control-Request-Method, Access-Control-Request-Headers'[39m,
          [32m'vary'[39m,
          [32m'accept-encoding'[39m,
          [32m'content-encoding'[39m,
          [32m'br'[39m,
          [32m'content-type'[39m,
          [32m'text/plain; charset=utf-8'[39m,
          [32m'x-api-node'[39m,
          [32m'995170affe05'[39m,
          [32m'access-control-allow-credentials'[39m,
          [32m'true'[39m,
          [32m'date'[39m,
          [32m'Thu, 09 Oct 2025 07:36:39 GMT'[39m
        ],
        rawTrailers: [],
        joinDuplicateHeaders: [90mundefined[39m,
        aborted: [33mfalse[39m,
        upgrade: [33mfalse[39m,
        url: [32m''[39m,
        method: [1mnull[22m,
        statusCode: [33m403[39m,
        statusMessage: [32m'Forbidden'[39m,
        client: Socket {
          connecting: [33mfalse[39m,
          _hadError: [33mfalse[39m,
          _parent: [1mnull[22m,
          _host: [32m'localhost'[39m,
          _closeAfterHandlingError: [33mfalse[39m,
          _events: {
            close: [36m[Array][39m,
            error: [36m[Function: socketErrorListener][39m,
            prefinish: [90mundefined[39m,
            finish: [90mundefined[39m,
            drain: [90mundefined[39m,
            data: [90mundefined[39m,
            end: [36m[Function: onReadableStreamEnd][39m,
            readable: [90mundefined[39m,
            connect: [90mundefined[39m,
            free: [36m[Function: onFree][39m,
            timeout: [36m[Array][39m,
            agentRemove: [36m[Function: onRemove][39m
          },
          _readableState: ReadableState {
            highWaterMark: [33m16384[39m,
            buffer: [],
            bufferIndex: [33m0[39m,
            length: [33m0[39m,
            pipes: [],
            awaitDrainWriters: [1mnull[22m,
            [[32mSymbol(kState)[39m]: [33m60303732[39m
          },
          _writableState: WritableState {
            highWaterMark: [33m16384[39m,
            length: [33m0[39m,
            corked: [33m0[39m,
            onwrite: [36m[Function: bound onwrite][39m,
            writelen: [33m0[39m,
            bufferedIndex: [33m0[39m,
            pendingcb: [33m0[39m,
            [[32mSymbol(kState)[39m]: [33m1091450228[39m,
            [[32mSymbol(kBufferedValue)[39m]: [1mnull[22m,
            [[32mSymbol(kWriteCbValue)[39m]: [1mnull[22m
          },
          allowHalfOpen: [33mfalse[39m,
          _maxListeners: [90mundefined[39m,
          _eventsCount: [33m6[39m,
          _sockname: [1mnull[22m,
          _pendingData: [1mnull[22m,
          _pendingEncoding: [32m''[39m,
          server: [1mnull[22m,
          _server: [1mnull[22m,
          timeout: [33m30000[39m,
          parser: [1mnull[22m,
          _httpMessage: [36m[Circular *1][39m,
          autoSelectFamilyAttemptedAddresses: [
            [32m'::1:5080'[39m
          ],
          [[32mSymbol(async_id_symbol)[39m]: [33m5822[39m,
          [[32mSymbol(kHandle)[39m]: [1mnull[22m,
          [[32mSymbol(lastWriteQueueSize)[39m]: [33m0[39m,
          [[32mSymbol(timeout)[39m]: Timeout {
            _idleTimeout: [33m-1[39m,
            _idlePrev: [1mnull[22m,
            _idleNext: [1mnull[22m,
            _idleStart: [33m13154[39m,
            _onTimeout: [1mnull[22m,
            _timerArgs: [90mundefined[39m,
            _repeat: [1mnull[22m,
            _destroyed: [33mtrue[39m,
            [[32mSymbol(refed)[39m]: [33mfalse[39m,
            [[32mSymbol(kHasPrimitive)[39m]: [33mfalse[39m,
            [[32mSymbol(asyncId)[39m]: [33m5842[39m,
            [[32mSymbol(triggerId)[39m]: [33m5824[39m,
            [[32mSymbol(kAsyncContextFrame)[39m]: [90mundefined[39m,
            [[32mSymbol(kResourceStore)[39m]: [32m'Logging Integration Log Analytics Integration should get popular pages through controller'[39m
          },
          [[32mSymbol(kBuffer)[39m]: [1mnull[22m,
          [[32mSymbol(kBufferCb)[39m]: [1mnull[22m,
          [[32mSymbol(kBufferGen)[39m]: [1mnull[22m,
          [[32mSymbol(shapeMode)[39m]: [33mtrue[39m,
          [[32mSymbol(kCapture)[39m]: [33mfalse[39m,
          [[32mSymbol(kSetNoDelay)[39m]: [33mtrue[39m,
          [[32mSymbol(kSetKeepAlive)[39m]: [33mtrue[39m,
          [[32mSymbol(kSetKeepAliveInitialDelay)[39m]: [33m60[39m,
          [[32mSymbol(kBytesRead)[39m]: [33m372[39m,
          [[32mSymbol(kBytesWritten)[39m]: [33m655[39m
        },
        _consuming: [33mfalse[39m,
        _dumped: [33mfalse[39m,
        req: [36m[Circular *1][39m,
        _eventsCount: [33m4[39m,
        responseUrl: [32m'http://localhost:5080/api/default/_search'[39m,
        redirects: [],
        [[32mSymbol(shapeMode)[39m]: [33mtrue[39m,
        [[32mSymbol(kCapture)[39m]: [33mfalse[39m,
        [[32mSymbol(kHeaders)[39m]: {
          [32m'transfer-encoding'[39m: [32m'chunked'[39m,
          connection: [32m'close'[39m,
          vary: [32m'Origin, Access-Control-Request-Method, Access-Control-Request-Headers, accept-encoding'[39m,
          [32m'content-type'[39m: [32m'text/plain; charset=utf-8'[39m,
          [32m'x-api-node'[39m: [32m'995170affe05'[39m,
          [32m'access-control-allow-credentials'[39m: [32m'true'[39m,
          date: [32m'Thu, 09 Oct 2025 07:36:39 GMT'[39m
        },
        [[32mSymbol(kHeadersCount)[39m]: [33m18[39m,
        [[32mSymbol(kTrailers)[39m]: [1mnull[22m,
        [[32mSymbol(kTrailersCount)[39m]: [33m0[39m
      },
      aborted: [33mfalse[39m,
      timeoutCb: [36m[Function: emitRequestTimeout][39m,
      upgradeOrConnect: [33mfalse[39m,
      parser: [1mnull[22m,
      maxHeadersCount: [1mnull[22m,
      reusedSocket: [33mfalse[39m,
      host: [32m'localhost'[39m,
      protocol: [32m'http:'[39m,
      _redirectable: Writable {
        _events: {
          close: [90mundefined[39m,
          error: [36m[Function: handleRequestError][39m,
          prefinish: [90mundefined[39m,
          finish: [90mundefined[39m,
          drain: [90mundefined[39m,
          response: [36m[Function: handleResponse][39m,
          socket: [
            [36m[Function: handleRequestSocket][39m,
            [36m[Function: destroyOnTimeout][39m
          ],
          timeout: [90mundefined[39m,
          abort: [90mundefined[39m
        },
        _writableState: WritableState {
          highWaterMark: [33m16384[39m,
          length: [33m0[39m,
          corked: [33m0[39m,
          onwrite: [36m[Function: bound onwrite][39m,
          writelen: [33m0[39m,
          bufferedIndex: [33m0[39m,
          pendingcb: [33m0[39m,
          [[32mSymbol(kState)[39m]: [33m17580812[39m,
          [[32mSymbol(kBufferedValue)[39m]: [1mnull[22m
        },
        _maxListeners: [90mundefined[39m,
        _options: {
          maxRedirects: [33m21[39m,
          maxBodyLength: [33mInfinity[39m,
          protocol: [32m'http:'[39m,
          path: [32m'/api/default/_search'[39m,
          method: [32m'POST'[39m,
          headers: [Object: null prototype] {
            Accept: [32m'application/json, text/plain, */*'[39m,
            [32m'Content-Type'[39m: [32m'application/json'[39m,
            Authorization: [32m'Bearer '[39m,
            [32m'User-Agent'[39m: [32m'axios/1.12.2'[39m,
            [32m'Content-Length'[39m: [32m'379'[39m,
            [32m'Accept-Encoding'[39m: [32m'gzip, compress, deflate, br'[39m
          },
          agents: {
            http: [90mundefined[39m,
            https: [90mundefined[39m
          },
          auth: [90mundefined[39m,
          family: [90mundefined[39m,
          beforeRedirect: [36m[Function: dispatchBeforeRedirect][39m,
          beforeRedirects: {
            proxy: [36m[Function: beforeRedirect][39m
          },
          hostname: [32m'localhost'[39m,
          port: [32m'5080'[39m,
          agent: [90mundefined[39m,
          nativeProtocols: {
            [32m'http:'[39m: [36m[Object][39m,
            [32m'https:'[39m: [36m[Object][39m
          },
          pathname: [32m'/api/default/_search'[39m
        },
        _ended: [33mtrue[39m,
        _ending: [33mtrue[39m,
        _redirectCount: [33m0[39m,
        _redirects: [],
        _requestBodyLength: [33m379[39m,
        _requestBodyBuffers: [],
        _eventsCount: [33m3[39m,
        _onNativeResponse: [36m[Function (anonymous)][39m,
        _currentRequest: [36m[Circular *1][39m,
        _currentUrl: [32m'http://localhost:5080/api/default/_search'[39m,
        _timeout: [1mnull[22m,
        [[32mSymbol(shapeMode)[39m]: [33mtrue[39m,
        [[32mSymbol(kCapture)[39m]: [33mfalse[39m
      },
      [[32mSymbol(shapeMode)[39m]: [33mfalse[39m,
      [[32mSymbol(kCapture)[39m]: [33mfalse[39m,
      [[32mSymbol(kBytesWritten)[39m]: [33m0[39m,
      [[32mSymbol(kNeedDrain)[39m]: [33mfalse[39m,
      [[32mSymbol(corked)[39m]: [33m0[39m,
      [[32mSymbol(kChunkedBuffer)[39m]: [],
      [[32mSymbol(kChunkedLength)[39m]: [33m0[39m,
      [[32mSymbol(kSocket)[39m]: Socket {
        connecting: [33mfalse[39m,
        _hadError: [33mfalse[39m,
        _parent: [1mnull[22m,
        _host: [32m'localhost'[39m,
        _closeAfterHandlingError: [33mfalse[39m,
        _events: {
          close: [
            [36m[Function: onClose][39m,
            [36m[Function: socketCloseListener][39m
          ],
          error: [36m[Function: socketErrorListener][39m,
          prefinish: [90mundefined[39m,
          finish: [90mundefined[39m,
          drain: [90mundefined[39m,
          data: [90mundefined[39m,
          end: [36m[Function: onReadableStreamEnd][39m,
          readable: [90mundefined[39m,
          connect: [90mundefined[39m,
          free: [36m[Function: onFree][39m,
          timeout: [
            [36m[Function: onTimeout][39m,
            [36m[Function (anonymous)][39m
          ],
          agentRemove: [36m[Function: onRemove][39m
        },
        _readableState: ReadableState {
          highWaterMark: [33m16384[39m,
          buffer: [],
          bufferIndex: [33m0[39m,
          length: [33m0[39m,
          pipes: [],
          awaitDrainWriters: [1mnull[22m,
          [[32mSymbol(kState)[39m]: [33m60303732[39m
        },
        _writableState: WritableState {
          highWaterMark: [33m16384[39m,
          length: [33m0[39m,
          corked: [33m0[39m,
          onwrite: [36m[Function: bound onwrite][39m,
          writelen: [33m0[39m,
          bufferedIndex: [33m0[39m,
          pendingcb: [33m0[39m,
          [[32mSymbol(kState)[39m]: [33m1091450228[39m,
          [[32mSymbol(kBufferedValue)[39m]: [1mnull[22m,
          [[32mSymbol(kWriteCbValue)[39m]: [1mnull[22m
        },
        allowHalfOpen: [33mfalse[39m,
        _maxListeners: [90mundefined[39m,
        _eventsCount: [33m6[39m,
        _sockname: [1mnull[22m,
        _pendingData: [1mnull[22m,
        _pendingEncoding: [32m''[39m,
        server: [1mnull[22m,
        _server: [1mnull[22m,
        timeout: [33m30000[39m,
        parser: [1mnull[22m,
        _httpMessage: [36m[Circular *1][39m,
        autoSelectFamilyAttemptedAddresses: [
          [32m'::1:5080'[39m
        ],
        [[32mSymbol(async_id_symbol)[39m]: [33m5822[39m,
        [[32mSymbol(kHandle)[39m]: [1mnull[22m,
        [[32mSymbol(lastWriteQueueSize)[39m]: [33m0[39m,
        [[32mSymbol(timeout)[39m]: Timeout {
          _idleTimeout: [33m-1[39m,
          _idlePrev: [1mnull[22m,
          _idleNext: [1mnull[22m,
          _idleStart: [33m13154[39m,
          _onTimeout: [1mnull[22m,
          _timerArgs: [90mundefined[39m,
          _repeat: [1mnull[22m,
          _destroyed: [33mtrue[39m,
          [[32mSymbol(refed)[39m]: [33mfalse[39m,
          [[32mSymbol(kHasPrimitive)[39m]: [33mfalse[39m,
          [[32mSymbol(asyncId)[39m]: [33m5842[39m,
          [[32mSymbol(triggerId)[39m]: [33m5824[39m,
          [[32mSymbol(kAsyncContextFrame)[39m]: [90mundefined[39m,
          [[32mSymbol(kResourceStore)[39m]: [32m'Logging Integration Log Analytics Integration should get popular pages through controller'[39m
        },
        [[32mSymbol(kBuffer)[39m]: [1mnull[22m,
        [[32mSymbol(kBufferCb)[39m]: [1mnull[22m,
        [[32mSymbol(kBufferGen)[39m]: [1mnull[22m,
        [[32mSymbol(shapeMode)[39m]: [33mtrue[39m,
        [[32mSymbol(kCapture)[39m]: [33mfalse[39m,
        [[32mSymbol(kSetNoDelay)[39m]: [33mtrue[39m,
        [[32mSymbol(kSetKeepAlive)[39m]: [33mtrue[39m,
        [[32mSymbol(kSetKeepAliveInitialDelay)[39m]: [33m60[39m,
        [[32mSymbol(kBytesRead)[39m]: [33m372[39m,
        [[32mSymbol(kBytesWritten)[39m]: [33m655[39m
      },
      [[32mSymbol(kOutHeaders)[39m]: [Object: null prototype] {
        accept: [
          [32m'Accept'[39m,
          [32m'application/json, text/plain, */*'[39m
        ],
        [32m'content-type'[39m: [
          [32m'Content-Type'[39m,
          [32m'application/json'[39m
        ],
        authorization: [
          [32m'Authorization'[39m,
          [32m'Bearer '[39m
        ],
        [32m'user-agent'[39m: [
          [32m'User-Agent'[39m,
          [32m'axios/1.12.2'[39m
        ],
        [32m'content-length'[39m: [
          [32m'Content-Length'[39m,
          [32m'379'[39m
        ],
        [32m'accept-encoding'[39m: [
          [32m'Accept-Encoding'[39m,
          [32m'gzip, compress, deflate, br'[39m
        ],
        host: [
          [32m'Host'[39m,
          [32m'localhost:5080'[39m
        ]
      },
      [[32mSymbol(errored)[39m]: [1mnull[22m,
      [[32mSymbol(kHighWaterMark)[39m]: [33m16384[39m,
      [[32mSymbol(kRejectNonStandardBodyWrites)[39m]: [33mfalse[39m,
      [[32mSymbol(kUniqueHeaders)[39m]: [1mnull[22m
    },
    data: [32m'Not Supported'[39m
  },
  status: [33m403[39m
}
[31m[Nest] 13280  - [39m2025/10/09 15:36:39 [31m  ERROR[39m [38;5;3m[LoggingController] [39m[31mFailed to get popular pages[39m
[31m[Nest] 13280  - [39m2025/10/09 15:36:39 [31m  ERROR[39m [38;5;3m[LoggingController] [39mAxiosError {
  message: [32m'Request failed with status code 403'[39m,
  name: [32m'AxiosError'[39m,
  code: [32m'ERR_BAD_REQUEST'[39m,
  config: {
    transitional: {
      silentJSONParsing: [33mtrue[39m,
      forcedJSONParsing: [33mtrue[39m,
      clarifyTimeoutError: [33mfalse[39m
    },
    adapter: [
      [32m'xhr'[39m,
      [32m'http'[39m,
      [32m'fetch'[39m
    ],
    transformRequest: [
      [36m[Function: transformRequest][39m
    ],
    transformResponse: [
      [36m[Function: transformResponse][39m
    ],
    timeout: [33m30000[39m,
    xsrfCookieName: [32m'XSRF-TOKEN'[39m,
    xsrfHeaderName: [32m'X-XSRF-TOKEN'[39m,
    maxContentLength: [33m-1[39m,
    maxBodyLength: [33m-1[39m,
    env: {
      FormData: [Function: FormData] [FormData] {
        LINE_BREAK: [32m'\r\n'[39m,
        DEFAULT_CONTENT_TYPE: [32m'application/octet-stream'[39m
      },
      Blob: [36m[class Blob][39m
    },
    validateStatus: [36m[Function: validateStatus][39m,
    headers: Object [AxiosHeaders] {
      Accept: [32m'application/json, text/plain, */*'[39m,
      [32m'Content-Type'[39m: [32m'application/json'[39m,
      Authorization: [32m'Bearer '[39m,
      [32m'User-Agent'[39m: [32m'axios/1.12.2'[39m,
      [32m'Content-Length'[39m: [32m'379'[39m,
      [32m'Accept-Encoding'[39m: [32m'gzip, compress, deflate, br'[39m
    },
    cancelToken: CancelToken {
      promise: Promise {
        CanceledError {
          message: [32m'canceled'[39m,
          name: [32m'CanceledError'[39m,
          code: [32m'ERR_CANCELED'[39m
        },
        then: [36m[Function (anonymous)][39m,
        [[32mSymbol(async_id_symbol)[39m]: [33m5816[39m,
        [[32mSymbol(trigger_async_id_symbol)[39m]: [33m5798[39m,
        [[32mSymbol(kResourceStore)[39m]: [32m'Logging Integration Log Analytics Integration should get popular pages through controller'[39m
      },
      _listeners: [1mnull[22m,
      reason: CanceledError {
        message: [32m'canceled'[39m,
        name: [32m'CanceledError'[39m,
        code: [32m'ERR_CANCELED'[39m
      }
    },
    method: [32m'post'[39m,
    url: [32m'http://localhost:5080/api/default/_search'[39m,
    data: [32m`{"query":"\\n      SELECT eventData.page as page,\\n             COUNT(*) as view_count,\\n             COUNT(DISTINCT userId) as unique_users\\n      FROM user-behavior\\n      WHERE eventType = 'PAGE_VIEW' \\n        AND timestamp >= '2023-01-01T00:00:00Z' \\n        AND timestamp <= '2023-01-02T00:00:00Z'\\n      GROUP BY page\\n      ORDER BY view_count DESC\\n      LIMIT 10\\n    "}`[39m,
    allowAbsoluteUrls: [33mtrue[39m
  },
  request: [36m<ref *1>[39m ClientRequest {
    _events: [Object: null prototype] {
      abort: [36m[Function (anonymous)][39m,
      aborted: [36m[Function (anonymous)][39m,
      connect: [36m[Function (anonymous)][39m,
      error: [36m[Function (anonymous)][39m,
      socket: [36m[Function (anonymous)][39m,
      timeout: [36m[Function (anonymous)][39m,
      finish: [36m[Function: requestOnFinish][39m
    },
    _eventsCount: [33m7[39m,
    _maxListeners: [90mundefined[39m,
    outputData: [],
    outputSize: [33m0[39m,
    writable: [33mtrue[39m,
    destroyed: [33mtrue[39m,
    _last: [33mfalse[39m,
    chunkedEncoding: [33mfalse[39m,
    shouldKeepAlive: [33mfalse[39m,
    maxRequestsOnConnectionReached: [33mfalse[39m,
    _defaultKeepAlive: [33mtrue[39m,
    useChunkedEncodingByDefault: [33mtrue[39m,
    sendDate: [33mfalse[39m,
    _removedConnection: [33mfalse[39m,
    _removedContLen: [33mfalse[39m,
    _removedTE: [33mfalse[39m,
    strictContentLength: [33mfalse[39m,
    _contentLength: [33m379[39m,
    _hasBody: [33mtrue[39m,
    _trailer: [32m''[39m,
    finished: [33mtrue[39m,
    _headerSent: [33mtrue[39m,
    _closed: [33mtrue[39m,
    _header: [32m'POST /api/default/_search HTTP/1.1\r\nAccept: application/json, text/plain, */*\r\nContent-Type: application/json\r\nAuthorization: Bearer \r\nUser-Agent: axios/1.12.2\r\nContent-Length: 379\r\nAccept-Encoding: gzip, compress, deflate, br\r\nHost: localhost:5080\r\nConnection: keep-alive\r\n\r\n'[39m,
    _keepAliveTimeout: [33m0[39m,
    _onPendingData: [36m[Function: nop][39m,
    agent: Agent {
      _events: [Object: null prototype] {
        free: [36m[Function (anonymous)][39m,
        newListener: [36m[Function: maybeEnableKeylog][39m
      },
      _eventsCount: [33m2[39m,
      _maxListeners: [90mundefined[39m,
      defaultPort: [33m80[39m,
      protocol: [32m'http:'[39m,
      options: [Object: null prototype] {
        keepAlive: [33mtrue[39m,
        scheduling: [32m'lifo'[39m,
        timeout: [33m5000[39m,
        noDelay: [33mtrue[39m,
        path: [1mnull[22m
      },
      requests: [Object: null prototype] {},
      sockets: [Object: null prototype] {},
      freeSockets: [Object: null prototype] {},
      keepAliveMsecs: [33m1000[39m,
      keepAlive: [33mtrue[39m,
      maxSockets: [33mInfinity[39m,
      maxFreeSockets: [33m256[39m,
      scheduling: [32m'lifo'[39m,
      maxTotalSockets: [33mInfinity[39m,
      totalSocketCount: [33m0[39m,
      agentKeepAliveTimeoutBuffer: [33m1000[39m,
      [[32mSymbol(shapeMode)[39m]: [33mfalse[39m,
      [[32mSymbol(kCapture)[39m]: [33mfalse[39m
    },
    socketPath: [90mundefined[39m,
    method: [32m'POST'[39m,
    maxHeaderSize: [90mundefined[39m,
    insecureHTTPParser: [90mundefined[39m,
    joinDuplicateHeaders: [90mundefined[39m,
    path: [32m'/api/default/_search'[39m,
    _ended: [33mtrue[39m,
    res: IncomingMessage {
      _events: {
        close: [
          [36m[Function (anonymous)][39m,
          [36m[Function: onclose][39m,
          [36m[Function: onclose][39m
        ],
        error: [
          [36m[Function: onerror][39m,
          [36m[Function: onError][39m,
          [36m[Function: onerror][39m
        ],
        data: [90mundefined[39m,
        end: [
          [36m[Function: responseOnEnd][39m,
          [36m[Function: onend][39m,
          [36m[Function: onend][39m
        ],
        readable: [90mundefined[39m,
        finish: [
          [36m[Function: onfinish][39m,
          [36m[Function: onfinish][39m
        ]
      },
      _readableState: ReadableState {
        highWaterMark: [33m16384[39m,
        buffer: [],
        bufferIndex: [33m0[39m,
        length: [33m0[39m,
        pipes: [],
        awaitDrainWriters: [1mnull[22m,
        [[32mSymbol(kState)[39m]: [33m110892924[39m
      },
      _maxListeners: [90mundefined[39m,
      socket: Socket {
        connecting: [33mfalse[39m,
        _hadError: [33mfalse[39m,
        _parent: [1mnull[22m,
        _host: [32m'localhost'[39m,
        _closeAfterHandlingError: [33mfalse[39m,
        _events: {
          close: [
            [36m[Function: onClose][39m,
            [36m[Function: socketCloseListener][39m
          ],
          error: [36m[Function: socketErrorListener][39m,
          prefinish: [90mundefined[39m,
          finish: [90mundefined[39m,
          drain: [90mundefined[39m,
          data: [90mundefined[39m,
          end: [36m[Function: onReadableStreamEnd][39m,
          readable: [90mundefined[39m,
          connect: [90mundefined[39m,
          free: [36m[Function: onFree][39m,
          timeout: [
            [36m[Function: onTimeout][39m,
            [36m[Function (anonymous)][39m
          ],
          agentRemove: [36m[Function: onRemove][39m
        },
        _readableState: ReadableState {
          highWaterMark: [33m16384[39m,
          buffer: [],
          bufferIndex: [33m0[39m,
          length: [33m0[39m,
          pipes: [],
          awaitDrainWriters: [1mnull[22m,
          [[32mSymbol(kState)[39m]: [33m60303732[39m
        },
        _writableState: WritableState {
          highWaterMark: [33m16384[39m,
          length: [33m0[39m,
          corked: [33m0[39m,
          onwrite: [36m[Function: bound onwrite][39m,
          writelen: [33m0[39m,
          bufferedIndex: [33m0[39m,
          pendingcb: [33m0[39m,
          [[32mSymbol(kState)[39m]: [33m1091450228[39m,
          [[32mSymbol(kBufferedValue)[39m]: [1mnull[22m,
          [[32mSymbol(kWriteCbValue)[39m]: [1mnull[22m
        },
        allowHalfOpen: [33mfalse[39m,
        _maxListeners: [90mundefined[39m,
        _eventsCount: [33m6[39m,
        _sockname: [1mnull[22m,
        _pendingData: [1mnull[22m,
        _pendingEncoding: [32m''[39m,
        server: [1mnull[22m,
        _server: [1mnull[22m,
        timeout: [33m30000[39m,
        parser: [1mnull[22m,
        _httpMessage: [36m[Circular *1][39m,
        autoSelectFamilyAttemptedAddresses: [
          [32m'::1:5080'[39m
        ],
        [[32mSymbol(async_id_symbol)[39m]: [33m5822[39m,
        [[32mSymbol(kHandle)[39m]: [1mnull[22m,
        [[32mSymbol(lastWriteQueueSize)[39m]: [33m0[39m,
        [[32mSymbol(timeout)[39m]: Timeout {
          _idleTimeout: [33m-1[39m,
          _idlePrev: [1mnull[22m,
          _idleNext: [1mnull[22m,
          _idleStart: [33m13154[39m,
          _onTimeout: [1mnull[22m,
          _timerArgs: [90mundefined[39m,
          _repeat: [1mnull[22m,
          _destroyed: [33mtrue[39m,
          [[32mSymbol(refed)[39m]: [33mfalse[39m,
          [[32mSymbol(kHasPrimitive)[39m]: [33mfalse[39m,
          [[32mSymbol(asyncId)[39m]: [33m5842[39m,
          [[32mSymbol(triggerId)[39m]: [33m5824[39m,
          [[32mSymbol(kAsyncContextFrame)[39m]: [90mundefined[39m,
          [[32mSymbol(kResourceStore)[39m]: [32m'Logging Integration Log Analytics Integration should get popular pages through controller'[39m
        },
        [[32mSymbol(kBuffer)[39m]: [1mnull[22m,
        [[32mSymbol(kBufferCb)[39m]: [1mnull[22m,
        [[32mSymbol(kBufferGen)[39m]: [1mnull[22m,
        [[32mSymbol(shapeMode)[39m]: [33mtrue[39m,
        [[32mSymbol(kCapture)[39m]: [33mfalse[39m,
        [[32mSymbol(kSetNoDelay)[39m]: [33mtrue[39m,
        [[32mSymbol(kSetKeepAlive)[39m]: [33mtrue[39m,
        [[32mSymbol(kSetKeepAliveInitialDelay)[39m]: [33m60[39m,
        [[32mSymbol(kBytesRead)[39m]: [33m372[39m,
        [[32mSymbol(kBytesWritten)[39m]: [33m655[39m
      },
      httpVersionMajor: [33m1[39m,
      httpVersionMinor: [33m1[39m,
      httpVersion: [32m'1.1'[39m,
      complete: [33mtrue[39m,
      rawHeaders: [
        [32m'transfer-encoding'[39m,
        [32m'chunked'[39m,
        [32m'connection'[39m,
        [32m'close'[39m,
        [32m'vary'[39m,
        [32m'Origin, Access-Control-Request-Method, Access-Control-Request-Headers'[39m,
        [32m'vary'[39m,
        [32m'accept-encoding'[39m,
        [32m'content-encoding'[39m,
        [32m'br'[39m,
        [32m'content-type'[39m,
        [32m'text/plain; charset=utf-8'[39m,
        [32m'x-api-node'[39m,
        [32m'995170affe05'[39m,
        [32m'access-control-allow-credentials'[39m,
        [32m'true'[39m,
        [32m'date'[39m,
        [32m'Thu, 09 Oct 2025 07:36:39 GMT'[39m
      ],
      rawTrailers: [],
      joinDuplicateHeaders: [90mundefined[39m,
      aborted: [33mfalse[39m,
      upgrade: [33mfalse[39m,
      url: [32m''[39m,
      method: [1mnull[22m,
      statusCode: [33m403[39m,
      statusMessage: [32m'Forbidden'[39m,
      client: Socket {
        connecting: [33mfalse[39m,
        _hadError: [33mfalse[39m,
        _parent: [1mnull[22m,
        _host: [32m'localhost'[39m,
        _closeAfterHandlingError: [33mfalse[39m,
        _events: {
          close: [
            [36m[Function: onClose][39m,
            [36m[Function: socketCloseListener][39m
          ],
          error: [36m[Function: socketErrorListener][39m,
          prefinish: [90mundefined[39m,
          finish: [90mundefined[39m,
          drain: [90mundefined[39m,
          data: [90mundefined[39m,
          end: [36m[Function: onReadableStreamEnd][39m,
          readable: [90mundefined[39m,
          connect: [90mundefined[39m,
          free: [36m[Function: onFree][39m,
          timeout: [
            [36m[Function: onTimeout][39m,
            [36m[Function (anonymous)][39m
          ],
          agentRemove: [36m[Function: onRemove][39m
        },
        _readableState: ReadableState {
          highWaterMark: [33m16384[39m,
          buffer: [],
          bufferIndex: [33m0[39m,
          length: [33m0[39m,
          pipes: [],
          awaitDrainWriters: [1mnull[22m,
          [[32mSymbol(kState)[39m]: [33m60303732[39m
        },
        _writableState: WritableState {
          highWaterMark: [33m16384[39m,
          length: [33m0[39m,
          corked: [33m0[39m,
          onwrite: [36m[Function: bound onwrite][39m,
          writelen: [33m0[39m,
          bufferedIndex: [33m0[39m,
          pendingcb: [33m0[39m,
          [[32mSymbol(kState)[39m]: [33m1091450228[39m,
          [[32mSymbol(kBufferedValue)[39m]: [1mnull[22m,
          [[32mSymbol(kWriteCbValue)[39m]: [1mnull[22m
        },
        allowHalfOpen: [33mfalse[39m,
        _maxListeners: [90mundefined[39m,
        _eventsCount: [33m6[39m,
        _sockname: [1mnull[22m,
        _pendingData: [1mnull[22m,
        _pendingEncoding: [32m''[39m,
        server: [1mnull[22m,
        _server: [1mnull[22m,
        timeout: [33m30000[39m,
        parser: [1mnull[22m,
        _httpMessage: [36m[Circular *1][39m,
        autoSelectFamilyAttemptedAddresses: [
          [32m'::1:5080'[39m
        ],
        [[32mSymbol(async_id_symbol)[39m]: [33m5822[39m,
        [[32mSymbol(kHandle)[39m]: [1mnull[22m,
        [[32mSymbol(lastWriteQueueSize)[39m]: [33m0[39m,
        [[32mSymbol(timeout)[39m]: Timeout {
          _idleTimeout: [33m-1[39m,
          _idlePrev: [1mnull[22m,
          _idleNext: [1mnull[22m,
          _idleStart: [33m13154[39m,
          _onTimeout: [1mnull[22m,
          _timerArgs: [90mundefined[39m,
          _repeat: [1mnull[22m,
          _destroyed: [33mtrue[39m,
          [[32mSymbol(refed)[39m]: [33mfalse[39m,
          [[32mSymbol(kHasPrimitive)[39m]: [33mfalse[39m,
          [[32mSymbol(asyncId)[39m]: [33m5842[39m,
          [[32mSymbol(triggerId)[39m]: [33m5824[39m,
          [[32mSymbol(kAsyncContextFrame)[39m]: [90mundefined[39m,
          [[32mSymbol(kResourceStore)[39m]: [32m'Logging Integration Log Analytics Integration should get popular pages through controller'[39m
        },
        [[32mSymbol(kBuffer)[39m]: [1mnull[22m,
        [[32mSymbol(kBufferCb)[39m]: [1mnull[22m,
        [[32mSymbol(kBufferGen)[39m]: [1mnull[22m,
        [[32mSymbol(shapeMode)[39m]: [33mtrue[39m,
        [[32mSymbol(kCapture)[39m]: [33mfalse[39m,
        [[32mSymbol(kSetNoDelay)[39m]: [33mtrue[39m,
        [[32mSymbol(kSetKeepAlive)[39m]: [33mtrue[39m,
        [[32mSymbol(kSetKeepAliveInitialDelay)[39m]: [33m60[39m,
        [[32mSymbol(kBytesRead)[39m]: [33m372[39m,
        [[32mSymbol(kBytesWritten)[39m]: [33m655[39m
      },
      _consuming: [33mfalse[39m,
      _dumped: [33mfalse[39m,
      req: [36m[Circular *1][39m,
      _eventsCount: [33m4[39m,
      responseUrl: [32m'http://localhost:5080/api/default/_search'[39m,
      redirects: [],
      [[32mSymbol(shapeMode)[39m]: [33mtrue[39m,
      [[32mSymbol(kCapture)[39m]: [33mfalse[39m,
      [[32mSymbol(kHeaders)[39m]: {
        [32m'transfer-encoding'[39m: [32m'chunked'[39m,
        connection: [32m'close'[39m,
        vary: [32m'Origin, Access-Control-Request-Method, Access-Control-Request-Headers, accept-encoding'[39m,
        [32m'content-type'[39m: [32m'text/plain; charset=utf-8'[39m,
        [32m'x-api-node'[39m: [32m'995170affe05'[39m,
        [32m'access-control-allow-credentials'[39m: [32m'true'[39m,
        date: [32m'Thu, 09 Oct 2025 07:36:39 GMT'[39m
      },
      [[32mSymbol(kHeadersCount)[39m]: [33m18[39m,
      [[32mSymbol(kTrailers)[39m]: [1mnull[22m,
      [[32mSymbol(kTrailersCount)[39m]: [33m0[39m
    },
    aborted: [33mfalse[39m,
    timeoutCb: [36m[Function: emitRequestTimeout][39m,
    upgradeOrConnect: [33mfalse[39m,
    parser: [1mnull[22m,
    maxHeadersCount: [1mnull[22m,
    reusedSocket: [33mfalse[39m,
    host: [32m'localhost'[39m,
    protocol: [32m'http:'[39m,
    _redirectable: Writable {
      _events: {
        close: [90mundefined[39m,
        error: [36m[Function: handleRequestError][39m,
        prefinish: [90mundefined[39m,
        finish: [90mundefined[39m,
        drain: [90mundefined[39m,
        response: [36m[Function: handleResponse][39m,
        socket: [
          [36m[Function: handleRequestSocket][39m,
          [36m[Function: destroyOnTimeout][39m
        ],
        timeout: [90mundefined[39m,
        abort: [90mundefined[39m
      },
      _writableState: WritableState {
        highWaterMark: [33m16384[39m,
        length: [33m0[39m,
        corked: [33m0[39m,
        onwrite: [36m[Function: bound onwrite][39m,
        writelen: [33m0[39m,
        bufferedIndex: [33m0[39m,
        pendingcb: [33m0[39m,
        [[32mSymbol(kState)[39m]: [33m17580812[39m,
        [[32mSymbol(kBufferedValue)[39m]: [1mnull[22m
      },
      _maxListeners: [90mundefined[39m,
      _options: {
        maxRedirects: [33m21[39m,
        maxBodyLength: [33mInfinity[39m,
        protocol: [32m'http:'[39m,
        path: [32m'/api/default/_search'[39m,
        method: [32m'POST'[39m,
        headers: [Object: null prototype] {
          Accept: [32m'application/json, text/plain, */*'[39m,
          [32m'Content-Type'[39m: [32m'application/json'[39m,
          Authorization: [32m'Bearer '[39m,
          [32m'User-Agent'[39m: [32m'axios/1.12.2'[39m,
          [32m'Content-Length'[39m: [32m'379'[39m,
          [32m'Accept-Encoding'[39m: [32m'gzip, compress, deflate, br'[39m
        },
        agents: {
          http: [90mundefined[39m,
          https: [90mundefined[39m
        },
        auth: [90mundefined[39m,
        family: [90mundefined[39m,
        beforeRedirect: [36m[Function: dispatchBeforeRedirect][39m,
        beforeRedirects: {
          proxy: [36m[Function: beforeRedirect][39m
        },
        hostname: [32m'localhost'[39m,
        port: [32m'5080'[39m,
        agent: [90mundefined[39m,
        nativeProtocols: {
          [32m'http:'[39m: {
            _connectionListener: [36m[Function: connectionListener][39m,
            METHODS: [36m[Array][39m,
            STATUS_CODES: [36m[Object][39m,
            Agent: [36m[Function][39m,
            ClientRequest: [36m[Function: ClientRequest][39m,
            IncomingMessage: [36m[Function: IncomingMessage][39m,
            OutgoingMessage: [36m[Function: OutgoingMessage][39m,
            Server: [36m[Function: Server][39m,
            ServerResponse: [36m[Function: ServerResponse][39m,
            createServer: [36m[Function: createServer][39m,
            validateHeaderName: [36m[Function][39m,
            validateHeaderValue: [36m[Function][39m,
            get: [36m[Function: get][39m,
            request: [36m[Function: request][39m,
            setMaxIdleHTTPParsers: [36m[Function: setMaxIdleHTTPParsers][39m,
            maxHeaderSize: [36m[Getter][39m,
            globalAgent: [36m[Getter/Setter][39m,
            WebSocket: [36m[Getter][39m,
            CloseEvent: [36m[Getter][39m,
            MessageEvent: [36m[Getter][39m
          },
          [32m'https:'[39m: {
            Agent: [36m[Function: Agent][39m,
            globalAgent: [36m[Agent][39m,
            Server: [36m[Function: Server][39m,
            createServer: [36m[Function: createServer][39m,
            get: [36m[Function: get][39m,
            request: [36m[Function: request][39m
          }
        },
        pathname: [32m'/api/default/_search'[39m
      },
      _ended: [33mtrue[39m,
      _ending: [33mtrue[39m,
      _redirectCount: [33m0[39m,
      _redirects: [],
      _requestBodyLength: [33m379[39m,
      _requestBodyBuffers: [],
      _eventsCount: [33m3[39m,
      _onNativeResponse: [36m[Function (anonymous)][39m,
      _currentRequest: [36m[Circular *1][39m,
      _currentUrl: [32m'http://localhost:5080/api/default/_search'[39m,
      _timeout: [1mnull[22m,
      [[32mSymbol(shapeMode)[39m]: [33mtrue[39m,
      [[32mSymbol(kCapture)[39m]: [33mfalse[39m
    },
    [[32mSymbol(shapeMode)[39m]: [33mfalse[39m,
    [[32mSymbol(kCapture)[39m]: [33mfalse[39m,
    [[32mSymbol(kBytesWritten)[39m]: [33m0[39m,
    [[32mSymbol(kNeedDrain)[39m]: [33mfalse[39m,
    [[32mSymbol(corked)[39m]: [33m0[39m,
    [[32mSymbol(kChunkedBuffer)[39m]: [],
    [[32mSymbol(kChunkedLength)[39m]: [33m0[39m,
    [[32mSymbol(kSocket)[39m]: Socket {
      connecting: [33mfalse[39m,
      _hadError: [33mfalse[39m,
      _parent: [1mnull[22m,
      _host: [32m'localhost'[39m,
      _closeAfterHandlingError: [33mfalse[39m,
      _events: {
        close: [
          [36m[Function: onClose][39m,
          [36m[Function: socketCloseListener][39m
        ],
        error: [36m[Function: socketErrorListener][39m,
        prefinish: [90mundefined[39m,
        finish: [90mundefined[39m,
        drain: [90mundefined[39m,
        data: [90mundefined[39m,
        end: [36m[Function: onReadableStreamEnd][39m,
        readable: [90mundefined[39m,
        connect: [90mundefined[39m,
        free: [36m[Function: onFree][39m,
        timeout: [
          [36m[Function: onTimeout][39m,
          [36m[Function (anonymous)][39m
        ],
        agentRemove: [36m[Function: onRemove][39m
      },
      _readableState: ReadableState {
        highWaterMark: [33m16384[39m,
        buffer: [],
        bufferIndex: [33m0[39m,
        length: [33m0[39m,
        pipes: [],
        awaitDrainWriters: [1mnull[22m,
        [[32mSymbol(kState)[39m]: [33m60303732[39m
      },
      _writableState: WritableState {
        highWaterMark: [33m16384[39m,
        length: [33m0[39m,
        corked: [33m0[39m,
        onwrite: [36m[Function: bound onwrite][39m,
        writelen: [33m0[39m,
        bufferedIndex: [33m0[39m,
        pendingcb: [33m0[39m,
        [[32mSymbol(kState)[39m]: [33m1091450228[39m,
        [[32mSymbol(kBufferedValue)[39m]: [1mnull[22m,
        [[32mSymbol(kWriteCbValue)[39m]: [1mnull[22m
      },
      allowHalfOpen: [33mfalse[39m,
      _maxListeners: [90mundefined[39m,
      _eventsCount: [33m6[39m,
      _sockname: [1mnull[22m,
      _pendingData: [1mnull[22m,
      _pendingEncoding: [32m''[39m,
      server: [1mnull[22m,
      _server: [1mnull[22m,
      timeout: [33m30000[39m,
      parser: [1mnull[22m,
      _httpMessage: [36m[Circular *1][39m,
      autoSelectFamilyAttemptedAddresses: [
        [32m'::1:5080'[39m
      ],
      [[32mSymbol(async_id_symbol)[39m]: [33m5822[39m,
      [[32mSymbol(kHandle)[39m]: [1mnull[22m,
      [[32mSymbol(lastWriteQueueSize)[39m]: [33m0[39m,
      [[32mSymbol(timeout)[39m]: Timeout {
        _idleTimeout: [33m-1[39m,
        _idlePrev: [1mnull[22m,
        _idleNext: [1mnull[22m,
        _idleStart: [33m13154[39m,
        _onTimeout: [1mnull[22m,
        _timerArgs: [90mundefined[39m,
        _repeat: [1mnull[22m,
        _destroyed: [33mtrue[39m,
        [[32mSymbol(refed)[39m]: [33mfalse[39m,
        [[32mSymbol(kHasPrimitive)[39m]: [33mfalse[39m,
        [[32mSymbol(asyncId)[39m]: [33m5842[39m,
        [[32mSymbol(triggerId)[39m]: [33m5824[39m,
        [[32mSymbol(kAsyncContextFrame)[39m]: [90mundefined[39m,
        [[32mSymbol(kResourceStore)[39m]: [32m'Logging Integration Log Analytics Integration should get popular pages through controller'[39m
      },
      [[32mSymbol(kBuffer)[39m]: [1mnull[22m,
      [[32mSymbol(kBufferCb)[39m]: [1mnull[22m,
      [[32mSymbol(kBufferGen)[39m]: [1mnull[22m,
      [[32mSymbol(shapeMode)[39m]: [33mtrue[39m,
      [[32mSymbol(kCapture)[39m]: [33mfalse[39m,
      [[32mSymbol(kSetNoDelay)[39m]: [33mtrue[39m,
      [[32mSymbol(kSetKeepAlive)[39m]: [33mtrue[39m,
      [[32mSymbol(kSetKeepAliveInitialDelay)[39m]: [33m60[39m,
      [[32mSymbol(kBytesRead)[39m]: [33m372[39m,
      [[32mSymbol(kBytesWritten)[39m]: [33m655[39m
    },
    [[32mSymbol(kOutHeaders)[39m]: [Object: null prototype] {
      accept: [
        [32m'Accept'[39m,
        [32m'application/json, text/plain, */*'[39m
      ],
      [32m'content-type'[39m: [
        [32m'Content-Type'[39m,
        [32m'application/json'[39m
      ],
      authorization: [
        [32m'Authorization'[39m,
        [32m'Bearer '[39m
      ],
      [32m'user-agent'[39m: [
        [32m'User-Agent'[39m,
        [32m'axios/1.12.2'[39m
      ],
      [32m'content-length'[39m: [
        [32m'Content-Length'[39m,
        [32m'379'[39m
      ],
      [32m'accept-encoding'[39m: [
        [32m'Accept-Encoding'[39m,
        [32m'gzip, compress, deflate, br'[39m
      ],
      host: [
        [32m'Host'[39m,
        [32m'localhost:5080'[39m
      ]
    },
    [[32mSymbol(errored)[39m]: [1mnull[22m,
    [[32mSymbol(kHighWaterMark)[39m]: [33m16384[39m,
    [[32mSymbol(kRejectNonStandardBodyWrites)[39m]: [33mfalse[39m,
    [[32mSymbol(kUniqueHeaders)[39m]: [1mnull[22m
  },
  response: {
    status: [33m403[39m,
    statusText: [32m'Forbidden'[39m,
    headers: Object [AxiosHeaders] {
      [32m'transfer-encoding'[39m: [32m'chunked'[39m,
      connection: [32m'close'[39m,
      vary: [32m'Origin, Access-Control-Request-Method, Access-Control-Request-Headers, accept-encoding'[39m,
      [32m'content-type'[39m: [32m'text/plain; charset=utf-8'[39m,
      [32m'x-api-node'[39m: [32m'995170affe05'[39m,
      [32m'access-control-allow-credentials'[39m: [32m'true'[39m,
      date: [32m'Thu, 09 Oct 2025 07:36:39 GMT'[39m
    },
    config: {
      transitional: {
        silentJSONParsing: [33mtrue[39m,
        forcedJSONParsing: [33mtrue[39m,
        clarifyTimeoutError: [33mfalse[39m
      },
      adapter: [
        [32m'xhr'[39m,
        [32m'http'[39m,
        [32m'fetch'[39m
      ],
      transformRequest: [
        [36m[Function: transformRequest][39m
      ],
      transformResponse: [
        [36m[Function: transformResponse][39m
      ],
      timeout: [33m30000[39m,
      xsrfCookieName: [32m'XSRF-TOKEN'[39m,
      xsrfHeaderName: [32m'X-XSRF-TOKEN'[39m,
      maxContentLength: [33m-1[39m,
      maxBodyLength: [33m-1[39m,
      env: {
        FormData: [Function: FormData] [FormData] {
          LINE_BREAK: [32m'\r\n'[39m,
          DEFAULT_CONTENT_TYPE: [32m'application/octet-stream'[39m
        },
        Blob: [36m[class Blob][39m
      },
      validateStatus: [36m[Function: validateStatus][39m,
      headers: Object [AxiosHeaders] {
        Accept: [32m'application/json, text/plain, */*'[39m,
        [32m'Content-Type'[39m: [32m'application/json'[39m,
        Authorization: [32m'Bearer '[39m,
        [32m'User-Agent'[39m: [32m'axios/1.12.2'[39m,
        [32m'Content-Length'[39m: [32m'379'[39m,
        [32m'Accept-Encoding'[39m: [32m'gzip, compress, deflate, br'[39m
      },
      cancelToken: CancelToken {
        promise: Promise {
          CanceledError {
            message: [32m'canceled'[39m,
            name: [32m'CanceledError'[39m,
            code: [32m'ERR_CANCELED'[39m
          },
          then: [36m[Function (anonymous)][39m,
          [[32mSymbol(async_id_symbol)[39m]: [33m5816[39m,
          [[32mSymbol(trigger_async_id_symbol)[39m]: [33m5798[39m,
          [[32mSymbol(kResourceStore)[39m]: [32m'Logging Integration Log Analytics Integration should get popular pages through controller'[39m
        },
        _listeners: [1mnull[22m,
        reason: CanceledError {
          message: [32m'canceled'[39m,
          name: [32m'CanceledError'[39m,
          code: [32m'ERR_CANCELED'[39m
        }
      },
      method: [32m'post'[39m,
      url: [32m'http://localhost:5080/api/default/_search'[39m,
      data: [32m`{"query":"\\n      SELECT eventData.page as page,\\n             COUNT(*) as view_count,\\n             COUNT(DISTINCT userId) as unique_users\\n      FROM user-behavior\\n      WHERE eventType = 'PAGE_VIEW' \\n        AND timestamp >= '2023-01-01T00:00:00Z' \\n        AND timestamp <= '2023-01-02T00:00:00Z'\\n      GROUP BY page\\n      ORDER BY view_count DESC\\n      LIMIT 10\\n    "}`[39m,
      allowAbsoluteUrls: [33mtrue[39m
    },
    request: [36m<ref *1>[39m ClientRequest {
      _events: [Object: null prototype] {
        abort: [36m[Function (anonymous)][39m,
        aborted: [36m[Function (anonymous)][39m,
        connect: [36m[Function (anonymous)][39m,
        error: [36m[Function (anonymous)][39m,
        socket: [36m[Function (anonymous)][39m,
        timeout: [36m[Function (anonymous)][39m,
        finish: [36m[Function: requestOnFinish][39m
      },
      _eventsCount: [33m7[39m,
      _maxListeners: [90mundefined[39m,
      outputData: [],
      outputSize: [33m0[39m,
      writable: [33mtrue[39m,
      destroyed: [33mtrue[39m,
      _last: [33mfalse[39m,
      chunkedEncoding: [33mfalse[39m,
      shouldKeepAlive: [33mfalse[39m,
      maxRequestsOnConnectionReached: [33mfalse[39m,
      _defaultKeepAlive: [33mtrue[39m,
      useChunkedEncodingByDefault: [33mtrue[39m,
      sendDate: [33mfalse[39m,
      _removedConnection: [33mfalse[39m,
      _removedContLen: [33mfalse[39m,
      _removedTE: [33mfalse[39m,
      strictContentLength: [33mfalse[39m,
      _contentLength: [33m379[39m,
      _hasBody: [33mtrue[39m,
      _trailer: [32m''[39m,
      finished: [33mtrue[39m,
      _headerSent: [33mtrue[39m,
      _closed: [33mtrue[39m,
      _header: [32m'POST /api/default/_search HTTP/1.1\r\nAccept: application/json, text/plain, */*\r\nContent-Type: application/json\r\nAuthorization: Bearer \r\nUser-Agent: axios/1.12.2\r\nContent-Length: 379\r\nAccept-Encoding: gzip, compress, deflate, br\r\nHost: localhost:5080\r\nConnection: keep-alive\r\n\r\n'[39m,
      _keepAliveTimeout: [33m0[39m,
      _onPendingData: [36m[Function: nop][39m,
      agent: Agent {
        _events: [Object: null prototype] {
          free: [36m[Function (anonymous)][39m,
          newListener: [36m[Function: maybeEnableKeylog][39m
        },
        _eventsCount: [33m2[39m,
        _maxListeners: [90mundefined[39m,
        defaultPort: [33m80[39m,
        protocol: [32m'http:'[39m,
        options: [Object: null prototype] {
          keepAlive: [33mtrue[39m,
          scheduling: [32m'lifo'[39m,
          timeout: [33m5000[39m,
          noDelay: [33mtrue[39m,
          path: [1mnull[22m
        },
        requests: [Object: null prototype] {},
        sockets: [Object: null prototype] {},
        freeSockets: [Object: null prototype] {},
        keepAliveMsecs: [33m1000[39m,
        keepAlive: [33mtrue[39m,
        maxSockets: [33mInfinity[39m,
        maxFreeSockets: [33m256[39m,
        scheduling: [32m'lifo'[39m,
        maxTotalSockets: [33mInfinity[39m,
        totalSocketCount: [33m0[39m,
        agentKeepAliveTimeoutBuffer: [33m1000[39m,
        [[32mSymbol(shapeMode)[39m]: [33mfalse[39m,
        [[32mSymbol(kCapture)[39m]: [33mfalse[39m
      },
      socketPath: [90mundefined[39m,
      method: [32m'POST'[39m,
      maxHeaderSize: [90mundefined[39m,
      insecureHTTPParser: [90mundefined[39m,
      joinDuplicateHeaders: [90mundefined[39m,
      path: [32m'/api/default/_search'[39m,
      _ended: [33mtrue[39m,
      res: IncomingMessage {
        _events: {
          close: [
            [36m[Function (anonymous)][39m,
            [36m[Function: onclose][39m,
            [36m[Function: onclose][39m
          ],
          error: [
            [36m[Function: onerror][39m,
            [36m[Function: onError][39m,
            [36m[Function: onerror][39m
          ],
          data: [90mundefined[39m,
          end: [
            [36m[Function: responseOnEnd][39m,
            [36m[Function: onend][39m,
            [36m[Function: onend][39m
          ],
          readable: [90mundefined[39m,
          finish: [
            [36m[Function: onfinish][39m,
            [36m[Function: onfinish][39m
          ]
        },
        _readableState: ReadableState {
          highWaterMark: [33m16384[39m,
          buffer: [],
          bufferIndex: [33m0[39m,
          length: [33m0[39m,
          pipes: [],
          awaitDrainWriters: [1mnull[22m,
          [[32mSymbol(kState)[39m]: [33m110892924[39m
        },
        _maxListeners: [90mundefined[39m,
        socket: Socket {
          connecting: [33mfalse[39m,
          _hadError: [33mfalse[39m,
          _parent: [1mnull[22m,
          _host: [32m'localhost'[39m,
          _closeAfterHandlingError: [33mfalse[39m,
          _events: {
            close: [36m[Array][39m,
            error: [36m[Function: socketErrorListener][39m,
            prefinish: [90mundefined[39m,
            finish: [90mundefined[39m,
            drain: [90mundefined[39m,
            data: [90mundefined[39m,
            end: [36m[Function: onReadableStreamEnd][39m,
            readable: [90mundefined[39m,
            connect: [90mundefined[39m,
            free: [36m[Function: onFree][39m,
            timeout: [36m[Array][39m,
            agentRemove: [36m[Function: onRemove][39m
          },
          _readableState: ReadableState {
            highWaterMark: [33m16384[39m,
            buffer: [],
            bufferIndex: [33m0[39m,
            length: [33m0[39m,
            pipes: [],
            awaitDrainWriters: [1mnull[22m,
            [[32mSymbol(kState)[39m]: [33m60303732[39m
          },
          _writableState: WritableState {
            highWaterMark: [33m16384[39m,
            length: [33m0[39m,
            corked: [33m0[39m,
            onwrite: [36m[Function: bound onwrite][39m,
            writelen: [33m0[39m,
            bufferedIndex: [33m0[39m,
            pendingcb: [33m0[39m,
            [[32mSymbol(kState)[39m]: [33m1091450228[39m,
            [[32mSymbol(kBufferedValue)[39m]: [1mnull[22m,
            [[32mSymbol(kWriteCbValue)[39m]: [1mnull[22m
          },
          allowHalfOpen: [33mfalse[39m,
          _maxListeners: [90mundefined[39m,
          _eventsCount: [33m6[39m,
          _sockname: [1mnull[22m,
          _pendingData: [1mnull[22m,
          _pendingEncoding: [32m''[39m,
          server: [1mnull[22m,
          _server: [1mnull[22m,
          timeout: [33m30000[39m,
          parser: [1mnull[22m,
          _httpMessage: [36m[Circular *1][39m,
          autoSelectFamilyAttemptedAddresses: [
            [32m'::1:5080'[39m
          ],
          [[32mSymbol(async_id_symbol)[39m]: [33m5822[39m,
          [[32mSymbol(kHandle)[39m]: [1mnull[22m,
          [[32mSymbol(lastWriteQueueSize)[39m]: [33m0[39m,
          [[32mSymbol(timeout)[39m]: Timeout {
            _idleTimeout: [33m-1[39m,
            _idlePrev: [1mnull[22m,
            _idleNext: [1mnull[22m,
            _idleStart: [33m13154[39m,
            _onTimeout: [1mnull[22m,
            _timerArgs: [90mundefined[39m,
            _repeat: [1mnull[22m,
            _destroyed: [33mtrue[39m,
            [[32mSymbol(refed)[39m]: [33mfalse[39m,
            [[32mSymbol(kHasPrimitive)[39m]: [33mfalse[39m,
            [[32mSymbol(asyncId)[39m]: [33m5842[39m,
            [[32mSymbol(triggerId)[39m]: [33m5824[39m,
            [[32mSymbol(kAsyncContextFrame)[39m]: [90mundefined[39m,
            [[32mSymbol(kResourceStore)[39m]: [32m'Logging Integration Log Analytics Integration should get popular pages through controller'[39m
          },
          [[32mSymbol(kBuffer)[39m]: [1mnull[22m,
          [[32mSymbol(kBufferCb)[39m]: [1mnull[22m,
          [[32mSymbol(kBufferGen)[39m]: [1mnull[22m,
          [[32mSymbol(shapeMode)[39m]: [33mtrue[39m,
          [[32mSymbol(kCapture)[39m]: [33mfalse[39m,
          [[32mSymbol(kSetNoDelay)[39m]: [33mtrue[39m,
          [[32mSymbol(kSetKeepAlive)[39m]: [33mtrue[39m,
          [[32mSymbol(kSetKeepAliveInitialDelay)[39m]: [33m60[39m,
          [[32mSymbol(kBytesRead)[39m]: [33m372[39m,
          [[32mSymbol(kBytesWritten)[39m]: [33m655[39m
        },
        httpVersionMajor: [33m1[39m,
        httpVersionMinor: [33m1[39m,
        httpVersion: [32m'1.1'[39m,
        complete: [33mtrue[39m,
        rawHeaders: [
          [32m'transfer-encoding'[39m,
          [32m'chunked'[39m,
          [32m'connection'[39m,
          [32m'close'[39m,
          [32m'vary'[39m,
          [32m'Origin, Access-Control-Request-Method, Access-Control-Request-Headers'[39m,
          [32m'vary'[39m,
          [32m'accept-encoding'[39m,
          [32m'content-encoding'[39m,
          [32m'br'[39m,
          [32m'content-type'[39m,
          [32m'text/plain; charset=utf-8'[39m,
          [32m'x-api-node'[39m,
          [32m'995170affe05'[39m,
          [32m'access-control-allow-credentials'[39m,
          [32m'true'[39m,
          [32m'date'[39m,
          [32m'Thu, 09 Oct 2025 07:36:39 GMT'[39m
        ],
        rawTrailers: [],
        joinDuplicateHeaders: [90mundefined[39m,
        aborted: [33mfalse[39m,
        upgrade: [33mfalse[39m,
        url: [32m''[39m,
        method: [1mnull[22m,
        statusCode: [33m403[39m,
        statusMessage: [32m'Forbidden'[39m,
        client: Socket {
          connecting: [33mfalse[39m,
          _hadError: [33mfalse[39m,
          _parent: [1mnull[22m,
          _host: [32m'localhost'[39m,
          _closeAfterHandlingError: [33mfalse[39m,
          _events: {
            close: [36m[Array][39m,
            error: [36m[Function: socketErrorListener][39m,
            prefinish: [90mundefined[39m,
            finish: [90mundefined[39m,
            drain: [90mundefined[39m,
            data: [90mundefined[39m,
            end: [36m[Function: onReadableStreamEnd][39m,
            readable: [90mundefined[39m,
            connect: [90mundefined[39m,
            free: [36m[Function: onFree][39m,
            timeout: [36m[Array][39m,
            agentRemove: [36m[Function: onRemove][39m
          },
          _readableState: ReadableState {
            highWaterMark: [33m16384[39m,
            buffer: [],
            bufferIndex: [33m0[39m,
            length: [33m0[39m,
            pipes: [],
            awaitDrainWriters: [1mnull[22m,
            [[32mSymbol(kState)[39m]: [33m60303732[39m
          },
          _writableState: WritableState {
            highWaterMark: [33m16384[39m,
            length: [33m0[39m,
            corked: [33m0[39m,
            onwrite: [36m[Function: bound onwrite][39m,
            writelen: [33m0[39m,
            bufferedIndex: [33m0[39m,
            pendingcb: [33m0[39m,
            [[32mSymbol(kState)[39m]: [33m1091450228[39m,
            [[32mSymbol(kBufferedValue)[39m]: [1mnull[22m,
            [[32mSymbol(kWriteCbValue)[39m]: [1mnull[22m
          },
          allowHalfOpen: [33mfalse[39m,
          _maxListeners: [90mundefined[39m,
          _eventsCount: [33m6[39m,
          _sockname: [1mnull[22m,
          _pendingData: [1mnull[22m,
          _pendingEncoding: [32m''[39m,
          server: [1mnull[22m,
          _server: [1mnull[22m,
          timeout: [33m30000[39m,
          parser: [1mnull[22m,
          _httpMessage: [36m[Circular *1][39m,
          autoSelectFamilyAttemptedAddresses: [
            [32m'::1:5080'[39m
          ],
          [[32mSymbol(async_id_symbol)[39m]: [33m5822[39m,
          [[32mSymbol(kHandle)[39m]: [1mnull[22m,
          [[32mSymbol(lastWriteQueueSize)[39m]: [33m0[39m,
          [[32mSymbol(timeout)[39m]: Timeout {
            _idleTimeout: [33m-1[39m,
            _idlePrev: [1mnull[22m,
            _idleNext: [1mnull[22m,
            _idleStart: [33m13154[39m,
            _onTimeout: [1mnull[22m,
            _timerArgs: [90mundefined[39m,
            _repeat: [1mnull[22m,
            _destroyed: [33mtrue[39m,
            [[32mSymbol(refed)[39m]: [33mfalse[39m,
            [[32mSymbol(kHasPrimitive)[39m]: [33mfalse[39m,
            [[32mSymbol(asyncId)[39m]: [33m5842[39m,
            [[32mSymbol(triggerId)[39m]: [33m5824[39m,
            [[32mSymbol(kAsyncContextFrame)[39m]: [90mundefined[39m,
            [[32mSymbol(kResourceStore)[39m]: [32m'Logging Integration Log Analytics Integration should get popular pages through controller'[39m
          },
          [[32mSymbol(kBuffer)[39m]: [1mnull[22m,
          [[32mSymbol(kBufferCb)[39m]: [1mnull[22m,
          [[32mSymbol(kBufferGen)[39m]: [1mnull[22m,
          [[32mSymbol(shapeMode)[39m]: [33mtrue[39m,
          [[32mSymbol(kCapture)[39m]: [33mfalse[39m,
          [[32mSymbol(kSetNoDelay)[39m]: [33mtrue[39m,
          [[32mSymbol(kSetKeepAlive)[39m]: [33mtrue[39m,
          [[32mSymbol(kSetKeepAliveInitialDelay)[39m]: [33m60[39m,
          [[32mSymbol(kBytesRead)[39m]: [33m372[39m,
          [[32mSymbol(kBytesWritten)[39m]: [33m655[39m
        },
        _consuming: [33mfalse[39m,
        _dumped: [33mfalse[39m,
        req: [36m[Circular *1][39m,
        _eventsCount: [33m4[39m,
        responseUrl: [32m'http://localhost:5080/api/default/_search'[39m,
        redirects: [],
        [[32mSymbol(shapeMode)[39m]: [33mtrue[39m,
        [[32mSymbol(kCapture)[39m]: [33mfalse[39m,
        [[32mSymbol(kHeaders)[39m]: {
          [32m'transfer-encoding'[39m: [32m'chunked'[39m,
          connection: [32m'close'[39m,
          vary: [32m'Origin, Access-Control-Request-Method, Access-Control-Request-Headers, accept-encoding'[39m,
          [32m'content-type'[39m: [32m'text/plain; charset=utf-8'[39m,
          [32m'x-api-node'[39m: [32m'995170affe05'[39m,
          [32m'access-control-allow-credentials'[39m: [32m'true'[39m,
          date: [32m'Thu, 09 Oct 2025 07:36:39 GMT'[39m
        },
        [[32mSymbol(kHeadersCount)[39m]: [33m18[39m,
        [[32mSymbol(kTrailers)[39m]: [1mnull[22m,
        [[32mSymbol(kTrailersCount)[39m]: [33m0[39m
      },
      aborted: [33mfalse[39m,
      timeoutCb: [36m[Function: emitRequestTimeout][39m,
      upgradeOrConnect: [33mfalse[39m,
      parser: [1mnull[22m,
      maxHeadersCount: [1mnull[22m,
      reusedSocket: [33mfalse[39m,
      host: [32m'localhost'[39m,
      protocol: [32m'http:'[39m,
      _redirectable: Writable {
        _events: {
          close: [90mundefined[39m,
          error: [36m[Function: handleRequestError][39m,
          prefinish: [90mundefined[39m,
          finish: [90mundefined[39m,
          drain: [90mundefined[39m,
          response: [36m[Function: handleResponse][39m,
          socket: [
            [36m[Function: handleRequestSocket][39m,
            [36m[Function: destroyOnTimeout][39m
          ],
          timeout: [90mundefined[39m,
          abort: [90mundefined[39m
        },
        _writableState: WritableState {
          highWaterMark: [33m16384[39m,
          length: [33m0[39m,
          corked: [33m0[39m,
          onwrite: [36m[Function: bound onwrite][39m,
          writelen: [33m0[39m,
          bufferedIndex: [33m0[39m,
          pendingcb: [33m0[39m,
          [[32mSymbol(kState)[39m]: [33m17580812[39m,
          [[32mSymbol(kBufferedValue)[39m]: [1mnull[22m
        },
        _maxListeners: [90mundefined[39m,
        _options: {
          maxRedirects: [33m21[39m,
          maxBodyLength: [33mInfinity[39m,
          protocol: [32m'http:'[39m,
          path: [32m'/api/default/_search'[39m,
          method: [32m'POST'[39m,
          headers: [Object: null prototype] {
            Accept: [32m'application/json, text/plain, */*'[39m,
            [32m'Content-Type'[39m: [32m'application/json'[39m,
            Authorization: [32m'Bearer '[39m,
            [32m'User-Agent'[39m: [32m'axios/1.12.2'[39m,
            [32m'Content-Length'[39m: [32m'379'[39m,
            [32m'Accept-Encoding'[39m: [32m'gzip, compress, deflate, br'[39m
          },
          agents: {
            http: [90mundefined[39m,
            https: [90mundefined[39m
          },
          auth: [90mundefined[39m,
          family: [90mundefined[39m,
          beforeRedirect: [36m[Function: dispatchBeforeRedirect][39m,
          beforeRedirects: {
            proxy: [36m[Function: beforeRedirect][39m
          },
          hostname: [32m'localhost'[39m,
          port: [32m'5080'[39m,
          agent: [90mundefined[39m,
          nativeProtocols: {
            [32m'http:'[39m: [36m[Object][39m,
            [32m'https:'[39m: [36m[Object][39m
          },
          pathname: [32m'/api/default/_search'[39m
        },
        _ended: [33mtrue[39m,
        _ending: [33mtrue[39m,
        _redirectCount: [33m0[39m,
        _redirects: [],
        _requestBodyLength: [33m379[39m,
        _requestBodyBuffers: [],
        _eventsCount: [33m3[39m,
        _onNativeResponse: [36m[Function (anonymous)][39m,
        _currentRequest: [36m[Circular *1][39m,
        _currentUrl: [32m'http://localhost:5080/api/default/_search'[39m,
        _timeout: [1mnull[22m,
        [[32mSymbol(shapeMode)[39m]: [33mtrue[39m,
        [[32mSymbol(kCapture)[39m]: [33mfalse[39m
      },
      [[32mSymbol(shapeMode)[39m]: [33mfalse[39m,
      [[32mSymbol(kCapture)[39m]: [33mfalse[39m,
      [[32mSymbol(kBytesWritten)[39m]: [33m0[39m,
      [[32mSymbol(kNeedDrain)[39m]: [33mfalse[39m,
      [[32mSymbol(corked)[39m]: [33m0[39m,
      [[32mSymbol(kChunkedBuffer)[39m]: [],
      [[32mSymbol(kChunkedLength)[39m]: [33m0[39m,
      [[32mSymbol(kSocket)[39m]: Socket {
        connecting: [33mfalse[39m,
        _hadError: [33mfalse[39m,
        _parent: [1mnull[22m,
        _host: [32m'localhost'[39m,
        _closeAfterHandlingError: [33mfalse[39m,
        _events: {
          close: [
            [36m[Function: onClose][39m,
            [36m[Function: socketCloseListener][39m
          ],
          error: [36m[Function: socketErrorListener][39m,
          prefinish: [90mundefined[39m,
          finish: [90mundefined[39m,
          drain: [90mundefined[39m,
          data: [90mundefined[39m,
          end: [36m[Function: onReadableStreamEnd][39m,
          readable: [90mundefined[39m,
          connect: [90mundefined[39m,
          free: [36m[Function: onFree][39m,
          timeout: [
            [36m[Function: onTimeout][39m,
            [36m[Function (anonymous)][39m
          ],
          agentRemove: [36m[Function: onRemove][39m
        },
        _readableState: ReadableState {
          highWaterMark: [33m16384[39m,
          buffer: [],
          bufferIndex: [33m0[39m,
          length: [33m0[39m,
          pipes: [],
          awaitDrainWriters: [1mnull[22m,
          [[32mSymbol(kState)[39m]: [33m60303732[39m
        },
        _writableState: WritableState {
          highWaterMark: [33m16384[39m,
          length: [33m0[39m,
          corked: [33m0[39m,
          onwrite: [36m[Function: bound onwrite][39m,
          writelen: [33m0[39m,
          bufferedIndex: [33m0[39m,
          pendingcb: [33m0[39m,
          [[32mSymbol(kState)[39m]: [33m1091450228[39m,
          [[32mSymbol(kBufferedValue)[39m]: [1mnull[22m,
          [[32mSymbol(kWriteCbValue)[39m]: [1mnull[22m
        },
        allowHalfOpen: [33mfalse[39m,
        _maxListeners: [90mundefined[39m,
        _eventsCount: [33m6[39m,
        _sockname: [1mnull[22m,
        _pendingData: [1mnull[22m,
        _pendingEncoding: [32m''[39m,
        server: [1mnull[22m,
        _server: [1mnull[22m,
        timeout: [33m30000[39m,
        parser: [1mnull[22m,
        _httpMessage: [36m[Circular *1][39m,
        autoSelectFamilyAttemptedAddresses: [
          [32m'::1:5080'[39m
        ],
        [[32mSymbol(async_id_symbol)[39m]: [33m5822[39m,
        [[32mSymbol(kHandle)[39m]: [1mnull[22m,
        [[32mSymbol(lastWriteQueueSize)[39m]: [33m0[39m,
        [[32mSymbol(timeout)[39m]: Timeout {
          _idleTimeout: [33m-1[39m,
          _idlePrev: [1mnull[22m,
          _idleNext: [1mnull[22m,
          _idleStart: [33m13154[39m,
          _onTimeout: [1mnull[22m,
          _timerArgs: [90mundefined[39m,
          _repeat: [1mnull[22m,
          _destroyed: [33mtrue[39m,
          [[32mSymbol(refed)[39m]: [33mfalse[39m,
          [[32mSymbol(kHasPrimitive)[39m]: [33mfalse[39m,
          [[32mSymbol(asyncId)[39m]: [33m5842[39m,
          [[32mSymbol(triggerId)[39m]: [33m5824[39m,
          [[32mSymbol(kAsyncContextFrame)[39m]: [90mundefined[39m,
          [[32mSymbol(kResourceStore)[39m]: [32m'Logging Integration Log Analytics Integration should get popular pages through controller'[39m
        },
        [[32mSymbol(kBuffer)[39m]: [1mnull[22m,
        [[32mSymbol(kBufferCb)[39m]: [1mnull[22m,
        [[32mSymbol(kBufferGen)[39m]: [1mnull[22m,
        [[32mSymbol(shapeMode)[39m]: [33mtrue[39m,
        [[32mSymbol(kCapture)[39m]: [33mfalse[39m,
        [[32mSymbol(kSetNoDelay)[39m]: [33mtrue[39m,
        [[32mSymbol(kSetKeepAlive)[39m]: [33mtrue[39m,
        [[32mSymbol(kSetKeepAliveInitialDelay)[39m]: [33m60[39m,
        [[32mSymbol(kBytesRead)[39m]: [33m372[39m,
        [[32mSymbol(kBytesWritten)[39m]: [33m655[39m
      },
      [[32mSymbol(kOutHeaders)[39m]: [Object: null prototype] {
        accept: [
          [32m'Accept'[39m,
          [32m'application/json, text/plain, */*'[39m
        ],
        [32m'content-type'[39m: [
          [32m'Content-Type'[39m,
          [32m'application/json'[39m
        ],
        authorization: [
          [32m'Authorization'[39m,
          [32m'Bearer '[39m
        ],
        [32m'user-agent'[39m: [
          [32m'User-Agent'[39m,
          [32m'axios/1.12.2'[39m
        ],
        [32m'content-length'[39m: [
          [32m'Content-Length'[39m,
          [32m'379'[39m
        ],
        [32m'accept-encoding'[39m: [
          [32m'Accept-Encoding'[39m,
          [32m'gzip, compress, deflate, br'[39m
        ],
        host: [
          [32m'Host'[39m,
          [32m'localhost:5080'[39m
        ]
      },
      [[32mSymbol(errored)[39m]: [1mnull[22m,
      [[32mSymbol(kHighWaterMark)[39m]: [33m16384[39m,
      [[32mSymbol(kRejectNonStandardBodyWrites)[39m]: [33mfalse[39m,
      [[32mSymbol(kUniqueHeaders)[39m]: [1mnull[22m
    },
    data: [32m'Not Supported'[39m
  },
  status: [33m403[39m
}
[31m[Nest] 13280  - [39m2025/10/09 15:36:39 [31m  ERROR[39m [38;5;3m[LogAnalyticsService] [39m[31mFailed to get conversion funnel[39m
AxiosError: Request failed with status code 403
    at settle (D:\onlinestore\backend\node_modules\axios\lib\core\settle.js:19:12)
    at BrotliDecompress.handleStreamEnd (D:\onlinestore\backend\node_modules\axios\lib\adapters\http.js:617:11)
    at BrotliDecompress.emit (node:events:531:35)
    at endReadableNT (node:internal/streams/readable:1698:12)
    at processTicksAndRejections (node:internal/process/task_queues:90:21)
    at Axios.request (D:\onlinestore\backend\node_modules\axios\lib\core\Axios.js:45:41)
    at processTicksAndRejections (node:internal/process/task_queues:105:5)
[31m[Nest] 13280  - [39m2025/10/09 15:36:39 [31m  ERROR[39m [38;5;3m[LoggingController] [39m[31mFailed to get conversion funnel[39m
AxiosError: Request failed with status code 403
    at settle (D:\onlinestore\backend\node_modules\axios\lib\core\settle.js:19:12)
    at BrotliDecompress.handleStreamEnd (D:\onlinestore\backend\node_modules\axios\lib\adapters\http.js:617:11)
    at BrotliDecompress.emit (node:events:531:35)
    at endReadableNT (node:internal/streams/readable:1698:12)
    at processTicksAndRejections (node:internal/process/task_queues:90:21)
    at Axios.request (D:\onlinestore\backend\node_modules\axios\lib\core\Axios.js:45:41)
    at processTicksAndRejections (node:internal/process/task_queues:105:5)
FAIL src/logging/logging.integration.spec.ts (11.896 s)
  Logging Integration
    √ module should be defined (5 ms)
    √ services should be defined (2 ms)
    √ controller should be defined (2 ms)
    Business Logging Integration
      √ should log user action through controller (3 ms)
      √ should log order event through controller (3 ms)
      √ should log payment event through controller (2 ms)
      √ should log inventory event through controller (2 ms)
    User Behavior Tracking Integration
      √ should track page view through controller (2 ms)
      √ should track product view through controller (2 ms)
      √ should track search through controller (2 ms)
      √ should track cart operation through controller (2 ms)
      √ should track checkout through controller (2 ms)
      √ should track purchase through controller (2 ms)
    Log Analytics Integration
      × should get log stats through controller (305 ms)
      × should get user behavior analytics through controller (33 ms)
      × should detect anomalous patterns through controller (22 ms)
      × should get popular pages through controller (36 ms)
      × should get conversion funnel through controller (22 ms)
    Utility Functions Integration
      √ should flush logs through controller (10 ms)
    End-to-End Workflow
      √ should complete a full user journey logging workflow (13 ms)

  ● Logging Integration › Log Analytics Integration › should get log stats through controller

    AxiosError: Request failed with status code 403

      at settle (../node_modules/axios/lib/core/settle.js:19:12)
      at BrotliDecompress.handleStreamEnd (../node_modules/axios/lib/adapters/http.js:617:11)
      at Axios.request (../node_modules/axios/lib/core/Axios.js:45:41)

  ● Logging Integration › Log Analytics Integration › should get user behavior analytics through controller

    expect(received).toBe(expected) // Object.is equality

    Expected: true
    Received: false

    [0m [90m 300 |[39m       )[33m;[39m
     [90m 301 |[39m       
    [31m[1m>[22m[39m[90m 302 |[39m       expect(result[33m.[39msuccess)[33m.[39mtoBe([36mtrue[39m)[33m;[39m
     [90m     |[39m                              [31m[1m^[22m[39m
     [90m 303 |[39m       expect(result[33m.[39mdata)[33m.[39mtoBeDefined()[33m;[39m
     [90m 304 |[39m     })[33m;[39m
     [90m 305 |[39m[0m

      at Object.<anonymous> (logging/logging.integration.spec.ts:302:30)

  ● Logging Integration › Log Analytics Integration › should detect anomalous patterns through controller

    expect(received).toBe(expected) // Object.is equality

    Expected: true
    Received: false

    [0m [90m 323 |[39m       )[33m;[39m
     [90m 324 |[39m       
    [31m[1m>[22m[39m[90m 325 |[39m       expect(result[33m.[39msuccess)[33m.[39mtoBe([36mtrue[39m)[33m;[39m
     [90m     |[39m                              [31m[1m^[22m[39m
     [90m 326 |[39m       expect(result[33m.[39mdata)[33m.[39mtoBeDefined()[33m;[39m
     [90m 327 |[39m     })[33m;[39m
     [90m 328 |[39m[0m

      at Object.<anonymous> (logging/logging.integration.spec.ts:325:30)

  ● Logging Integration › Log Analytics Integration › should get popular pages through controller

    expect(received).toBe(expected) // Object.is equality

    Expected: true
    Received: false

    [0m [90m 349 |[39m       )[33m;[39m
     [90m 350 |[39m       
    [31m[1m>[22m[39m[90m 351 |[39m       expect(result[33m.[39msuccess)[33m.[39mtoBe([36mtrue[39m)[33m;[39m
     [90m     |[39m                              [31m[1m^[22m[39m
     [90m 352 |[39m       expect(result[33m.[39mdata)[33m.[39mtoBeDefined()[33m;[39m
     [90m 353 |[39m       expect([33mArray[39m[33m.[39misArray(result[33m.[39mdata))[33m.[39mtoBe([36mtrue[39m)[33m;[39m
     [90m 354 |[39m     })[33m;[39m[0m

      at Object.<anonymous> (logging/logging.integration.spec.ts:351:30)

  ● Logging Integration › Log Analytics Integration › should get conversion funnel through controller

    expect(received).toBe(expected) // Object.is equality

    Expected: true
    Received: false

    [0m [90m 377 |[39m       )[33m;[39m
     [90m 378 |[39m       
    [31m[1m>[22m[39m[90m 379 |[39m       expect(result[33m.[39msuccess)[33m.[39mtoBe([36mtrue[39m)[33m;[39m
     [90m     |[39m                              [31m[1m^[22m[39m
     [90m 380 |[39m       expect(result[33m.[39mdata)[33m.[39mtoBeDefined()[33m;[39m
     [90m 381 |[39m       expect([33mArray[39m[33m.[39misArray(result[33m.[39mdata))[33m.[39mtoBe([36mtrue[39m)[33m;[39m
     [90m 382 |[39m     })[33m;[39m[0m

      at Object.<anonymous> (logging/logging.integration.spec.ts:379:30)

PASS src/cart/test/cart.integration.spec.ts
  Cart Integration Tests
    CartDomainService
      √ should validate add to cart (24 ms)
      √ should calculate cart total (6 ms)
      √ should calculate cart item count (8 ms)
    CartItemAggregate
      √ should create cart item (5 ms)
      √ should update quantity (8 ms)
      √ should toggle select flag (4 ms)
      √ should calculate total price (4 ms)
      √ should validate cart item (5 ms)

FAIL src/cqrs/cqrs.module.integration.spec.ts
  ● Test suite failed to run

    [96msrc/cqrs/cqrs.module.integration.spec.ts[0m:[93m139[0m:[93m32[0m - [91merror[0m[90m TS2345: [0mArgument of type '{ name: string; execute: jest.MockInstance<Promise<any>, [command: any, next: () => Promise<any>], any>; }' is not assignable to parameter of type 'ICommandMiddleware'.
      Types of property 'execute' are incompatible.
        Type 'MockInstance<Promise<any>, [command: any, next: () => Promise<any>], any>' is not assignable to type '<TCommand extends ICommand>(command: TCommand, next: () => Promise<ICommandResult<any>>) => Promise<ICommandResult<any>>'.
          Type 'MockInstance<Promise<any>, [command: any, next: () => Promise<any>], any>' provides no match for the signature '<TCommand extends ICommand>(command: TCommand, next: () => Promise<ICommandResult<any>>): Promise<ICommandResult<any>>'.

    [7m139[0m       commandBus.addMiddleware(middleware1);
    [7m   [0m [91m                               ~~~~~~~~~~~[0m
    [96msrc/cqrs/cqrs.module.integration.spec.ts[0m:[93m140[0m:[93m32[0m - [91merror[0m[90m TS2345: [0mArgument of type '{ name: string; execute: jest.MockInstance<Promise<any>, [command: any, next: () => Promise<any>], any>; }' is not assignable to parameter of type 'ICommandMiddleware'.
      Types of property 'execute' are incompatible.
        Type 'MockInstance<Promise<any>, [command: any, next: () => Promise<any>], any>' is not assignable to type '<TCommand extends ICommand>(command: TCommand, next: () => Promise<ICommandResult<any>>) => Promise<ICommandResult<any>>'.
          Type 'MockInstance<Promise<any>, [command: any, next: () => Promise<any>], any>' provides no match for the signature '<TCommand extends ICommand>(command: TCommand, next: () => Promise<ICommandResult<any>>): Promise<ICommandResult<any>>'.

    [7m140[0m       commandBus.addMiddleware(middleware2);
    [7m   [0m [91m                               ~~~~~~~~~~~[0m

Test Suites: 2 failed, 1 passed, 3 total
Tests:       5 failed, 23 passed, 28 total
Snapshots:   0 total
Time:        15.295 s
Ran all test suites matching .*\.integration\.spec\.ts$|src/logging/logging.integration.spec.ts.

Jest has detected the following 3 open handles potentially keeping Jest from exiting:

  ●  bound-anonymous-fn,finish

    [0m [90m 24 |[39m     
     [90m 25 |[39m     [36mtry[39m {
    [31m[1m>[22m[39m[90m 26 |[39m       [36mconst[39m response [33m=[39m [36mawait[39m firstValueFrom(
     [90m    |[39m                                            [31m[1m^[22m[39m
     [90m 27 |[39m         [36mthis[39m[33m.[39mhttpService[33m.[39mpost(
     [90m 28 |[39m           [32m`${this.config.url}/api/${this.config.organization}/_search`[39m[33m,[39m
     [90m 29 |[39m           { query }[33m,[39m[0m

      at RedirectableRequest._performRequest (../node_modules/follow-redirects/index.js:337:24)
      at new RedirectableRequest (../node_modules/follow-redirects/index.js:111:8)
      at Object.request (../node_modules/follow-redirects/index.js:543:14)
      at dispatchHttpRequest (../node_modules/axios/lib/adapters/http.js:482:21)
      at ../node_modules/axios/lib/adapters/http.js:155:5
      at wrapAsync (../node_modules/axios/lib/adapters/http.js:135:10)
      at http (../node_modules/axios/lib/adapters/http.js:173:10)
      at Axios.dispatchRequest (../node_modules/axios/lib/core/dispatchRequest.js:51:10)
      at Axios._request (../node_modules/axios/lib/core/Axios.js:185:33)
      at Axios.request (../node_modules/axios/lib/core/Axios.js:40:25)
      at Axios.httpMethod [as post] (../node_modules/axios/lib/core/Axios.js:224:19)
      at wrap (../node_modules/axios/lib/helpers/bind.js:5:15)
      at Observable._subscribe (../node_modules/@nestjs/axios/dist/http.service.js:71:13)
      at Observable._trySubscribe (../node_modules/rxjs/src/internal/Observable.ts:235:19)
      at ../node_modules/rxjs/src/internal/Observable.ts:225:18
      at Object.errorContext (../node_modules/rxjs/src/internal/util/errorContext.ts:29:5)
      at Observable.subscribe (../node_modules/rxjs/src/internal/Observable.ts:211:5)
      at ../node_modules/rxjs/src/internal/firstValueFrom.ts:73:12
      at firstValueFrom (../node_modules/rxjs/src/internal/firstValueFrom.ts:58:10)
      at LogAnalyticsService.getLogStats (logging/log-analytics.service.ts:26:44)
      at LoggingController.getLogStats (logging/logging.controller.ts:312:50)
      at Object.<anonymous> (logging/logging.integration.spec.ts:271:46)


  ●  bound-anonymous-fn,finish

    [0m [90m 75 |[39m     
     [90m 76 |[39m     [36mtry[39m {
    [31m[1m>[22m[39m[90m 77 |[39m       [36mawait[39m axios[33m.[39mpost([36mthis[39m[33m.[39mendpoint[33m,[39m batch[33m,[39m {
     [90m    |[39m                   [31m[1m^[22m[39m
     [90m 78 |[39m         headers[33m:[39m {
     [90m 79 |[39m           [32m'Content-Type'[39m[33m:[39m [32m'application/json'[39m[33m,[39m
     [90m 80 |[39m           [32m'Authorization'[39m[33m:[39m [32m`Bearer ${this.options.token}`[39m[0m

      at RedirectableRequest._performRequest (../node_modules/follow-redirects/index.js:337:24)
      at new RedirectableRequest (../node_modules/follow-redirects/index.js:111:8)
      at Object.request (../node_modules/follow-redirects/index.js:543:14)
      at dispatchHttpRequest (../node_modules/axios/lib/adapters/http.js:482:21)
      at ../node_modules/axios/lib/adapters/http.js:155:5
      at wrapAsync (../node_modules/axios/lib/adapters/http.js:135:10)
      at http (../node_modules/axios/lib/adapters/http.js:173:10)
      at Axios.dispatchRequest (../node_modules/axios/lib/core/dispatchRequest.js:51:10)
      at Axios._request (../node_modules/axios/lib/core/Axios.js:185:33)
      at Axios.request (../node_modules/axios/lib/core/Axios.js:40:25)
      at Axios.httpMethod [as post] (../node_modules/axios/lib/core/Axios.js:224:19)
      at Function.wrap (../node_modules/axios/lib/helpers/bind.js:5:15)
      at OpenObserveTransport.flush (logging/openobserve-transport.js:77:19)
      at UserBehaviorTracker.flush (logging/user-behavior-tracker.service.ts:177:35)
      at LoggingController.flushLogs (logging/logging.controller.ts:423:32)
      at Object.<anonymous> (logging/logging.integration.spec.ts:387:46)


  ●  bound-anonymous-fn,finish

    [0m [90m 75 |[39m     
     [90m 76 |[39m     [36mtry[39m {
    [31m[1m>[22m[39m[90m 77 |[39m       [36mawait[39m axios[33m.[39mpost([36mthis[39m[33m.[39mendpoint[33m,[39m batch[33m,[39m {
     [90m    |[39m                   [31m[1m^[22m[39m
     [90m 78 |[39m         headers[33m:[39m {
     [90m 79 |[39m           [32m'Content-Type'[39m[33m:[39m [32m'application/json'[39m[33m,[39m
     [90m 80 |[39m           [32m'Authorization'[39m[33m:[39m [32m`Bearer ${this.options.token}`[39m[0m

      at RedirectableRequest._performRequest (../node_modules/follow-redirects/index.js:337:24)
      at new RedirectableRequest (../node_modules/follow-redirects/index.js:111:8)
      at Object.request (../node_modules/follow-redirects/index.js:543:14)
      at dispatchHttpRequest (../node_modules/axios/lib/adapters/http.js:482:21)
      at ../node_modules/axios/lib/adapters/http.js:155:5
      at wrapAsync (../node_modules/axios/lib/adapters/http.js:135:10)
      at http (../node_modules/axios/lib/adapters/http.js:173:10)
      at Axios.dispatchRequest (../node_modules/axios/lib/core/dispatchRequest.js:51:10)
      at Axios._request (../node_modules/axios/lib/core/Axios.js:185:33)
      at Axios.request (../node_modules/axios/lib/core/Axios.js:40:25)
      at Axios.httpMethod [as post] (../node_modules/axios/lib/core/Axios.js:224:19)
      at Function.wrap (../node_modules/axios/lib/helpers/bind.js:5:15)
      at OpenObserveTransport.flush (logging/openobserve-transport.js:77:19)
      at BusinessLoggerService.flush (logging/business-logger.service.ts:160:35)
      at LoggingController.flushLogs (logging/logging.controller.ts:422:34)
      at Object.<anonymous> (logging/logging.integration.spec.ts:387:46)

