# 用途：Paperless-NGX Docker Compose配置（生产环境优化版）
# 依赖文件：docker-compose.env
# 作者：AI助手
# 时间：2025-09-30 16:00:00

# 生产环境Docker Compose配置，支持Kubernetes迁移
# 主要改进：
# 1. 添加PostgreSQL数据库支持
# 2. 优化资源限制和健康检查
# 3. 支持多环境配置
# 4. 添加备份和监控配置

services:
  # Redis缓存服务
  broker:
    image: docker.io/library/redis:8-alpine
    restart: unless-stopped
    command: redis-server --appendonly yes --requirepass ${REDIS_PASSWORD}
    volumes:
      - redisdata:/data
    environment:
      REDIS_PASSWORD: ${REDIS_PASSWORD}
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3
    deploy:
      resources:
        limits:
          memory: 256M
          cpus: '0.5'
        reservations:
          memory: 128M
          cpus: '0.2'

  # PostgreSQL数据库服务
  database:
    image: postgres:15
    restart: unless-stopped
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    volumes:
      - postgresdata:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    deploy:
      resources:
        limits:
          memory: 1G
          cpus: '1.0'
        reservations:
          memory: 512M
          cpus: '0.5'

  # Paperless-NGX主服务
  webserver:
    image: ghcr.io/paperless-ngx/paperless-ngx:latest
    restart: unless-stopped
    depends_on:
      broker:
        condition: service_healthy
      database:
        condition: service_healthy
    ports:
      - "${PAPERLESS_PORT}:8000"
    volumes:
      - ../paperless-data:/usr/src/paperless/data
      - ../paperless-data/media:/usr/src/paperless/media
      - ./export:/usr/src/paperless/export
      - ./consume:/usr/src/paperless/consume
      - ./backups:/usr/src/paperless/backups
    env_file: docker-compose.env
    environment:
      PAPERLESS_REDIS: redis://broker:6379
      PAPERLESS_DBHOST: database
      PAPERLESS_DBNAME: ${POSTGRES_DB}
      PAPERLESS_DBUSER: ${POSTGRES_USER}
      PAPERLESS_DBPASS: ${POSTGRES_PASSWORD}
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/api/"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 60s
    deploy:
      resources:
        limits:
          memory: 2G
          cpus: '2.0'
        reservations:
          memory: 1G
          cpus: '1.0'

  # 监控和备份服务（可选）
  monitor:
    image: prom/node-exporter:latest
    restart: unless-stopped
    ports:
      - "9100:9100"
    deploy:
      resources:
        limits:
          memory: 128M
          cpus: '0.1'

volumes:
  data:
  media:
  redisdata:
  postgresdata:
