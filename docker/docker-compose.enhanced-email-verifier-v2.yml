version: '3.8'

services:
  # 增强的Email Verifier服务
  email-verifier:
    build:
      context: ./email-verifier
      dockerfile: Dockerfile
    container_name: enhanced-email-verifier
    restart: unless-stopped
    ports:
      - "8080:8080"
    environment:
      # 基础配置
      - PORT=8080
      - HOST=0.0.0.0
      - APP_VERSION=2.0.0
      
      # SMTP配置
      - ENABLE_SMTP_CHECK=false
      - SMTP_TIMEOUT=10s
      
      # 代理配置
      # - SOCKS_PROXY=socks5://user:pass@proxy:1080
      
      # 一次性域名自动更新
      - AUTO_UPDATE_DISPOSABLE=true
      - UPDATE_INTERVAL=24h
      
      # 日志配置
      - LOG_LEVEL=info
      
      # 性能配置
      - EMAIL_VERIFIER_MAX_CONCURRENCY=50
      - EMAIL_VERIFIER_DOMAIN_RATE_LIMIT=3
      - EMAIL_VERIFIER_GLOBAL_RATE_LIMIT=200
      
      # OpenObserve配置
      - OPENOBSERVE_ENABLED=true
      - OPENOBSERVE_BASE_URL=http://openobserve:5080
      - OPENOBSERVE_ORG=default
      - OPENOBSERVE_STREAM=email_verification
      
    volumes:
      - email-verifier-data:/app/data
      - ../backend/src/email-verification:/app/src/email-verification:ro
    
    networks:
      - email-verifier-network
    
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:8080/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 10s
    
    # 资源限制
    deploy:
      resources:
        limits:
          memory: 1G
          cpus: '1.0'
        reservations:
          memory: 512M
          cpus: '0.5'
    
    # 依赖服务
    depends_on:
      redis:
        condition: service_healthy
      openobserve:
        condition: service_healthy

  # Redis缓存和会话存储
  redis:
    image: redis:7-alpine
    container_name: email-verifier-redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    environment:
      - REDIS_PASSWORD=${REDIS_PASSWORD:-}
      - REDIS_DB=0
    volumes:
      - redis-data:/data
      - ./redis/redis.conf:/usr/local/etc/redis/redis.conf:ro
    networks:
      - email-verifier-network
    command: redis-server /usr/local/etc/redis/redis.conf
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 3
    deploy:
      resources:
        limits:
          memory: 512M
          cpus: '0.5'
        reservations:
          memory: 256M
          cpus: '0.25'

  # OpenObserve日志和指标收集
  openobserve:
    image: public.ecr.aws/zinclabs/openobserve:latest
    container_name: email-verifier-openobserve
    restart: unless-stopped
    ports:
      - "5080:5080"
    environment:
      - ZO_ROOT_USER_EMAIL=${OPENOBSERVE_EMAIL:-admin@example.com}
      - ZO_ROOT_USER_PASSWORD=${OPENOBSERVE_PASSWORD:-Complexpass#123}
      - ZO_DATA_DIR=/data
    volumes:
      - openobserve-data:/data
    networks:
      - email-verifier-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5080/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s
    deploy:
      resources:
        limits:
          memory: 1G
          cpus: '1.0'
        reservations:
          memory: 512M
          cpus: '0.5'

  # Nginx反向代理和负载均衡
  nginx:
    image: nginx:alpine
    container_name: email-verifier-nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    environment:
      - NGINX_WORKER_PROCESSES=auto
      - NGINX_WORKER_CONNECTIONS=1024
    volumes:
      - ./nginx/enhanced-nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/ssl:/etc/nginx/ssl:ro
      - ./nginx/logs:/var/log/nginx
    networks:
      - email-verifier-network
    depends_on:
      email-verifier:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    deploy:
      resources:
        limits:
          memory: 256M
          cpus: '0.25'
        reservations:
          memory: 128M
          cpus: '0.1'

volumes:
  email-verifier-data:
    driver: local
  redis-data:
    driver: local
  openobserve-data:
    driver: local

networks:
  email-verifier-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16