events {
    worker_connections 1024;
    use epoll;
    multi_accept on;
}

http {
    include /etc/nginx/mime.types;
    default_type application/octet-stream;

    # 日志格式
    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for" '
                    'rt=$request_time uct="$upstream_connect_time" '
                    'uht="$upstream_header_time" urt="$upstream_response_time" '
                    'cs="$upstream_cache_status"';

    log_format detailed '$remote_addr - $remote_user [$time_local] "$request" '
                       '$status $body_bytes_sent "$http_referer" '
                       '"$http_user_agent" "$http_x_forwarded_for" '
                       'rt=$request_time uct="$upstream_connect_time" '
                       'uht="$upstream_header_time" urt="$upstream_response_time" '
                       'cs="$upstream_cache_status" '
                       'request_id=$http_x_request_id '
                       'api_version=$http_api_version';

    access_log /var/log/nginx/access.log detailed;
    error_log /var/log/nginx/error.log warn;

    # 基础配置
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    types_hash_max_size 2048;
    server_tokens off;

    # Gzip压缩
    gzip on;
    gzip_vary on;
    gzip_min_length 1024;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_types
        text/plain
        text/css
        text/xml
        text/javascript
        application/json
        application/javascript
        application/xml+rss
        application/atom+xml
        image/svg+xml;

    # 限流配置
    limit_req_zone $binary_remote_addr zone=email_verify_global:10m rate=20r/s;
    limit_req_zone $binary_remote_addr zone=email_verify_strict:10m rate=5r/s;
    limit_req_zone $binary_remote_addr zone=email_verify_batch:10m rate=2r/s;
    limit_req_zone $binary_remote_addr zone=email_verify_cache:10m rate=10r/s;
    
    # 连接限制
    limit_conn_zone $binary_remote_addr zone=email_verify_conn:10m;

    # 缓存配置
    proxy_cache_path /var/cache/nginx/email_verify levels=1:2 keys_zone=email_verify_cache:10m 
                     max_size=100m inactive=10m use_temp_path=off;

    # 上游服务器配置
    upstream email_verifier_backend {
        least_conn;
        server email-verifier:8080 max_fails=3 fail_timeout=30s;
        keepalive 32;
    }

    # 速率限制映射
    map $request_method $rate_limit_key {
        default $binary_remote_addr;
    }

    # 主服务器配置
    server {
        listen 80;
        server_name email-verifier.yourdomain.com;

        # 安全头
        add_header X-Frame-Options "SAMEORIGIN" always;
        add_header X-Content-Type-Options "nosniff" always;
        add_header X-XSS-Protection "1; mode=block" always;
        add_header Referrer-Policy "strict-origin-when-cross-origin" always;
        add_header Content-Security-Policy "default-src 'self'; script-src 'self' 'unsafe-inline'; style-src 'self' 'unsafe-inline'; img-src 'self' data: https:; font-src 'self'; connect-src 'self'; frame-ancestors 'self';" always;

        # 连接限制
        limit_conn email_verify_conn 20;

        # 根路径重定向到API文档
        location = / {
            return 302 /api/docs;
        }

        # API文档
        location /api/docs {
            return 200 '{"title":"Email Verification API","version":"2.0.0","description":"Enhanced email verification service","baseUrl":"$scheme://$server_name","endpoints":{"verification":{"POST /api/v1/email/verify":"Verify a single email address","POST /api/v1/email/verify-batch":"Verify multiple email addresses"},"monitoring":{"GET /api/v1/email/health":"Get service health status","GET /api/v1/email/metrics":"Get detailed service metrics","GET /api/v1/email/config":"Get service configuration"},"cache":{"POST /api/v1/email/cache/clear":"Clear cache"}}}';
            add_header Content-Type application/json;
        }

        # 健康检查端点
        location /health {
            proxy_pass http://email_verifier_backend/health;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # 健康检查不限流
            access_log off;
        }

        # OpenTelemetry指标端点
        location /metrics {
            proxy_pass http://email_verifier_backend/metrics;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # 限流
            limit_req zone=email_verify_global burst=50 nodelay;
        }

        # API版本1 - 单个邮箱验证
        location /api/v1/email/verify {
            # 严格限流
            limit_req zone=email_verify_strict burst=10 nodelay;
            
            proxy_pass http://email_verifier_backend;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-Request-ID $request_id;
            proxy_set_header API-Version "v1";
            
            # 超时设置
            proxy_connect_timeout 5s;
            proxy_send_timeout 30s;
            proxy_read_timeout 30s;
            
            # 缓存设置（仅对成功响应）
            proxy_cache email_verify_cache;
            proxy_cache_methods POST;
            proxy_cache_key "$scheme$request_method$host$request_uri$request_body";
            proxy_cache_valid 200 5m;
            proxy_cache_bypass $http_pragma $http_authorization;
            proxy_no_cache $http_pragma $http_authorization;
            
            # 错误处理
            proxy_intercept_errors on;
            error_page 429 = @rate_limit_exceeded;
            error_page 502 503 504 = @service_unavailable;
        }

        # API版本1 - 批量邮箱验证
        location /api/v1/email/verify-batch {
            # 批量限流
            limit_req zone=email_verify_batch burst=5 nodelay;
            
            proxy_pass http://email_verifier_backend;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-Request-ID $request_id;
            proxy_set_header API-Version "v1";
            
            # 超时设置（批量处理需要更长超时）
            proxy_connect_timeout 5s;
            proxy_send_timeout 120s;
            proxy_read_timeout 120s;
            
            # 请求体大小限制
            client_max_body_size 1M;
            
            # 错误处理
            proxy_intercept_errors on;
            error_page 429 = @rate_limit_exceeded;
            error_page 502 503 504 = @service_unavailable;
        }

        # API版本1 - 监控端点
        location /api/v1/email/health {
            # 宽松限流
            limit_req zone=email_verify_global burst=30 nodelay;
            
            proxy_pass http://email_verifier_backend;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-Request-ID $request_id;
            proxy_set_header API-Version "v1";
            
            # 缓存健康检查结果（短时间）
            proxy_cache email_verify_cache;
            proxy_cache_valid 200 30s;
            proxy_cache_key "$scheme$request_method$host$request_uri";
        }

        # API版本1 - 指标端点
        location /api/v1/email/metrics {
            # 宽松限流
            limit_req zone=email_verify_global burst=20 nodelay;
            
            proxy_pass http://email_verifier_backend;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-Request-ID $request_id;
            proxy_set_header API-Version "v1";
        }

        # API版本1 - 配置端点
        location /api/v1/email/config {
            # 宽松限流
            limit_req zone=email_verify_global burst=20 nodelay;
            
            proxy_pass http://email_verifier_backend;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-Request-ID $request_id;
            proxy_set_header API-Version "v1";
            
            # 缓存配置（配置变化不频繁）
            proxy_cache email_verify_cache;
            proxy_cache_valid 200 10m;
            proxy_cache_key "$scheme$request_method$host$request_uri";
        }

        # API版本1 - 缓存管理端点
        location /api/v1/email/cache/clear {
            # 严格限流
            limit_req zone=email_verify_strict burst=5 nodelay;
            
            proxy_pass http://email_verifier_backend;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-Request-ID $request_id;
            proxy_set_header API-Version "v1";
            
            # 清除相关缓存
            proxy_cache_bypass 1;
        }

        # API版本1 - 监控状态端点
        location /api/v1/monitoring/openobserve {
            # 宽松限流
            limit_req zone=email_verify_global burst=20 nodelay;
            
            proxy_pass http://email_verifier_backend;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-Request-ID $request_id;
            proxy_set_header API-Version "v1";
        }

        # 兼容旧版本API (v0)
        location /api/email/verify {
            # 普通限流
            limit_req zone=email_verify_global burst=20 nodelay;
            
            proxy_pass http://email_verifier_backend;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-Request-ID $request_id;
            proxy_set_header API-Version "v0";
            
            # 缓存设置
            proxy_cache email_verify_cache;
            proxy_cache_methods POST;
            proxy_cache_key "$scheme$request_method$host$request_uri$request_body";
            proxy_cache_valid 200 5m;
        }

        location /api/email/verify-batch {
            # 普通限流
            limit_req zone=email_verify_batch burst=5 nodelay;
            
            proxy_pass http://email_verifier_backend;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-Request-ID $request_id;
            proxy_set_header API-Version "v0";
            
            # 请求体大小限制
            client_max_body_size 1M;
        }

        location /api/email/health {
            proxy_pass http://email_verifier_backend;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-Request-ID $request_id;
            proxy_set_header API-Version "v0";
            
            # 缓存健康检查结果
            proxy_cache email_verify_cache;
            proxy_cache_valid 200 30s;
        }

        location /api/email/config {
            proxy_pass http://email_verifier_backend;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-Request-ID $request_id;
            proxy_set_header API-Version "v0";
            
            # 缓存配置
            proxy_cache email_verify_cache;
            proxy_cache_valid 200 10m;
        }

        location /api/email/cache/clear {
            # 严格限流
            limit_req zone=email_verify_strict burst=5 nodelay;
            
            proxy_pass http://email_verifier_backend;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-Request-ID $request_id;
            proxy_set_header API-Version "v0";
            
            # 清除相关缓存
            proxy_cache_bypass 1;
        }

        # 错误处理
        location @rate_limit_exceeded {
            return 429 '{"success":false,"error":"Rate limit exceeded","code":"RATE_LIMIT_EXCEEDED","retryAfter":60}';
            add_header Content-Type application/json;
        }

        location @service_unavailable {
            return 503 '{"success":false,"error":"Service temporarily unavailable","code":"SERVICE_UNAVAILABLE"}';
            add_header Content-Type application/json;
        }

        # 拒绝其他请求
        location / {
            return 404 '{"success":false,"error":"Endpoint not found","code":"NOT_FOUND"}';
            add_header Content-Type application/json;
        }
    }

    # HTTPS配置（如果有SSL证书）
    server {
        listen 443 ssl http2;
        server_name email-verifier.yourdomain.com;
        
        # SSL配置
        ssl_certificate /etc/nginx/ssl/cert.pem;
        ssl_certificate_key /etc/nginx/ssl/key.pem;
        ssl_protocols TLSv1.2 TLSv1.3;
        ssl_ciphers ECDHE-RSA-AES256-GCM-SHA512:DHE-RSA-AES256-GCM-SHA512:ECDHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES256-GCM-SHA384;
        ssl_prefer_server_ciphers off;
        ssl_session_cache shared:SSL:10m;
        ssl_session_timeout 10m;
        
        # HSTS
        add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;
        
        # 其他配置同HTTP
        include /etc/nginx/conf.d/common.conf;
    }
}