# Nginx安全配置
# 作者：AI助手
# 时间：2025-09-27

server {
    listen 80;
    server_name yourdomain.com;
    
    # 基础安全头
    add_header X-Frame-Options "DENY" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Referrer-Policy "strict-origin-when-cross-origin" always;
    
    # 隐藏服务器信息
    server_tokens off;
    more_set_headers 'Server: Protected Server';
    
    # 限制请求大小
    client_max_body_size 10M;
    client_body_buffer_size 128k;
    
    # 超时设置
    client_body_timeout 10;
    client_header_timeout 10;
    keepalive_timeout 5 5;
    send_timeout 10;
    
    # 限制请求方法
    if ($request_method !~ ^(GET|HEAD|POST)$ ) {
        return 444;
    }
    
    # 防盗链配置
    location ~* \.(jpg|jpeg|png|gif|webp|avif|ico|css|js)$ {
        valid_referers none blocked yourdomain.com *.yourdomain.com;
        if ($invalid_referer) {
            return 403;
        }
        
        # 缓存设置
        expires 1y;
        add_header Cache-Control "public, immutable";
        add_header Vary "Accept-Encoding";
    }
    
    # API接口保护
    location /api/ {
        # 限制请求频率
        limit_req_zone $binary_remote_addr zone=api:10m rate=10r/s;
        limit_req zone=api burst=20 nodelay;
        
        # 限制并发连接数
        limit_conn_zone $binary_remote_addr zone=addr:10m;
        limit_conn addr 10;
        
        # 安全头
        add_header X-API-Version "1.0" always;
        add_header X-Content-Type-Options "nosniff" always;
        
        # 代理设置
        proxy_pass http://backend:3000;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # 超时设置
        proxy_connect_timeout 30s;
        proxy_send_timeout 30s;
        proxy_read_timeout 30s;
    }
    
    # 静态文件保护
    location ~* \.(js|css|map)$ {
        # 禁止直接访问源文件
        if ($args ~* "source") {
            return 403;
        }
        
        # 添加版本验证
        if ($request_uri ~* "\.(js|css)\?v=([0-9a-f]+)") {
            set $hash $2;
            # 这里可以添加哈希验证逻辑
        }
        
        # 缓存设置
        expires 1y;
        add_header Cache-Control "public, immutable";
    }
    
    # 敏感文件保护
    location ~ /\. {
        deny all;
        access_log off;
        log_not_found off;
        return 404;
    }
    
    location ~ /(\.git|\.env|config|backup|admin) {
        deny all;
        access_log off;
        log_not_found off;
        return 404;
    }
    
    # 爬虫限制
    location ~* (robots\.txt|sitemap\.xml) {
        # 允许搜索引擎访问
        allow all;
    }
    
    # 用户代理过滤
    set $block_user_agents 0;
    if ($http_user_agent ~* (wget|curl|HTTrack|clshttp|archiver|loader|email|harvest|extract|grab|miner|scanner)) {
        set $block_user_agents 1;
    }
    if ($block_user_agents = 1) {
        return 403;
    }
    
    # 异常IP处理
    location /blocked {
        return 444;
    }
    
    # 错误页面
    error_page 403 /403.html;
    error_page 404 /404.html;
    error_page 500 502 503 504 /50x.html;
    
    location = /403.html {
        root /usr/share/nginx/html;
        internal;
    }
    
    location = /404.html {
        root /usr/share/nginx/html;
        internal;
    }
    
    location = /50x.html {
        root /usr/share/nginx/html;
        internal;
    }
    
    # 主站点配置
    location / {
        root /usr/share/nginx/html;
        index index.html index.htm;
        
        # SPA路由支持
        try_files $uri $uri/ /index.html;
        
        # 安全头
        add_header X-Frame-Options "DENY" always;
        add_header X-Content-Type-Options "nosniff" always;
        add_header X-XSS-Protection "1; mode=block" always;
        
        # 缓存控制
        location ~* \.(html|htm)$ {
            expires -1;
            add_header Cache-Control "no-cache, no-store, must-revalidate";
        }
    }
    
    # 日志配置
    access_log /var/log/nginx/access.log main buffer=32k flush=5m;
    error_log /var/log/nginx/error.log warn;
    
    # 限制访问日志中的敏感信息
    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for"';
}

# SSL配置（如果使用HTTPS）
server {
    listen 443 ssl http2;
    server_name yourdomain.com;
    
    ssl_certificate /etc/ssl/certs/yourdomain.com.crt;
    ssl_certificate_key /etc/ssl/private/yourdomain.com.key;
    
    # SSL安全配置
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers ECDHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384;
    ssl_prefer_server_ciphers off;
    ssl_session_cache shared:SSL:10m;
    ssl_session_timeout 10m;
    
    # HSTS头
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;
    
    # 其他配置与HTTP版本相同
    # ...（复制上面的配置）
}

# 限制特定IP段的访问
geo $block_ip {
    default 0;
    # 添加要阻止的IP段
    192.168.0.0/16 1;
    10.0.0.0/8 1;
}

server {
    # 在server块开头添加IP过滤
    if ($block_ip) {
        return 403;
    }
    
    # 其他配置...
}